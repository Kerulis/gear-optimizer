{"version":3,"sources":["../webpack/bootstrap","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../gear-optimizer/src/assets/ItemAux.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../gear-optimizer/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../gear-optimizer/src/util.js","../../../gear-optimizer/src/sagas/optimize.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof2","obj","iterator","constructor","_typeof","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_inherits","subClass","superClass","TypeError","writable","configurable","_classCallCheck","instance","Constructor","Item","slot","zone","level","props","this","statnames","base","disable","length","push","EmptySlot","_Item","_this","undefined","empty","Equip","_Item2","_this2","items","counts","getOwnPropertyNames","Slot","map","x","Stat","POWER","TOUGHNESS","RESPAWN","ItemContainer","names","slotlist","accslots","list","filter","ACCESSORY","jdx","WEAPON","HEAD","CHEST","PANTS","BOOTS","ADVANCE_TRAINING","AP","AUGMENT_SPEED","BEARD_SPEED","COOKING","DAYCARE_SPEED","DROP_CHANCE","ENERGY_BARS","ENERGY_CAP","ENERGY_POWER","ENERGY_SPEED","EXPERIENCE","GOLD_DROP","HACK_SPEED","MAGIC_BARS","MAGIC_CAP","MAGIC_POWER","MAGIC_SPEED","MOVE_COOLDOWN","NGU_SPEED","QUEST_DROP","RES3_BARS","RES3_CAP","RES3_POWER","SEED_DROP","WANDOOS_SPEED","WISH_SPEED","YGGDRASIL_YIELD","Factors","NONE","ENGU","MNGU","HACK","NGUS","NGUSHACK","WANDOOS","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","from","_iterableToArray","_nonIterableSpread","compute_optimal","item_names","factor","totalslots","maxslots","base_layouts","optimal","clone","score","score_product","item_count","sort","a","b","changed","_loop","layout","base_layout","options","gear_slot","reduce","remaining","pareto","layouts","outfits","accs","idx","console","log","_optimal","candidate","knapsack","add_equip","apply","optimal_size","scores","item","remove_equip","pop","top_score","filtered","done","_loop3","tmp","_loop2","equip","stat","cart_aux","_ref","concat","e","cartesian","_len","arguments","_key","stats","type","equiped","includes","copy","Date","setTime","getTime","len","attr","Error","knapsack_combine_single","last","add","max_with","capacity","zero_state","weight","matrix_weight","w","dominates","major","minor","equal","major_stats","fill","minor_stats","indexOf","cutoff","dominated","j","result","val","addEventListener","state","data","ItemAux_Equip","factors","factorname","respawn","daycare","Math","floor","random","ItemAux_ItemContainer","postMessage","close"],"mappings":"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","file":"43824c452ad0c8972247.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/gear-optimizer/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export class Item {\n        constructor(name, slot, zone, level, props) {\n                this.name = name;\n                this.slot = slot;\n                this.zone = zone;\n                this.level = level;\n                this.statnames = []\n                this.base = {}\n                this.disable = false;\n                for (let i = 0; i < props.length; i++) {\n                        this.statnames.push(props[i][0]);\n                        this[props[i][0]] = props[i][1];\n                        this.base[props[i][0]] = props[i][1] / 2;\n                }\n        }\n}\n\nexport function update_level(item, level) {\n        for (let stat in item.base) {\n                item[stat] = item.base[stat] * (1 + level / 100);\n        }\n        item.level = level;\n}\n\nexport class EmptySlot extends Item {\n        constructor(slot) {\n                if (slot === undefined) {\n                        super('Empty Slot', slot, undefined, 0, []);\n                } else {\n                        super('Empty ' + slot[0] + ' Slot', slot, undefined, 0, []);\n                }\n                this.empty = true;\n        }\n}\n\nexport class Equip extends Item {\n        constructor() {\n                super('total', undefined, undefined, 100, []);\n                this.items = [];\n                this.counts = {};\n                Object.getOwnPropertyNames(Slot).map((x) => {\n                        this.counts[Slot[x][0]] = 0;\n                        return undefined;\n                });\n                Object.getOwnPropertyNames(Stat).map((x) => {\n                        this[Stat[x]] = 100;\n                        this.statnames.push(Stat[x]);\n                        return undefined;\n                });\n                // correct POWER, TOUGHNESS and RESPAWN since these are additive from 0 instead of 100%\n                this[Stat.POWER] = 0;\n                this[Stat.TOUGHNESS] = 0;\n                this[Stat.RESPAWN] = 0;\n        }\n}\n\nexport class ItemContainer {\n        constructor(items) {\n                this.names = [];\n                for (let i = 0; i < items.length; i++) {\n                        this.names.push(items[i][0]);\n                        this[items[i][0]] = items[i][1];\n                }\n        }\n}\n\nexport const slotlist = (accslots) => {\n        let list = Object.getOwnPropertyNames(Slot).map((x) => ([\n                Slot[x][0] + 0,\n                new EmptySlot(Slot[x])\n        ])).filter((x) => (x[0] !== Slot.ACCESSORY[0] + 0));\n        let slot = Slot.ACCESSORY\n        for (let jdx = 0; jdx < accslots; jdx++) {\n                list.push([\n                        slot[0] + jdx,\n                        new EmptySlot(slot)\n                ]);\n        }\n        return list;\n}\n\nexport const Slot = {\n        WEAPON: [\n                'Weapon', 0\n        ],\n        HEAD: [\n                'Head', 1\n        ],\n        CHEST: [\n                'Armor', 2\n        ],\n        PANTS: [\n                'Pants', 3\n        ],\n        BOOTS: [\n                'Boots', 4\n        ],\n        ACCESSORY: ['Accessory', 5]\n}\n\nexport const Stat = {\n        ADVANCE_TRAINING: 'Advance Training',\n        AP: 'AP',\n        AUGMENT_SPEED: 'Augment Speed',\n        BEARD_SPEED: 'Beard Speed',\n        COOKING: 'Cooking',\n        DAYCARE_SPEED: 'Daycare Speed',\n        DROP_CHANCE: 'Drop Chance',\n        ENERGY_BARS: 'Energy Bars',\n        ENERGY_CAP: 'Energy Cap',\n        ENERGY_POWER: 'Energy Power',\n        ENERGY_SPEED: 'Energy Speed',\n        EXPERIENCE: 'Experience',\n        GOLD_DROP: 'Gold Drops',\n        HACK_SPEED: 'Hack Speed',\n        MAGIC_BARS: 'Magic Bars',\n        MAGIC_CAP: 'Magic Cap',\n        MAGIC_POWER: 'Magic Power',\n        MAGIC_SPEED: 'Magic Speed',\n        MOVE_COOLDOWN: 'Move Cooldown',\n        NGU_SPEED: 'NGU Speed',\n        POWER: 'Power',\n        QUEST_DROP: 'Quest Drops',\n        RES3_BARS: 'Res3 Bars',\n        RES3_CAP: 'Res3 Cap',\n        RES3_POWER: 'Res3 Power',\n        RESPAWN: 'Respawn',\n        SEED_DROP: 'Seed Gain',\n        TOUGHNESS: 'Toughness',\n        WANDOOS_SPEED: 'Wandoos Speed',\n        WISH_SPEED: 'Wish Speed',\n        YGGDRASIL_YIELD: 'Yggdrasil Yield'\n}\n\nexport const Factors = {\n        NONE: [\n                'None', []\n        ],\n        RESPAWN: [\n                'Respawn',\n                [Stat.RESPAWN]\n        ],\n        DAYCARE_SPEED: [\n                'Daycare',\n                [Stat.DAYCARE_SPEED]\n        ],\n        ENGU: [\n                'Energy NGU',\n                [\n                        Stat.ENERGY_CAP, Stat.ENERGY_POWER, Stat.NGU_SPEED\n                ]\n        ],\n        MNGU: [\n                'Magic NGU',\n                [\n                        Stat.MAGIC_CAP, Stat.MAGIC_POWER, Stat.NGU_SPEED\n                ]\n        ],\n        HACK: [\n                'Hacks',\n                [\n                        Stat.RES3_CAP, Stat.RES3_POWER, Stat.HACK_SPEED\n                ]\n        ],\n        NGUS: [\n                'NGUs',\n                [\n                        Stat.ENERGY_CAP,\n                        Stat.ENERGY_POWER,\n                        Stat.NGU_SPEED,\n                        Stat.MAGIC_CAP,\n                        Stat.MAGIC_POWER,\n                        Stat.NGU_SPEED\n                ]\n        ],\n        NGUSHACK: [\n                'NGUs and Hacks',\n                [\n                        Stat.ENERGY_CAP,\n                        Stat.ENERGY_POWER,\n                        Stat.NGU_SPEED,\n                        Stat.MAGIC_CAP,\n                        Stat.MAGIC_POWER,\n                        Stat.NGU_SPEED,\n                        Stat.RES3_CAP,\n                        Stat.RES3_POWER,\n                        Stat.HACK_SPEED\n                ]\n        ],\n        DROP_CHANCE: [\n                'Drop chance',\n                [Stat.DROP_CHANCE]\n        ],\n        WANDOOS: [\n                'Wandoos',\n                [\n                        Stat.ENERGY_CAP, Stat.WANDOOS_SPEED, Stat.MAGIC_CAP, Stat.WANDOOS_SPEED\n                ]\n        ]\n}\n\nexport const SetName = {\n        HEART: [\n                'Sellout Shop', -3\n        ],\n        FOREST_PENDANT: [\n                'Forest Pendant', -2\n        ],\n        LOOTY: [\n                'Looty', -1\n        ],\n        ITOPOD: [\n                'ITOPOD', 0\n        ],\n        SAFE: [\n                'Safe Zone', 1\n        ],\n        TRAINING: [\n                'Tutorial Zone', 2\n        ],\n        SEWERS: [\n                'Sewers', 3\n        ],\n        FOREST: [\n                'Forest', 4\n        ],\n        CAVE: [\n                'Cave of Many Things', 5\n        ],\n        SKY: [\n                'The Sky', 6\n        ],\n        HSB: [\n                'High Security Base', 7\n        ],\n        GRB: [\n                'Gordon Ramsay Bolton', 8\n        ],\n        CLOCK: [\n                'Clock Dimension', 9\n        ],\n        GCT: [\n                'Grand Corrupted Tree', 10\n        ],\n        TWO_D: [\n                'The 2D Universe', 11\n        ],\n        SPOOPY: [\n                'Ancient Battlefield', 12\n        ],\n        JAKE: [\n                'Jake from Accounting', 13\n        ],\n        GAUDY: [\n                'A Very Strange Place', 14\n        ],\n        MEGA: [\n                'Mega Lands', 15\n        ],\n        UUG_RINGS: [\n                'UUG, The Unmentionable', 16\n        ],\n        BEARDVERSE: [\n                'The Beardverse', 17\n        ],\n        WANDERER: [\n                'Walderp', 18\n        ],\n        WANDERER2: [\n                'Walderp', 18\n        ],\n        BADLY_DRAWN: [\n                'Badly Drawn World', 19\n        ],\n        STEALTH: [\n                'Boring-Ass Earth', 20\n        ],\n        SLIMY: [\n                'The Beast', 21\n        ],\n        CHOCO: [\n                'Chocolate World', 22\n        ],\n        EDGY: [\n                'The Evilverse', 23\n        ],\n        PINK: [\n                'Pretty Pink Princess Land', 24\n        ],\n        NERD: [\n                'Greasy Nerd', 25\n        ],\n        META: [\n                'Meta Land', 26\n        ],\n        PARTY: [\n                'Interdimensional Party', 27\n        ],\n        MOBSTER: [\n                'The Godmother', 28\n        ],\n        TYPO: [\n                'Typo Zonw', 29\n        ],\n        FAD: [\n                'The Fad-lands', 30\n        ],\n        JRPG: [\n                'JRPGVille', 31\n        ],\n        EXILE: ['The Exile', 32]\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import {Slot, EmptySlot, Equip} from './assets/ItemAux'\n\nexport function compute_optimal(item_names, items, factor, totalslots, maxslots, base_layouts) {\n        let optimal = clone(base_layouts);\n        optimal.map((x) => {\n                x.score = score_product(x, factor);\n                x.item_count = x.items.length;\n        })\n        optimal.sort((a, b) => (b.score - a.score));\n        let changed = false;\n        for (let layout = 0; layout < base_layouts.length; layout++) {\n                const base_layout = base_layouts[layout];\n                let accslots = totalslots - base_layout.counts['Accessory'];\n                accslots = maxslots < accslots\n                        ? maxslots\n                        : accslots;\n                // find all possible items that can be equiped in main slots\n                let options = Object.getOwnPropertyNames(Slot).filter((x) => {\n                        if (Slot[x][0] === 'Accessory') {\n                                return false;\n                        }\n                        if (base_layout.counts[Slot[x][0]] > 0) {\n                                return false;\n                        }\n                        return true;\n                }).map((x) => (gear_slot(item_names, items, Slot[x], base_layout)));\n                let s = [options.map((x) => (x.length)).reduce((a, b) => (a * b), 1)];\n                let remaining = options.map((x) => (pareto(x, factor)));\n                s.push(remaining.map((x) => (x.length)).reduce((a, b) => (a * b), 1));\n                let layouts = outfits(remaining, base_layout);\n                layouts = pareto(layouts, factor);\n                s.push(layouts.length);\n                // find all possible accessories\n                let accs = gear_slot(item_names, items, Slot.ACCESSORY, base_layout);\n                s.push(accs.length);\n                accs = pareto(accs, factor, accslots);\n                s.push(accs.length);\n                console.log('Processing ' + s[2] + ' out of ' + s[1] + ' out of ' + s[0] + ' gear layouts and ' + s[4] + ' out of ' + s[3] + ' accessories.');\n                for (let idx in layouts) {\n                        console.log(s[4]);\n                        let candidate = knapsack(accs, accslots, layouts[idx], (a) => (1), add_equip, factor);\n                        if (score_product(optimal[0], factor) < score_product(candidate[0], factor)) {\n                                optimal = candidate;\n                                changed = true;\n                        }\n                        if (score_product(optimal[0], factor) === score_product(candidate[0], factor)) {\n                                optimal.push(...candidate);\n                                changed = true;\n                        }\n                }\n        }\n        if (!changed) {\n                return base_layouts;\n        }\n        for (let idx in optimal) {\n                let optimal_size = optimal[idx].items.length;\n                let scores = [];\n                for (let jdx = optimal[idx].item_count; jdx < optimal_size; jdx++) {\n                        let item = optimal[idx].items[jdx];\n                        let score = score_product(remove_equip(clone(optimal[idx]), item), factor);\n                        scores.push([score, item])\n                }\n                for (let jdx = optimal[idx].item_count; jdx < optimal_size; jdx++) {\n                        optimal[idx].items.pop();\n                }\n                scores = scores.sort((a, b) => (a[0] - b[0]));\n                for (let jdx in scores) {\n                        optimal[idx].items.push(scores[jdx][1]);\n                }\n        }\n        optimal.sort((a, b) => (b.score - a.score))\n        let top_score = optimal[0].score;\n        optimal = optimal.filter((x) => (x.score === top_score));\n        // filter duplicates, wherever they may come from\n        let filtered = [optimal[0]];\n        for (let idx = 1; idx < optimal.length; idx++) {\n                let done = false;\n                let l = optimal[idx].items.length;\n                for (let jdx = 0; jdx < filtered.length; jdx++) {\n                        if (filtered[jdx].items.length !== l) {\n                                continue;\n                        }\n                        let tmp = {};\n                        optimal[idx].items.map((item) => {\n                                tmp[item.name] = true;\n                        });\n                        filtered[jdx].items.map((item) => {\n                                tmp[item.name] = true;\n                        });\n                        if (Object.getOwnPropertyNames(tmp).length !== l) {\n                                continue;\n                        }\n                        done = true;\n                        break;\n                }\n                if (!done) {\n                        filtered.push(optimal[idx]);\n                }\n        }\n        return filtered;\n}\n\nexport function add_equip(equip, item) {\n        if (item.empty) {\n                return equip;\n        }\n        for (let i = 0; i < item.statnames.length; i++) {\n                const stat = item.statnames[i];\n                equip[stat] += item[stat];\n        }\n        equip.items.push(item);\n        equip.counts[item.slot[0]] += 1;\n        return equip;\n}\n\nexport function remove_equip(equip, item) {\n        if (item.empty) {\n                return equip;\n        }\n        item = equip.items.filter((x) => (x.name === item.name))[0];\n        if (item === undefined) {\n                return equip;\n        }\n        for (let i = 0; i < item.statnames.length; i++) {\n                const stat = item.statnames[i];\n                equip[stat] -= item[stat];\n        }\n        equip.items.filter((x) => (x.name !== item.name));\n        equip.counts[item.slot[0]] -= 1;\n        return equip;\n}\n\nconst cart_aux = (a, b) => [].concat(...a.map(d => b.map(e => [].concat(d, e))));\nconst cartesian = (a, b, ...c) => (\n        b\n        ? cartesian(cart_aux(a, b), ...c)\n        : a);\n\nexport const outfits = (options, base) => {\n        if (options.length === 0) {\n                return [base];\n        }\n        let tmp = cartesian(...options).map((items) => {\n                let equip = clone(base);\n                for (let i = 0; i < items.length; i++) {\n                        add_equip(equip, items[i]);\n                }\n                equip.item_count = equip.items.length;\n                return equip;\n        })\n        return tmp;\n};\n\nexport function score_product(equip, stats) {\n        let score = 1;\n        for (let idx in stats) {\n                let stat = stats[idx];\n                score *= equip[stat] / 100;\n        }\n        return score;\n}\n\nexport function gear_slot(names, list, type, equip) {\n        const equiped = equip.items.filter((item) => (item.slot[0] === type[0])).map((x) => (x.name));\n        return names.filter((name) => {\n                if (list[name].empty) {\n                        return false;\n                }\n                return list[name].slot[0] === type[0];\n        }).map((name) => (list[name])).filter((item) => (!item.disable && !equiped.includes(item.name)));\n}\n\nexport function format_number(n, d = 2) {\n        if (n < 10000) {\n                return n.toFixed(d);\n        }\n        return n.toExponential(d);\n}\n\nexport function clone(obj) {\n        let copy;\n        // Handle the 3 simple types, and null or undefined\n        if (null == obj || \"object\" != typeof obj) \n                return obj;\n        \n        // Handle Date\n        if (obj instanceof Date) {\n                copy = new Date();\n                copy.setTime(obj.getTime());\n                return copy;\n        }\n        // Handle Array\n        if (obj instanceof Array) {\n                copy = [];\n                for (let i = 0, len = obj.length; i < len; i++) {\n                        copy[i] = clone(obj[i]);\n                }\n                return copy;\n        }\n        // Handle Object\n        if (obj instanceof Object) {\n                copy = {};\n                for (let attr in obj) {\n                        if (obj.hasOwnProperty(attr)) \n                                copy[attr] = clone(obj[attr]);\n                        }\n                return copy;\n        }\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n\nfunction knapsack_combine_single(last, list, item, add, factor) {\n        last = clone(last);\n        for (let idx in list) {\n                let max_with = add(clone(list[idx]), item);\n                max_with.score = score_product(max_with, factor);\n                last.push(max_with);\n        }\n        last = last.sort((a, b) => (b.score - a.score));\n        return pareto(last, factor);\n}\n\nexport function knapsack(items, capacity, zero_state, weight, add, factor) {\n        let n = items.length;\n        zero_state.score = score_product(zero_state, factor);\n        // init matrix\n        let matrix_weight = new Array(n + 1);\n        for (let i = 0; i < n + 1; i++) {\n                matrix_weight[i] = new Array(capacity + 1);\n        }\n        // fill matrix\n        for (let i = 0; i <= n; i++) {\n                for (let w = 0; w <= capacity; w++) {\n                        if (i === 0 || w === 0) {\n                                matrix_weight[i][w] = [zero_state];\n                                continue;\n                        }\n                        if (weight(items[i - 1]) > w) {\n                                matrix_weight[i][w] = matrix_weight[i - 1][w];\n                                continue;\n                        }\n                        // compute optimal state with item i added\n                        // clone earlier entries to avoid changing them\n                        let remaining = w - weight(items[i - 1]);\n                        matrix_weight[i][w] = knapsack_combine_single(clone(matrix_weight[i - 1][w]), clone(matrix_weight[i - 1][remaining]), items[i - 1], add, factor)\n                }\n        }\n        matrix_weight[n][capacity].sort((a, b) => (b.score - a.score))\n        let top_score = matrix_weight[n][capacity][0].score;\n        return matrix_weight[n][capacity].filter((x) => (x.score === top_score));\n}\n\n/*\n        set <equal> to <false> if equal results result in a dominate call\n*/\nexport function dominates(major, minor, stats, equal = true) {\n        let major_stats = new Array(stats.length).fill(0);\n        let minor_stats = new Array(stats.length).fill(0);\n        for (let i = 0; i < stats.length; i++) {\n                let stat = stats[i];\n                let idx = major.statnames.indexOf(stat);\n                if (idx >= 0) {\n                        major_stats[i] = major[stat];\n                }\n                idx = minor.statnames.indexOf(stat);\n                if (idx >= 0) {\n                        minor_stats[i] = minor[stat];\n                }\n                if (minor_stats[i] > major_stats[i]) {\n                        return false;\n                }\n                if (minor_stats[i] < major_stats[i]) {\n                        equal = false;\n                }\n        }\n        return !equal;\n}\n\nexport function pareto(list, stats, cutoff = 1) {\n        let dominated = new Array(list.length).fill(false);\n        let empty = list[0].slot === undefined\n                ? new Equip()\n                : new EmptySlot(list[0].slot);\n        for (let i = list.length - 1; i > -1; i--) {\n                if (dominates(empty, list[i], stats, !empty.empty)) {\n                        dominated[i] = cutoff;\n                }\n                if (dominated[i] === cutoff) {\n                        continue;\n                }\n                for (let j = list.length - 1; j > -1; j--) {\n                        if (dominated[j] === cutoff) {\n                                continue;\n                        }\n                        dominated[j] += dominates(list[i], list[j], stats)\n                                ? 1\n                                : 0;\n                }\n        }\n        let result = dominated.map((val, idx) => (\n                val < cutoff\n                ? list[idx]\n                : false)).filter((val) => (val !== false));\n        if (result.length === 0) {\n                result = [empty];\n        }\n        return result;\n}\n","import {\n        ItemContainer,\n        Equip,\n        Slot,\n        EmptySlot,\n        Factors,\n        update_level,\n        slotlist\n} from '../assets/ItemAux'\nimport {clone, compute_optimal} from '../util'\n\n// eslint-disable-next-line\nself.addEventListener(\"message\", optimize);\n\nfunction optimize(e) {\n        let state = e.data.state;\n        let base_layout = [new Equip()];\n        for (let idx = 0; idx < state.factors.length; idx++) {\n                let factorname = state.factors[idx]\n                let factor = Factors[factorname][1];\n                let maxslots = state.accslots;\n                if (factorname === 'RESPAWN') {\n                        maxslots = state.respawn;\n                }\n                if (factorname === 'DAYCARE_SPEED') {\n                        maxslots = state.daycare;\n                }\n                base_layout = compute_optimal(state.items.names, state.items, factor, state.accslots, maxslots, base_layout);\n        }\n        base_layout = base_layout[Math.floor(Math.random() * base_layout.length)];\n        let equip = new ItemContainer(slotlist(state.accslots));\n        let counts = Object.getOwnPropertyNames(Slot).map((x) => (0));\n        for (let idx in base_layout.items) {\n                const item = base_layout.items[idx];\n                equip[item.slot[0] + counts[item.slot[1]]] = item;\n                counts[item.slot[1]]++;\n        }\n        this.postMessage({equip: equip});\n        this.close();\n}\n"],"sourceRoot":""}