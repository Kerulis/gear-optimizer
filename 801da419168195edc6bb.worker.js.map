{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","assets/ItemAux.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","assets/Items.js","util.js","Optimizer.js","Augment.js","Wish.js","reducers/Items.js","sagas/optimize.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof2","obj","iterator","constructor","_typeof","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_inherits","subClass","superClass","TypeError","writable","configurable","_classCallCheck","instance","Constructor","Item","slot","zone","level","props","this","statnames","base","disable","length","push","EmptySlot","_Item","_this","undefined","SetName","SAFE","toUpperCase","substring","empty","Equip","_Item2","_this2","items","counts","getOwnPropertyNames","Slot","map","x","Stat","POWER","TOUGHNESS","RESPAWN","ItemNameContainer","accslots","offhand","container","slotlist","idx","slotname","list","jdx","WEAPON","HEAD","CHEST","PANTS","BOOTS","ACCESSORY","OTHER","AT_SPEED","AP","AUGMENT_SPEED","BEARD_SPEED","COOKING","DAYCARE_SPEED","DROP_CHANCE","ENERGY_BARS","ENERGY_CAP","ENERGY_POWER","ENERGY_SPEED","EXPERIENCE","GOLD_DROP","HACK_SPEED","MAGIC_BARS","MAGIC_CAP","MAGIC_POWER","MAGIC_SPEED","MOVE_COOLDOWN","NGU_SPEED","QUEST_DROP","RES3_BARS","RES3_CAP","RES3_POWER","SEED_DROP","WANDOOS_SPEED","WISH_SPEED","YGGDRASIL_YIELD","single_factors","NONE","DELETE","INSERT","remaining_factors","keys","forEach","includes","multiple_factors","ENGU","MNGU","NGUS","HACK","WISHES","NGUSHACK","ETIMEMACHINE","MTIMEMACHINE","TIMEMACHINE","BLOOD","EWANDOOS","MWANDOOS","WANDOOS","AUGMENTATION","AT","EBEARD","MBEARD","BEARD","ECAPSPEED","MCAPSPEED","XCAPSPEED","extend","src","Factors","MISC","HEART","FOREST_PENDANT","LOOTY","ITOPOD","TRAINING","SEWERS","FOREST","CAVE","SKY","HSB","GRB","CLOCK","GCT","TWO_D","SPOOPY","JAKE","GAUDY","MEGA","UUG_RINGS","BEARDVERSE","WANDERER","WANDERER2","BADLY_DRAWN","STEALTH","SLIMY","SLIMY2","SLIMY3","SLIMY4","CHOCO","EDGY","PINK","NERD","NERD2","NERD3","NERD4","META","PARTY","MOBSTER","MOBSTER2","MOBSTER3","MOBSTER4","TYPO","FAD","JRPG","EXILE","EXILE2","EXILE3","EXILE4","RADLANDS","BACKTOSCHOOL","WESTWORLD","ITHUNGERS","ITHUNGERS2","ITHUNGERS3","ITHUNGERS4","Hacks","vngu","cost","bonus","softcap","scbonus","scexponent","ngu","nc","nb","nsc","nscb","nsce","ec","eb","esc","escb","esce","sc","sb","ssc","sscb","ssce","normal","evil","sadistic","NGUs","energy","magic","_defineProperty","_objectSpread","target","arguments","source","ownKeys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","from","_iterableToArray","_nonIterableSpread","_defineProperties","descriptor","_createClass","protoProps","staticProps","ITEMLIST","LOOTIES","sort","a","b","power","PENDANTS","clone","copy","Date","setTime","getTime","len","attr","Error","get_max_titan","maxtitan","score_vals","vals","factors","val","exponents","Math","pow","reduce","res","get_raw_vals","data","equip","stats","sorted","stat","mainhand","isNaN","hardcap","capstats","gear","total","max","maxVal","min","get_vals","cubeBaseItemData","itemdata","cubestats","basestats","tier","Number","Infinity Cube","toughness","Base Stats","EMPTY_ACCESSORY","Optimizer","state","itemnames","factorslist","maxslotslist","maxslots","accessory","limits","titan","titanversion","looty","pendant","get_limits","locked","locks","item","add_equip","old2newequip","result","item_idx","slot_idx","base_layout","other","score_equip","score_raw_equip","valsa","valsb","optimal","_this3","scores","apply","optimal_size","item_count","score","score_raw_equip_wrapper","remove_equip","pop","_this4","weapons","options","gear_slot","remaining","pareto","layouts","tmp","j","_loop","k","candidate","accs","candidate_accs","_this5","everything","ascore","bscore","base_layouts","factoridx","_this6","console","log","new2oldequip","empty_accslots","count_accslots","locked_accs","candidates","top_scorers","layout","get_accs","acc_candidate","slice","optimize_layouts","kdx","filter_accs","filter_idx","riskidx","rawscore","riskscore","rawriskscore","swap_vals","tmpscore","rawtmpscore","atrisk","winner","acc","sort_accs","alternatives","remainder","tmp_score","rawtmp_score","effect","type","_this7","equiped","indexOf","allowed_zone","major","minor","equal","major_stats","fill","minor_stats","exponent","cutoff","dominated","dominates","Augment","augstats","augs","lsc","difference","version","isUpgrade","isGold","nacfactor","nac","ratio","cap","ecap","ticks","time","speed","augspeed","basegold","gpt","gps","gold","bbtill","floor","goldlimited","reqticks","ceil","auglevel","upglevel","augbonus","boost","upgbonus","ITEMS","ItemContainer","names","zoneDict","cleanState","Infinity","weapon","hack","hackidx","reducer","goal","optimize_worker_augment","e","start_time","now","Augment_Augment","augment","optimize","postMessage","close","addEventListener","command","optimizer","Optimizer_Optimizer","construct_base","compute_optimal","random","sort_locks","savedequip","save","hasNoFactors","_"],"mappings":"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","file":"801da419168195edc6bb.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/gear-optimizer/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export class Item {\n        constructor(name, slot, zone, level, props) {\n                this.name = name;\n                this.slot = slot;\n                this.zone = zone;\n                this.level = level;\n                this.statnames = []\n                this.base = {}\n                this.disable = false;\n                for (let i = 0; i < props.length; i++) {\n                        this.statnames.push(props[i][0]);\n                        this[props[i][0]] = props[i][1] * (1 + level / 100);\n                        this.base[props[i][0]] = props[i][1];\n                }\n        }\n}\n\nexport function update_level(item, level) {\n        for (let stat in item.base) {\n                item[stat] = item.base[stat] * (1 + level / 100);\n        }\n        item.level = level;\n}\n\nexport class EmptySlot extends Item {\n        constructor(slot) {\n                if (slot === undefined) {\n                        super('Empty Slot', slot, SetName.SAFE, undefined, []);\n                } else {\n                        super('Empty ' + slot[0][0].toUpperCase() + slot[0].substring(1) + ' Slot', slot, SetName.SAFE, undefined, []);\n                }\n                this.empty = true;\n        }\n}\n\nexport class Equip extends Item {\n        constructor() {\n                super('total', undefined, undefined, 100, []);\n                this.items = [];\n                this.counts = {};\n                Object.getOwnPropertyNames(Slot).map((x) => {\n                        this.counts[Slot[x][0]] = 0;\n                        return undefined;\n                });\n                Object.getOwnPropertyNames(Stat).map((x) => {\n                        this[Stat[x]] = 100;\n                        this.statnames.push(Stat[x]);\n                        return undefined;\n                });\n                // correct POWER, TOUGHNESS and RESPAWN since these are additive from 0 instead of 100%\n                this[Stat.POWER] = 0;\n                this[Stat.TOUGHNESS] = 0;\n                this[Stat.RESPAWN] = 0;\n        }\n}\n\nexport class ItemContainer {\n        constructor(items) {\n                this.names = [];\n                for (let i = 0; i < items.length; i++) {\n                        this.names.push(items[i][0]);\n                        this[items[i][0]] = items[i][1];\n                }\n        }\n}\n\nexport const ItemNameContainer = (accslots, offhand) => {\n        let container = {};\n        const slotlist = Object.getOwnPropertyNames(Slot);\n        for (let idx in slotlist) {\n                const slot = slotlist[idx];\n                const slotname = Slot[slot][0];\n                let list = [];\n                if (slot === 'ACCESSORY') {\n                        for (let jdx = 0; jdx < accslots; jdx++) {\n                                list.push(new EmptySlot(Slot[slot]).name);\n                        }\n                } else if (slot === 'OTHER') {\n                        list.push('Infinity Cube');\n                        list.push('Base Stats');\n                } else {\n                        list.push(new EmptySlot(Slot[slot]).name);\n                }\n                if (slot === 'WEAPON' && offhand > 0) {\n                        list.push(new EmptySlot(Slot[slot]).name);\n                }\n                container[slotname] = list;\n        };\n        return container;\n};\n\nexport const Slot = {\n        WEAPON: [\n                'weapon', 0\n        ],\n        HEAD: [\n                'head', 1\n        ],\n        CHEST: [\n                'armor', 2\n        ],\n        PANTS: [\n                'pants', 3\n        ],\n        BOOTS: [\n                'boots', 4\n        ],\n        ACCESSORY: [\n                'accessory', 5\n        ],\n        OTHER: ['other', 6]\n}\n\nexport const Stat = {\n        AT_SPEED: 'Advanced Training Speed',\n        AP: 'AP',\n        AUGMENT_SPEED: 'Augment Speed',\n        BEARD_SPEED: 'Beard Speed',\n        COOKING: 'Cooking',\n        DAYCARE_SPEED: 'Daycare Speed',\n        DROP_CHANCE: 'Drop Chance',\n        ENERGY_BARS: 'Energy Bars',\n        ENERGY_CAP: 'Energy Cap',\n        ENERGY_POWER: 'Energy Power',\n        ENERGY_SPEED: 'Energy Speed',\n        EXPERIENCE: 'Experience',\n        GOLD_DROP: 'Gold Drops',\n        HACK_SPEED: 'Hack Speed',\n        MAGIC_BARS: 'Magic Bars',\n        MAGIC_CAP: 'Magic Cap',\n        MAGIC_POWER: 'Magic Power',\n        MAGIC_SPEED: 'Magic Speed',\n        MOVE_COOLDOWN: 'Move Cooldown',\n        NGU_SPEED: 'NGU Speed',\n        POWER: 'Power',\n        QUEST_DROP: 'Quest Drops',\n        RES3_BARS: 'Resource 3 Bars',\n        RES3_CAP: 'Resource 3 Cap',\n        RES3_POWER: 'Resource 3 Power',\n        RESPAWN: 'Respawn',\n        SEED_DROP: 'Seed Gain',\n        TOUGHNESS: 'Toughness',\n        WANDOOS_SPEED: 'Wandoos Speed',\n        WISH_SPEED: 'Wish Speed',\n        YGGDRASIL_YIELD: 'Yggdrasil Yield'\n}\n\nlet single_factors = {\n        NONE: [\n                'None', []\n        ],\n        DELETE: [\n                'Delete priority', []\n        ],\n        INSERT: [\n                'Insert priority', []\n        ],\n        POWER: [\n                'Power',\n                [Stat.POWER]\n        ],\n        TOUGHNESS: [\n                'Toughness',\n                [Stat.TOUGHNESS]\n        ],\n        RESPAWN: [\n                'Respawn',\n                [Stat.RESPAWN]\n        ],\n        DAYCARE_SPEED: [\n                'Daycare',\n                [Stat.DAYCARE_SPEED]\n        ],\n        GOLD_DROP: [\n                'Gold Drops',\n                [Stat.GOLD_DROP]\n        ],\n        DROP_CHANCE: [\n                'Drop chance',\n                [Stat.DROP_CHANCE]\n        ],\n        QUEST_DROP: [\n                'Quest Drop',\n                [Stat.QUEST_DROP]\n        ]\n}\n\nlet remaining_factors = {};\n\nObject.keys(Stat).forEach(key => {\n        if (key.includes('SPEED')) {\n                if (!key.includes('ENERGY_') && !key.includes('MAGIC_')) {\n                        return;\n                }\n        }\n        if (single_factors[key] === undefined) {\n                remaining_factors[key] = [\n                        Stat[key],\n                        [Stat[key]]\n                ];\n        }\n});\n\nexport const multiple_factors = {\n        ENGU: [\n                'Energy NGU',\n                [\n                        Stat.ENERGY_CAP, Stat.ENERGY_POWER, Stat.NGU_SPEED\n                ]\n        ],\n        MNGU: [\n                'Magic NGU',\n                [\n                        Stat.MAGIC_CAP, Stat.MAGIC_POWER, Stat.NGU_SPEED\n                ]\n        ],\n        NGUS: [\n                'NGUs',\n                [\n                        Stat.ENERGY_CAP, Stat.ENERGY_POWER, Stat.MAGIC_CAP, Stat.MAGIC_POWER, Stat.NGU_SPEED\n                ],\n                [\n                        1 / 2,\n                        1 / 2,\n                        1 / 2,\n                        1 / 2,\n                        1\n                ]\n        ],\n        HACK: [\n                'Hacks',\n                [\n                        Stat.RES3_CAP, Stat.RES3_POWER, Stat.HACK_SPEED\n                ]\n        ],\n        WISHES: [\n                'Wishes',\n                [\n                        Stat.ENERGY_CAP,\n                        Stat.ENERGY_POWER,\n                        Stat.MAGIC_CAP,\n                        Stat.MAGIC_POWER,\n                        Stat.RES3_CAP,\n                        Stat.RES3_POWER,\n                        Stat.WISH_SPEED\n                ],\n                [\n                        0.17,\n                        0.17,\n                        0.17,\n                        0.17,\n                        0.17,\n                        0.17,\n                        1\n                ]\n        ],\n        NGUSHACK: [\n                'NGUs and Hacks',\n                [\n                        Stat.ENERGY_CAP,\n                        Stat.ENERGY_POWER,\n                        Stat.MAGIC_CAP,\n                        Stat.MAGIC_POWER,\n                        Stat.NGU_SPEED,\n                        Stat.RES3_CAP,\n                        Stat.RES3_POWER,\n                        Stat.HACK_SPEED\n                ],\n                [\n                        1 / 3,\n                        1 / 3,\n                        1 / 3,\n                        1 / 3,\n                        2 / 3,\n                        1 / 3,\n                        1 / 3,\n                        1 / 3\n                ]\n        ],\n        ETIMEMACHINE: [\n                'Energy Time Machine',\n                [\n                        Stat.ENERGY_CAP, Stat.ENERGY_POWER\n                ]\n        ],\n        MTIMEMACHINE: [\n                'Magic Time Machine',\n                [\n                        Stat.MAGIC_CAP, Stat.MAGIC_POWER\n                ]\n        ],\n        TIMEMACHINE: [\n                'Time Machine',\n                [\n                        Stat.ENERGY_CAP, Stat.ENERGY_POWER, Stat.MAGIC_CAP, Stat.MAGIC_POWER\n                ],\n                [\n                        1 / 2,\n                        1 / 2,\n                        1 / 2,\n                        1 / 2\n                ]\n        ],\n        BLOOD: [\n                'Blood Rituals',\n                [\n                        Stat.MAGIC_CAP, Stat.MAGIC_POWER\n                ]\n        ],\n        EWANDOOS: [\n                'Energy Wandoos',\n                [\n                        Stat.ENERGY_CAP, Stat.WANDOOS_SPEED\n                ]\n        ],\n        MWANDOOS: [\n                'Magic Wandoos',\n                [\n                        Stat.MAGIC_CAP, Stat.WANDOOS_SPEED\n                ]\n        ],\n        WANDOOS: [\n                'Wandoos',\n                [\n                        Stat.ENERGY_CAP, Stat.WANDOOS_SPEED, Stat.MAGIC_CAP, Stat.WANDOOS_SPEED\n                ],\n                [\n                        1 / 2,\n                        1 / 2,\n                        1 / 2,\n                        1 / 2\n                ]\n        ],\n        AUGMENTATION: [\n                'Augmentation',\n                [\n                        Stat.ENERGY_CAP, Stat.ENERGY_POWER, Stat.AUGMENT_SPEED\n                ]\n        ],\n        AT: [\n                'Advanced Training',\n                [\n                        Stat.ENERGY_POWER, Stat.ENERGY_CAP, Stat.AT_SPEED\n                ],\n                [\n                        1 / 2,\n                        1,\n                        1\n                ]\n        ],\n        EBEARD: [\n                'Energy Beards',\n                [\n                        Stat.ENERGY_POWER, Stat.ENERGY_BARS, Stat.BEARD_SPEED\n                ],\n                [\n                        1 / 2,\n                        1,\n                        1\n                ]\n        ],\n        MBEARD: [\n                'Magic Beards',\n                [\n                        Stat.MAGIC_POWER, Stat.MAGIC_BARS, Stat.BEARD_SPEED\n                ],\n                [\n                        1 / 2,\n                        1,\n                        1\n                ]\n        ],\n        BEARD: [\n                'Beards',\n                [\n                        Stat.ENERGY_POWER, Stat.ENERGY_BARS, Stat.MAGIC_POWER, Stat.MAGIC_BARS, Stat.BEARD_SPEED\n                ],\n                [\n                        1 / 4,\n                        1 / 2,\n                        1 / 4,\n                        1 / 2,\n                        1\n                ]\n        ],\n        ECAPSPEED: [\n                'Energy Cap Speed',\n                [\n                        Stat.ENERGY_CAP, Stat.ENERGY_BARS\n                ],\n                [\n                        -1, 1\n                ]\n        ],\n        MCAPSPEED: [\n                'Magic Cap Speed',\n                [\n                        Stat.MAGIC_CAP, Stat.MAGIC_BARS\n                ],\n                [\n                        -1, 1\n                ]\n        ],\n        XCAPSPEED: [\n                'Resource 3 Cap Speed',\n                [\n                        Stat.RES3_CAP, Stat.RES3_BARS\n                ],\n                [\n                        -1, 1\n                ]\n        ]\n}\n\nfunction extend(obj, src) {\n        Object.keys(src).forEach(function(key) {\n                obj[key] = src[key];\n        });\n        return obj;\n}\n\nexport const Factors = extend(extend(single_factors, multiple_factors), remaining_factors);\n\nexport const SetName = {\n        MISC: [\n                'Miscellaneous', -4\n        ],\n        HEART: [\n                'My Hearts <3', -3\n        ],\n        FOREST_PENDANT: [\n                'Forest Pendant', -2\n        ],\n        LOOTY: [\n                'Looty', -1\n        ],\n        ITOPOD: [\n                'ITOPOD', 0\n        ],\n        SAFE: [\n                'Safe Zone', 1\n        ],\n        TRAINING: [\n                'Tutorial Zone', 2\n        ],\n        SEWERS: [\n                'Sewers', 3\n        ],\n        FOREST: [\n                'Forest', 4\n        ],\n        CAVE: [\n                'Cave of Many Things', 5\n        ],\n        SKY: [\n                'The Sky', 6\n        ],\n        HSB: [\n                'High Security Base', 7\n        ],\n        GRB: [\n                'Gordon Ramsay Bolton', 8\n        ],\n        CLOCK: [\n                'Clock Dimension', 9\n        ],\n        GCT: [\n                'Grand Corrupted Tree', 10\n        ],\n        TWO_D: [\n                'The 2D Universe', 11\n        ],\n        SPOOPY: [\n                'Ancient Battlefield', 12\n        ],\n        JAKE: [\n                'Jake from Accounting', 13\n        ],\n        GAUDY: [\n                'A Very Strange Place', 14\n        ],\n        MEGA: [\n                'Mega Lands', 15\n        ],\n        UUG_RINGS: [\n                'UUG, The Unmentionable', 16\n        ],\n        BEARDVERSE: [\n                'The Beardverse', 17\n        ],\n        WANDERER: [\n                'Walderp', 18\n        ],\n        WANDERER2: [\n                'Walderp', 18\n        ],\n        BADLY_DRAWN: [\n                'Badly Drawn World', 19\n        ],\n        STEALTH: [\n                'Boring-Ass Earth', 20\n        ],\n        SLIMY: [\n                'The Beast', 21, 1\n        ],\n        SLIMY2: [\n                'The Beast', 21, 2\n        ],\n        SLIMY3: [\n                'The Beast', 21, 3\n        ],\n        SLIMY4: [\n                'The Beast', 21, 4\n        ],\n        CHOCO: [\n                'Chocolate World', 22\n        ],\n        EDGY: [\n                'The Evilverse', 23\n        ],\n        PINK: [\n                'Pretty Pink Princess Land', 24\n        ],\n        NERD: [\n                'Greasy Nerd', 25, 1\n        ],\n        NERD2: [\n                'Greasy Nerd', 25, 2\n        ],\n        NERD3: [\n                'Greasy Nerd', 25, 3\n        ],\n        NERD4: [\n                'Greasy Nerd', 25, 4\n        ],\n        META: [\n                'Meta Land', 26\n        ],\n        PARTY: [\n                'Interdimensional Party', 27\n        ],\n        MOBSTER: [\n                'The Godmother', 28, 1\n        ],\n        MOBSTER2: [\n                'The Godmother', 28, 2\n        ],\n        MOBSTER3: [\n                'The Godmother', 28, 3\n        ],\n        MOBSTER4: [\n                'The Godmother', 28, 4\n        ],\n        TYPO: [\n                'Typo Zonw', 29\n        ],\n        FAD: [\n                'The Fad-lands', 30\n        ],\n        JRPG: [\n                'JRPGVille', 31\n        ],\n        EXILE: [\n                'The Exile', 32, 1\n        ],\n        EXILE2: [\n                'The Exile', 32, 2\n        ],\n        EXILE3: [\n                'The Exile', 32, 3\n        ],\n        EXILE4: [\n                'The Exile', 32, 4\n        ],\n        RADLANDS: [\n                'The Rad Lands', 33\n        ],\n        BACKTOSCHOOL: [\n                'Back To School', 34\n        ],\n        WESTWORLD: [\n                'The West World', 35\n        ],\n        ITHUNGERS: [\n                'It Hungers', 36, 1\n        ],\n        ITHUNGERS2: [\n                'It Hungers', 36, 2\n        ],\n        ITHUNGERS3: [\n                'It Hungers', 36, 3\n        ],\n        ITHUNGERS4: ['It Hungers', 36, 4]\n}\n\nexport const Hacks = [\n        [\n                'Stats',\n                1.00E+08,\n                2.5000,\n                1.0250,\n                10,\n                7720\n        ],\n        [\n                'Adventure',\n                2.00E+08,\n                0.1000,\n                1.0200,\n                50,\n                7632\n        ],\n        [\n                'TM',\n                4.00E+08,\n                0.2000,\n                1.0200,\n                50,\n                7544\n        ],\n        [\n                'Drop',\n                4.00E+08,\n                0.2500,\n                1.0300,\n                40,\n                7544\n        ],\n        [\n                'Augment',\n                8.00E+08,\n                0.2000,\n                1.0100,\n                20,\n                7456\n        ],\n        [\n                'ENGU',\n                2.00E+09,\n                0.1000,\n                1.0150,\n                30,\n                7340\n        ],\n        [\n                'MNGU',\n                2.00E+09,\n                0.1000,\n                1.0150,\n                30,\n                7340\n        ],\n        [\n                'Blood',\n                4.00E+09,\n                0.1000,\n                1.0200,\n                50,\n                7252\n        ],\n        [\n                'QP',\n                8.00E+09,\n                0.0500,\n                1.0080,\n                50,\n                7164\n        ],\n        [\n                'Daycare',\n                2.00E+10,\n                0.0200,\n                1.0050,\n                45,\n                7048\n        ],\n        [\n                'EXP',\n                4.00E+10,\n                0.0250,\n                1.0100,\n                75,\n                6960\n        ],\n        [\n                'Number',\n                8.00E+10,\n                5.0000,\n                1.0200,\n                40,\n                6873\n        ],\n        [\n                'PP',\n                2.00E+11,\n                0.0500,\n                1.0050,\n                25,\n                6757\n        ],\n        [\n                'Hack',\n                2.00E+11,\n                0.0500,\n                1.1000,\n                100,\n                6757\n        ],\n        [\n                'Wish Hack',\n                1.00E+13,\n                0.0100,\n                1.0050,\n                50,\n                6262\n        ]\n];\n\nexport const Wishes = [\n        //page 1\n        [\n                'Kick-ass', 1e15, 1\n        ],\n        [\n                'Wish Speed I', 1e15, 10\n        ],\n        [\n                'MacGuffin Drops', 2e15, 5\n        ],\n        [\n                'V2/3/4 Titan Rewards', 8e15, 3\n        ],\n        [\n                'Money Pit Sucks', 6e15, 1\n        ],\n        [\n                'Stats I', 3e15, 10\n        ],\n        [\n                'Adventure Stats I', 3e15, 10\n        ],\n        [\n                'Inventory Space I', 4e15, 12\n        ],\n        [\n                'Mega Buff', 6e15, 1\n        ],\n        [\n                'Energy Power I', 5e15, 10\n        ],\n        [\n                'Energy Cap I', 5e15, 10\n        ],\n        [\n                'Energy Bars I', 5e15, 10\n        ],\n        [\n                'Magic Power I', 5e15, 10\n        ],\n        [\n                'Magic Cap I', 5e15, 10\n        ],\n        [\n                'Magic Bars I', 5e15, 10\n        ],\n        [\n                'Resource 3 Power I', 5e15, 10\n        ],\n        [\n                'Resource 3 Cap I', 5e15, 10\n        ],\n        [\n                'Resource 3 Bars I', 5e15, 10\n        ],\n        [\n                'Hack Speed I', 1e16, 10\n        ],\n        [\n                'Active Quest Reward I', 2e16, 10\n        ],\n        [\n                'Minimal Rebirth Time', 3e16, 6\n        ],\n        //page 2\n        [\n                'Wish Speed II', 5e16, 10\n        ],\n        [\n                'Inventory space II', 8e16, 12\n        ],\n        [\n                'Faster Basic Training', 1e17, 1\n        ],\n        [\n                'Blood MacGuffin α Target', 6e16, 1\n        ],\n        [\n                'Fruit of MacGuffin α Target', 6e16, 1\n        ],\n        [\n                'Oscar Meyer Weiner', 1e18, 1\n        ],\n        [\n                'Daycare Kitty Happiness', 5e16, 10\n        ],\n        [\n                'Dual Wield I', 3e17, 10\n        ],\n        [\n                'Adventure Stats II', 2e17, 10\n        ],\n        [\n                'Stats II', 2e17, 10\n        ],\n        [\n                'Energy Power II', 1e17, 10\n        ],\n        [\n                'Energy Cap II', 1e17, 10\n        ],\n        [\n                'Energy Bars II', 1e17, 10\n        ],\n        [\n                'Magic Power II', 1e17, 10\n        ],\n        [\n                'Magic Cap II', 1e17, 10\n        ],\n        [\n                'Magic Bars II', 1e17, 10\n        ],\n        [\n                'Resource 3 Power II', 1e17, 10\n        ],\n        [\n                'Resource 3 Cap II', 1e17, 10\n        ],\n        [\n                'Resource 3 Bars II', 1e17, 10\n        ],\n        [\n                'Godmother QP', 1e19, 1\n        ],\n        [\n                'Exile QP', 3e20, 1\n        ],\n        // page 3\n        [\n                'Hack Speed II', 7e17, 10\n        ],\n        [\n                'Wish Speed III', 2e18, 10\n        ],\n        [\n                'Daycare Kitty Art', 3e19, 1\n        ],\n        [\n                'Dual Wield II', 1e19, 10\n        ],\n        [\n                'Respawn Rate', 6e18, 10\n        ],\n        [\n                'More QP', 3e18, 10\n        ],\n        [\n                'Energy Power III', 5e18, 10\n        ],\n        [\n                'Energy Cap III', 5e18, 10\n        ],\n        [\n                'Energy Bars III', 5e18, 10\n        ],\n        [\n                'Magic Power III', 5e18, 10\n        ],\n        [\n                'Magic Cap III', 5e18, 10\n        ],\n        [\n                'Magic Bars III', 5e18, 10\n        ],\n        [\n                'Resource 3 Power III', 5e18, 10\n        ],\n        [\n                'Resource 3 Cap III', 5e18, 10\n        ],\n        [\n                'Resource 3 Bars III', 5e18, 10\n        ],\n        [\n                'Inventory space III', 8e19, 12\n        ],\n        [\n                'Oh Shit', 3e21, 1\n        ],\n        [\n                'Blood MacGuffin α Sucks', 4e20, 10\n        ],\n        [\n                'Fruit of MacGuffin α Sucks', 4e20, 10\n        ],\n        [\n                'Exp Bonus', 8e19, 10\n        ],\n        [\n                'Active Quests II', 8e20, 10\n        ],\n        // page 4\n        [\n                'Hack Speed III', 5e20, 10\n        ],\n        [\n                'Energy Power IV', 3e20, 10\n        ],\n        [\n                'Energy Cap IV', 3e20, 10\n        ],\n        [\n                'Energy Bars IV', 3e20, 10\n        ],\n        [\n                'Magic Power IV', 3e20, 10\n        ],\n        [\n                'Magic Cap IV', 3e20, 10\n        ],\n        [\n                'Magic Bars IV', 3e20, 10\n        ],\n        [\n                'Resource 3 Power IV', 3e20, 10\n        ],\n        [\n                'Resource 3 Cap IV', 3e20, 10\n        ],\n        [\n                'Resource 3 Bars IV', 3e20, 10\n        ],\n        [\n                'Beast QP', 2e16, 1\n        ],\n        [\n                'Greasy Nerd QP', 5.00E+17, 1\n        ],\n        [\n                'Seek help.', 5.00E+21, 1\n        ],\n        [\n                'QP Hack Milestone I', 2.00E+17, 5\n        ],\n        [\n                'Number Hack Milestone I', 1.00E+19, 5\n        ],\n        [\n                'Hack Hack Milestone I', 6.00E+20, 10\n        ],\n        [\n                'More Base PP', 2.00E+21, 10\n        ],\n        [\n                'Higher level quest drops I', 5.00E+17, 2\n        ],\n        [\n                'Higher level quest drops II', 1.00E+22, 2\n        ],\n        [\n                'Energy Power V', 5.00E+21, 10\n        ],\n        [\n                'Energy Bars V', 5.00E+21, 10\n        ],\n        [\n                'Energy Cap V', 5.00E+21, 10\n        ],\n        [\n                'Magic Power V', 5.00E+21, 10\n        ],\n        [\n                'Magic Bars V', 5.00E+21, 10\n        ],\n        [\n                'Magic Cap V', 5.00E+21, 10\n        ],\n        [\n                'Resource 3 Power V', 5.00E+21, 10\n        ],\n        [\n                'Resource 3 Bars V', 5.00E+21, 10\n        ],\n        [\n                'Resource 3 Cap V', 5.00E+21, 10\n        ],\n        [\n                'Energy Power VI', 1.00E+23, 10\n        ],\n        [\n                'Energy Bars VI', 1.00E+23, 10\n        ],\n        [\n                'Energy Cap VI', 1.00E+23, 10\n        ],\n        [\n                'Magic Power VI', 1.00E+23, 10\n        ],\n        [\n                'Magic Bars VI', 1.00E+23, 10\n        ],\n        [\n                'Magic Cap VI', 1.00E+23, 10\n        ],\n        [\n                'Resource 3 Power VI', 1.00E+23, 10\n        ],\n        [\n                'Resource 3 Bars VI', 1.00E+23, 10\n        ],\n        [\n                'Resource 3 Cap VI', 1.00E+23, 10\n        ],\n        [\n                'Titan 10 QP', 5.00E+22, 1\n        ],\n        [\n                'Major Quests Base QP', 1.00E+22, 10\n        ],\n        [\n                'Minor Quests Base QP', 1.80E+23, 2\n        ],\n        [\n                'Adventure Stats III', 1.00E+19, 10\n        ],\n        [\n                'Adventure Stats IV', 3.00E+21, 10\n        ],\n        [\n                'Stats III', 2.00E+19, 10\n        ],\n        [\n                'Stats IV', 1.00E+21, 10\n        ],\n        [\n                'Sadistic Boss Multiplier I ', 2.00E+22, 10\n        ],\n        [\n                'Sadistic Boss Multiplier II ', 5.00E+23, 10\n        ],\n        [\n                'Accessory Slot', 5.00E+24, 1\n        ]\n];\n\nexport const resource_priorities = [\n        [\n                1, 0, 2\n        ],\n        [\n                1, 2, 0\n        ],\n        [\n                2, 1, 0\n        ],\n        [\n                0, 1, 2\n        ],\n        [\n                2, 0, 1\n        ],\n        [\n                0, 2, 1\n        ]\n];\n\nconst vngu = (cost, bonus, softcap, scbonus, scexponent) => {\n        return {cost: cost, bonus: bonus, softcap: softcap, scbonus: scbonus, scexponent: scexponent};\n};\nconst ngu = (name, nc, nb, nsc, nscb, nsce, ec, eb, esc, escb, esce, sc, sb, ssc, sscb, ssce) => {\n        return {\n                name: name,\n                normal: vngu(nc, nb, nsc, nscb, nsce),\n                evil: vngu(ec, eb, esc, escb, esce),\n                sadistic: vngu(sc, sb, ssc, sscb, ssce)\n        };\n};\n\nexport const NGUs = {\n        energy: [\n                ngu('Augments', 1.00E+13, 1.00E-02, 1.00E+09, 0, 0.00E+00, 1.00E+22, 5.00E-03, 1.00E+09, 0, 0.00E+00, 1.00E+33, 4.00E-03, 1.00E+09, 0, 0.00E+00),\n                ngu('Wandoos', 1.00E+13, 1.00E-03, 1.00E+09, 0, 0.00E+00, 1.00E+22, 1.00E-03, 1.00E+03, 177.9, 2.50E-01, 1.00E+33, 6.00E-04, 1.00E+03, 354.81, 1.50E-01),\n                ngu('Respawn', 1.00E+13, 5.00E-04, 4.00E+02, 5, 2.00E-01, 1.00E+22, 5.00E-06, 1.00E+04, 20, 5.00E-02, 1.00E+33, 5.00E-06, 1.00E+04, 20, 5.00E-02),\n                ngu('Gold', 1.00E+13, 1.00E-02, 1.00E+09, 0, 0.00E+00, 1.00E+23, 5.00E-03, 1.00E+09, 0, 0.00E+00, 1.00E+33, 5.00E-03, 1.00E+03, 31.63, 5.00E-01),\n                ngu('Adventure α', 1.00E+13, 1.00E-03, 1.00E+03, 31.7, 5.00E-01, 1.00E+24, 5.00E-04, 1.00E+03, 177.9, 2.50E-01, 1.00E+34, 4.00E-04, 1.00E+03, 251.19, 2.00E-01),\n                ngu('Power α', 1.00E+13, 5.00E-02, 1.00E+09, 0, 0.00E+00, 1.00E+25, 2.00E-02, 1.00E+09, 0, 0.00E+00, 1.00E+35, 1.60E-02, 1.00E+09, 0, 0.00E+00),\n                ngu('Drop Chance', 1.00E+15, 1.00E-03, 1.00E+03, 31.7, 5.00E-01, 1.00E+26, 5.00E-04, 1.00E+03, 125.9, 3.00E-01, 1.00E+36, 4.00E-04, 1.00E+03, 251.2, 2.00E-01),\n                ngu('Magic NGU', 2.00E+16, 1.00E-03, 1.00E+03, 125.9, 3.00E-01, 1.00E+27, 5.00E-04, 1.00E+03, 125.9, 3.00E-01, 1.00E+37, 4.00E-04, 1.00E+03, 501.19, 1.00E-01),\n                ngu('PP', 5.00E+17, 5.00E-04, 1.00E+03, 125.9, 3.00E-01, 1.01E+28, 2.00E-04, 1.00E+03, 251.2, 2.00E-01, 1.00E+38, 1.60E-04, 1.00E+03, 501.21, 1.00E-01)\n        ],\n        magic: [\n                ngu('Yggdrasil', 2.00E+13, 1.00E-03, 4.00E+02, 55.4, 3.30E-01, 1.00E+22, 5.00E-04, 4.00E+02, 219.72, 1.00E-01, 1.00E+33, 4.00E-04, 4.00E+02, 247.69, 8.00E-02),\n                ngu('Exp', 6.00E+13, 1.00E-04, 2.00E+03, 95.66, 4.00E-01, 1.00E+23, 5.00E-05, 2.00E+03, 437.35, 2.00E-01, 1.00E+33, 5.00E-05, 2.00E+03, 639.56, 1.50E-01),\n                ngu('Power β', 2.00E+14, 1.00E-02, 1.00E+09, 0, 0.00E+00, 1.00E+24, 5.00E-03, 1.00E+09, 0, 0.00E+00, 1.00E+34, 5.00E-03, 1.00E+09, 0, 0.00E+00),\n                ngu('Number', 6.00E+14, 1.00E-02, 1.00E+03, 31.7, 5.00E-01, 1.00E+25, 5.00E-03, 1.00E+03, 125.9, 3.00E-01, 1.00E+35, 5.00E-03, 1.00E+03, 251.2, 2.00E-01),\n                ngu('Time Machine', 5.00E+15, 2.00E-03, 1.00E+03, 3.981, 8.00E-01, 1.00E+26, 1.00E-03, 1.00E+03, 3.981, 8.00E-01, 1.00E+36, 1.00E-03, 1.00E+03, 3.981, 8.00E-01),\n                ngu('Energy NGU', 5.00E+16, 1.00E-03, 1.00E+03, 125.9, 3.00E-01, 1.00E+27, 5.00E-04, 1.00E+03, 251.2, 2.00E-01, 1.00E+37, 5.00E-04, 1.00E+03, 354.82, 1.50E-01),\n                ngu('Adventure β', 5.00E+17, 3.00E-04, 1.00E+03, 63.13, 4.00E-01, 1.01E+28, 1.50E-04, 1.00E+03, 177.83, 2.50E-01, 1.00E+38, 1.50E-04, 1.00E+03, 436.53, 1.20E-01)\n        ]\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import {EmptySlot, Item, Stat, Slot, SetName} from './ItemAux'\nexport const ITEMLIST = [\n    new EmptySlot(Slot.WEAPON),\n    new EmptySlot(Slot.HEAD),\n    new EmptySlot(Slot.CHEST),\n    new EmptySlot(Slot.PANTS),\n    new EmptySlot(Slot.BOOTS),\n    new EmptySlot(Slot.ACCESSORY),\n    new EmptySlot(Slot.OTHER),\n    new Item('Crappy Helmet', Slot.HEAD, SetName.SEWERS, 100, [\n        [Stat.TOUGHNESS, 5],\n        [Stat.ENERGY_SPEED, 3],\n    ]),\n    new Item('Crappy Chestplate', Slot.CHEST, SetName.SEWERS, 100, [\n        [Stat.TOUGHNESS, 5],\n    ]),\n    new Item('Crappy Leggings', Slot.PANTS, SetName.SEWERS, 100, [\n        [Stat.TOUGHNESS, 5],\n    ]),\n    new Item('Crappy Boots', Slot.BOOTS, SetName.SEWERS, 100, [\n        [Stat.TOUGHNESS, 5],\n        [Stat.ENERGY_SPEED, 5],\n    ]),\n    new Item('Rusty Sword', Slot.WEAPON, SetName.SEWERS, 100, [\n        [Stat.POWER, 20],\n    ]),\n    new Item('Gross Ring', Slot.ACCESSORY, SetName.SEWERS, 100, [\n        [Stat.POWER, 1],\n        [Stat.TOUGHNESS, 1],\n        [Stat.ENERGY_SPEED, 20],\n    ]),\n    new Item('Cracked Amulet', Slot.ACCESSORY, SetName.SEWERS, 100, [\n        [Stat.POWER, 5],\n        [Stat.TOUGHNESS, 5],\n    ]),\n    new Item('Forest Helmet', Slot.HEAD, SetName.FOREST, 100, [\n        [Stat.TOUGHNESS, 20],\n        [Stat.ENERGY_SPEED, 12],\n        [Stat.ENERGY_POWER, 10],\n    ]),\n    new Item('Forest Chestplate', Slot.CHEST, SetName.FOREST, 100, [\n        [Stat.TOUGHNESS, 20],\n        [Stat.ENERGY_SPEED, 8],\n        [Stat.ENERGY_POWER, 12],\n    ]),\n    new Item('Forest Leggings', Slot.PANTS, SetName.FOREST, 100, [\n        [Stat.TOUGHNESS, 20],\n        [Stat.ENERGY_SPEED, 8],\n    ]),\n    new Item('Forest Boots', Slot.BOOTS, SetName.FOREST, 100, [\n        [Stat.TOUGHNESS, 20],\n        [Stat.ENERGY_POWER, 5],\n    ]),\n    new Item('Kokiri Blade', Slot.WEAPON, SetName.FOREST, 100, [\n        [Stat.POWER, 80],\n        [Stat.ENERGY_POWER, 10],\n    ]),\n    new Item('Mossy Ring', Slot.ACCESSORY, SetName.FOREST, 100, [\n        [Stat.POWER, 8],\n        [Stat.TOUGHNESS, 8],\n        [Stat.ENERGY_SPEED, 20],\n    ]),\n    new Item('Forest Pendant', Slot.ACCESSORY, SetName.FOREST_PENDANT, 100, [\n    ]),\n    new Item('Blue Cheese Helmet', Slot.HEAD, SetName.CAVE, 100, [\n        [Stat.TOUGHNESS, 50],\n        [Stat.MAGIC_POWER, 7],\n    ]),\n    new Item('Gouda Chestplate', Slot.CHEST, SetName.CAVE, 100, [\n        [Stat.TOUGHNESS, 50],\n        [Stat.MAGIC_POWER, 13],\n    ]),\n    new Item('Swiss Leggings', Slot.PANTS, SetName.CAVE, 100, [\n        [Stat.TOUGHNESS, 50],\n        [Stat.MAGIC_SPEED, 10],\n    ]),\n    new Item('Limburger Boots', Slot.BOOTS, SetName.CAVE, 100, [\n        [Stat.TOUGHNESS, 50],\n        [Stat.MAGIC_SPEED, 10],\n        [Stat.MAGIC_POWER, 10],\n    ]),\n    new Item('Mole Hammer', Slot.WEAPON, SetName.CAVE, 100, [\n        [Stat.POWER, 200],\n        [Stat.ENERGY_BARS, 15],\n    ]),\n    new Item('Havarti Ring', Slot.ACCESSORY, SetName.CAVE, 100, [\n        [Stat.POWER, 4],\n        [Stat.TOUGHNESS, 4],\n        [Stat.MAGIC_SPEED, 25],\n        [Stat.MAGIC_POWER, 25],\n    ]),\n    new Item('Cheddar Amulet', Slot.ACCESSORY, SetName.CAVE, 100, [\n        [Stat.POWER, 1],\n        [Stat.TOUGHNESS, 1],\n        [Stat.ENERGY_POWER, 30],\n        [Stat.ENERGY_SPEED, 60],\n    ]),\n    new Item('Combat Cheese', Slot.ACCESSORY, SetName.CAVE, 100, [\n        [Stat.POWER, 30],\n        [Stat.TOUGHNESS, 30],\n        [Stat.GOLD_DROP, 10],\n    ]),\n    new Item('Cloth Hat', Slot.HEAD, SetName.TRAINING, 100, [\n        [Stat.TOUGHNESS, 1],\n    ]),\n    new Item('Cloth Shirt', Slot.CHEST, SetName.TRAINING, 100, [\n        [Stat.TOUGHNESS, 1],\n    ]),\n    new Item('Cloth Leggings', Slot.PANTS, SetName.TRAINING, 100, [\n        [Stat.TOUGHNESS, 1],\n    ]),\n    new Item('Cloth Boots', Slot.BOOTS, SetName.TRAINING, 100, [\n        [Stat.TOUGHNESS, 1],\n    ]),\n    new Item('Looty McLootFace', Slot.ACCESSORY, SetName.LOOTY, 100, [\n        [Stat.POWER, 2],\n        [Stat.TOUGHNESS, 2],\n        [Stat.DROP_CHANCE, 10],\n    ]),\n    new Item('Magitech Helmet', Slot.HEAD, SetName.HSB, 100, [\n        [Stat.TOUGHNESS, 125],\n        [Stat.ENERGY_BARS, 25],\n        [Stat.MAGIC_BARS, 15],\n    ]),\n    new Item('Magitech Chestplate', Slot.CHEST, SetName.HSB, 100, [\n        [Stat.TOUGHNESS, 125],\n        [Stat.ENERGY_BARS, 15],\n        [Stat.MAGIC_SPEED, 20],\n    ]),\n    new Item('Magitech Leggings', Slot.PANTS, SetName.HSB, 100, [\n        [Stat.TOUGHNESS, 125],\n        [Stat.MAGIC_BARS, 20],\n        [Stat.MAGIC_POWER, 10],\n    ]),\n    new Item('Magitech Boots', Slot.BOOTS, SetName.HSB, 100, [\n        [Stat.TOUGHNESS, 125],\n        [Stat.ENERGY_POWER, 25],\n        [Stat.MAGIC_POWER, 15],\n    ]),\n    new Item('Magitech Blade', Slot.WEAPON, SetName.HSB, 100, [\n        [Stat.POWER, 500],\n        [Stat.GOLD_DROP, 20],\n        [Stat.ENERGY_CAP, 6],\n        [Stat.MAGIC_CAP, 4],\n    ]),\n    new Item('Magitech Ring', Slot.ACCESSORY, SetName.HSB, 100, [\n        [Stat.POWER, 45],\n        [Stat.TOUGHNESS, 45],\n        [Stat.MAGIC_POWER, 40],\n    ]),\n    new Item('Magitech Amulet', Slot.ACCESSORY, SetName.HSB, 100, [\n        [Stat.ENERGY_POWER, 30],\n        [Stat.ENERGY_CAP, 0.9],\n        [Stat.GOLD_DROP, 20],\n    ]),\n    new Item('A Stick', Slot.WEAPON, SetName.TRAINING, 100, [\n        [Stat.POWER, 3],\n    ]),\n    new Item('Ascended Forest Pendant', Slot.ACCESSORY, SetName.FOREST_PENDANT, 100, [\n        [Stat.POWER, 100],\n        [Stat.TOUGHNESS, 100],\n        [Stat.DROP_CHANCE, 20],\n        [Stat.GOLD_DROP, 200],\n    ]),\n    new Item('4G\\'s Merge and Boost Tutorial Cube', Slot.ACCESSORY, SetName.SEWERS, 100, [\n        [Stat.POWER, 7],\n        [Stat.TOUGHNESS, 7],\n        [Stat.ENERGY_SPEED, 15],\n    ]),\n    new Item('Chef\\'s Hat', Slot.HEAD, SetName.GRB, 100, [\n        [Stat.POWER, 250],\n        [Stat.TOUGHNESS, 250],\n        [Stat.COOKING, 30],\n        [Stat.ENERGY_POWER, 50],\n    ]),\n    new Item('Chef\\'s Apron', Slot.CHEST, SetName.GRB, 100, [\n        [Stat.POWER, 20],\n        [Stat.TOUGHNESS, 250],\n        [Stat.COOKING, 30],\n        [Stat.ENERGY_POWER, 50],\n    ]),\n    new Item('Regular Pants', Slot.PANTS, SetName.GRB, 100, [\n        [Stat.POWER, 20],\n        [Stat.TOUGHNESS, 250],\n        [Stat.COOKING, 30],\n        [Stat.ENERGY_POWER, 65],\n    ]),\n    new Item('Non Slip Shoes', Slot.BOOTS, SetName.GRB, 100, [\n        [Stat.POWER, 20],\n        [Stat.TOUGHNESS, 250],\n        [Stat.COOKING, 30],\n        [Stat.ENERGY_POWER, 65],\n    ]),\n    new Item('Bloody Cleaver', Slot.WEAPON, SetName.GRB, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 80],\n        [Stat.COOKING, 120],\n        [Stat.ENERGY_POWER, 45],\n        [Stat.ENERGY_BARS, 65],\n    ]),\n    new Item('Suspicious Sausage Necklace', Slot.ACCESSORY, SetName.GRB, 100, [\n        [Stat.POWER, 250],\n        [Stat.TOUGHNESS, 250],\n    ]),\n    new Item('Raw Slab of Meat', Slot.ACCESSORY, SetName.GRB, 100, [\n        [Stat.ENERGY_POWER, 70],\n        [Stat.ENERGY_CAP, 5],\n    ]),\n    new Item('Clockwork Hat', Slot.HEAD, SetName.CLOCK, 100, [\n        [Stat.POWER, 30],\n        [Stat.TOUGHNESS, 430],\n        [Stat.MAGIC_POWER, 30],\n        [Stat.MAGIC_CAP, 2],\n    ]),\n    new Item('Clockwork Chest', Slot.CHEST, SetName.CLOCK, 100, [\n        [Stat.POWER, 20],\n        [Stat.TOUGHNESS, 445],\n        [Stat.MAGIC_POWER, 30],\n        [Stat.MAGIC_CAP, 3],\n    ]),\n    new Item('Clockwork Pants', Slot.PANTS, SetName.CLOCK, 100, [\n        [Stat.POWER, 20],\n        [Stat.TOUGHNESS, 500],\n        [Stat.MAGIC_POWER, 30],\n        [Stat.MAGIC_CAP, 3],\n    ]),\n    new Item('Clockwork Boots', Slot.BOOTS, SetName.CLOCK, 100, [\n        [Stat.POWER, 20],\n        [Stat.TOUGHNESS, 515],\n        [Stat.MAGIC_POWER, 30],\n        [Stat.MAGIC_CAP, 3],\n    ]),\n    new Item('A Comically Oversized Minute-Hand', Slot.WEAPON, SetName.CLOCK, 100, [\n        [Stat.POWER, 2500],\n        [Stat.TOUGHNESS, 80],\n        [Stat.MAGIC_POWER, 50],\n        [Stat.MAGIC_BARS, 65],\n    ]),\n    new Item('Alarm Clock', Slot.ACCESSORY, SetName.CLOCK, 100, [\n        [Stat.POWER, 450],\n        [Stat.TOUGHNESS, 450],\n    ]),\n    new Item('The Sands of Time', Slot.ACCESSORY, SetName.CLOCK, 100, [\n        [Stat.MOVE_COOLDOWN, 10],\n    ]),\n    new Item('Ascended Ascended Forest Pendant', Slot.ACCESSORY, SetName.FOREST_PENDANT, 100, [\n        [Stat.POWER, 800],\n        [Stat.TOUGHNESS, 800],\n        [Stat.DROP_CHANCE, 40],\n        [Stat.GOLD_DROP, 400],\n        [Stat.MAGIC_POWER, 100],\n    ]),\n    new Item('Circle Helmet', Slot.HEAD, SetName.TWO_D, 100, [\n        [Stat.POWER, 50],\n        [Stat.TOUGHNESS, 600],\n        [Stat.ENERGY_POWER, 95],\n        [Stat.ENERGY_BARS, 30],\n        [Stat.WANDOOS_SPEED, 10],\n    ]),\n    new Item('Square Chestpiece', Slot.CHEST, SetName.TWO_D, 100, [\n        [Stat.POWER, 50],\n        [Stat.TOUGHNESS, 645],\n        [Stat.MAGIC_POWER, 40],\n        [Stat.ENERGY_POWER, 50],\n        [Stat.ENERGY_BARS, 50],\n    ]),\n    new Item('Rectangle Pants', Slot.PANTS, SetName.TWO_D, 100, [\n        [Stat.POWER, 70],\n        [Stat.TOUGHNESS, 760],\n        [Stat.ENERGY_POWER, 50],\n        [Stat.ENERGY_CAP, 7],\n    ]),\n    new Item('Polygon Boots', Slot.BOOTS, SetName.TWO_D, 100, [\n        [Stat.POWER, 60],\n        [Stat.TOUGHNESS, 700],\n        [Stat.ENERGY_POWER, 50],\n        [Stat.ENERGY_BARS, 70],\n        [Stat.ENERGY_CAP, 5],\n    ]),\n    new Item('A Triangle', Slot.WEAPON, SetName.TWO_D, 100, [\n        [Stat.POWER, 4600],\n        [Stat.TOUGHNESS, 300],\n        [Stat.ENERGY_POWER, 45],\n        [Stat.ENERGY_BARS, 50],\n    ]),\n    new Item('THE CUBE', Slot.ACCESSORY, SetName.TWO_D, 100, [\n        [Stat.POWER, 650],\n        [Stat.TOUGHNESS, 650],\n    ]),\n    new Item('King Circle\\'s Amulet of Helping Random Stuff', Slot.ACCESSORY, SetName.TWO_D, 100, [\n        [Stat.WANDOOS_SPEED, 30],\n        [Stat.AT_SPEED, 40],\n    ]),\n    new Item('Spoopy Helmet', Slot.HEAD, SetName.SPOOPY, 100, [\n        [Stat.POWER, 50],\n        [Stat.TOUGHNESS, 1000],\n        [Stat.ENERGY_CAP, 10.3],\n        [Stat.MAGIC_CAP, 10.5],\n        [Stat.MAGIC_POWER, 75],\n    ]),\n    new Item('Ghostly Chest', Slot.CHEST, SetName.SPOOPY, 100, [\n        [Stat.POWER, 80],\n        [Stat.TOUGHNESS, 1035],\n        [Stat.ENERGY_CAP, 11],\n        [Stat.MAGIC_CAP, 11.5],\n        [Stat.MAGIC_POWER, 40],\n    ]),\n    new Item('Pants of Horror', Slot.PANTS, SetName.SPOOPY, 100, [\n        [Stat.POWER, 70],\n        [Stat.TOUGHNESS, 1060],\n        [Stat.ENERGY_CAP, 14],\n        [Stat.MAGIC_CAP, 12],\n        [Stat.MAGIC_BARS, 40],\n    ]),\n    new Item('Spectral Boots', Slot.BOOTS, SetName.SPOOPY, 100, [\n        [Stat.POWER, 60],\n        [Stat.TOUGHNESS, 1090],\n        [Stat.ENERGY_POWER, 50],\n        [Stat.MAGIC_CAP, 9],\n        [Stat.ENERGY_CAP, 5],\n    ]),\n    new Item('Spooky Sword', Slot.WEAPON, SetName.SPOOPY, 100, [\n        [Stat.POWER, 8888],\n        [Stat.TOUGHNESS, 300],\n        [Stat.ENERGY_POWER, 85],\n        [Stat.MAGIC_POWER, 110],\n    ]),\n    new Item('Cursed Ring', Slot.ACCESSORY, SetName.SPOOPY, 100, [\n        [Stat.POWER, 1050],\n        [Stat.TOUGHNESS, 1050],\n    ]),\n    new Item('Amulet of Sunshine, Sparkles, and Gore', Slot.ACCESSORY, SetName.SPOOPY, 100, [\n        [Stat.ENERGY_POWER, 100],\n        [Stat.MAGIC_POWER, 100],\n    ]),\n    new Item('Dragon Wings', Slot.ACCESSORY, SetName.SPOOPY, 100, [\n        [Stat.POWER, 82],\n        [Stat.TOUGHNESS, 82],\n        [Stat.MAGIC_CAP, 22.82],\n        [Stat.MAGIC_POWER, 108.2],\n        [Stat.GOLD_DROP, 200],\n    ]),\n    new Item('Office Hat', Slot.HEAD, SetName.JAKE, 100, [\n        [Stat.POWER, 80],\n        [Stat.TOUGHNESS, 1300],\n        [Stat.ENERGY_CAP, 15.82],\n        [Stat.ENERGY_POWER, 108.2],\n    ]),\n    new Item('Office Shirt', Slot.CHEST, SetName.JAKE, 100, [\n        [Stat.POWER, 80],\n        [Stat.TOUGHNESS, 1250],\n        [Stat.ENERGY_CAP, 30.82],\n        [Stat.ENERGY_POWER, 78.2],\n    ]),\n    new Item('Office Pants', Slot.PANTS, SetName.JAKE, 100, [\n        [Stat.POWER, 80],\n        [Stat.TOUGHNESS, 1399],\n        [Stat.ENERGY_CAP, 28.82],\n        [Stat.ENERGY_POWER, 58.2],\n    ]),\n    new Item('Office Shoes', Slot.BOOTS, SetName.JAKE, 100, [\n        [Stat.POWER, 80],\n        [Stat.TOUGHNESS, 1300],\n        [Stat.ENERGY_POWER, 168.2],\n    ]),\n    new Item('The Pen-Is', Slot.WEAPON, SetName.JAKE, 100, [\n        [Stat.POWER, 11500],\n        [Stat.MAGIC_CAP, 23.56],\n        [Stat.MAGIC_POWER, 88.2],\n    ]),\n    new Item('A Regular Tie', Slot.ACCESSORY, SetName.JAKE, 100, [\n        [Stat.TOUGHNESS, 82],\n        [Stat.NGU_SPEED, 60],\n        [Stat.MAGIC_POWER, 108.2],\n        [Stat.GOLD_DROP, 200],\n    ]),\n    new Item('Generic Paperweight', Slot.ACCESSORY, SetName.JAKE, 100, [\n        [Stat.POWER, 1450],\n        [Stat.TOUGHNESS, 1450],\n    ]),\n    new Item('Stapler', Slot.ACCESSORY, SetName.JAKE, 100, [\n        [Stat.POWER, 500],\n        [Stat.ENERGY_CAP, 30],\n        [Stat.RESPAWN, 6],\n    ]),\n    new Item('My Red Heart <3', Slot.ACCESSORY, SetName.HEART, 100, [\n        [Stat.POWER, 100],\n        [Stat.TOUGHNESS, 100],\n        [Stat.EXPERIENCE, 5],\n        [Stat.DROP_CHANCE, 30],\n    ]),\n    new Item('The Lonely Flubber', Slot.ACCESSORY, SetName.MISC, 100, [\n    ]),\n    new Item('The Triple Flubber', Slot.ACCESSORY, SetName.MISC, 100, [\n        [Stat.RESPAWN, 4],\n    ]),\n    new Item('Gaudy Hat', Slot.HEAD, SetName.GAUDY, 100, [\n        [Stat.POWER, 280],\n        [Stat.TOUGHNESS, 2400],\n        [Stat.ENERGY_BARS, 60],\n        [Stat.MAGIC_BARS, 60],\n    ]),\n    new Item('Gaudy Shirt', Slot.CHEST, SetName.GAUDY, 100, [\n        [Stat.POWER, 250],\n        [Stat.TOUGHNESS, 2500],\n        [Stat.ENERGY_CAP, 38],\n        [Stat.ENERGY_POWER, 96],\n    ]),\n    new Item('Gaudy Pants', Slot.PANTS, SetName.GAUDY, 100, [\n        [Stat.POWER, 300],\n        [Stat.TOUGHNESS, 2600],\n        [Stat.ENERGY_CAP, 36],\n        [Stat.ENERGY_POWER, 90],\n    ]),\n    new Item('Gaudy Boots', Slot.BOOTS, SetName.GAUDY, 100, [\n        [Stat.POWER, 200],\n        [Stat.TOUGHNESS, 2400],\n        [Stat.MAGIC_POWER, 120],\n    ]),\n    new Item('Paper Fan', Slot.WEAPON, SetName.GAUDY, 100, [\n        [Stat.POWER, 20000],\n        [Stat.MAGIC_BARS, 100],\n        [Stat.MAGIC_POWER, 130],\n    ]),\n    new Item('A Beanie', Slot.HEAD, SetName.GAUDY, 100, [\n        [Stat.POWER, 2000],\n        [Stat.TOUGHNESS, 3000],\n        [Stat.MAGIC_CAP, 53],\n        [Stat.MAGIC_POWER, 185],\n    ]),\n    new Item('Sir Looty McLootington III, Esquire', Slot.ACCESSORY, SetName.LOOTY, 100, [\n        [Stat.POWER, 200],\n        [Stat.TOUGHNESS, 200],\n        [Stat.DROP_CHANCE, 40],\n        [Stat.ENERGY_POWER, 100],\n        [Stat.MAGIC_POWER, 100],\n    ]),\n    new Item('My Yellow Heart <3', Slot.ACCESSORY, SetName.HEART, 100, [\n        [Stat.POWER, 100],\n        [Stat.TOUGHNESS, 100],\n        [Stat.AP, 10],\n        [Stat.GOLD_DROP, 300],\n    ]),\n    new Item('Mega Helmet', Slot.HEAD, SetName.MEGA, 100, [\n        [Stat.POWER, 300],\n        [Stat.TOUGHNESS, 5600],\n        [Stat.ENERGY_POWER, 230],\n        [Stat.MAGIC_POWER, 230],\n    ]),\n    new Item('Mega Chest', Slot.CHEST, SetName.MEGA, 100, [\n        [Stat.POWER, 300],\n        [Stat.TOUGHNESS, 5600],\n        [Stat.ENERGY_BARS, 170],\n        [Stat.MAGIC_BARS, 170],\n    ]),\n    new Item('Mega Blue Jeans', Slot.PANTS, SetName.MEGA, 100, [\n        [Stat.POWER, 300],\n        [Stat.TOUGHNESS, 5700],\n        [Stat.ENERGY_CAP, 46],\n        [Stat.MAGIC_CAP, 46],\n    ]),\n    new Item('Mega Boots', Slot.BOOTS, SetName.MEGA, 100, [\n        [Stat.POWER, 300],\n        [Stat.TOUGHNESS, 5500],\n        [Stat.MAGIC_POWER, 140],\n        [Stat.MAGIC_BARS, 150],\n    ]),\n    new Item('Beam Laser Sword', Slot.WEAPON, SetName.MEGA, 100, [\n        [Stat.POWER, 44000],\n        [Stat.ENERGY_POWER, 140],\n        [Stat.ENERGY_BARS, 100],\n        [Stat.ENERGY_CAP, 20],\n    ]),\n    new Item('Ring of Apathy', Slot.ACCESSORY, SetName.MISC, 100, [\n    ]),\n    new Item('Ring of Greed', Slot.ACCESSORY, SetName.UUG_RINGS, 100, [\n        [Stat.GOLD_DROP, 800],\n        [Stat.DROP_CHANCE, 60],\n        [Stat.RESPAWN, 8],\n    ]),\n    new Item('Ring of Might', Slot.ACCESSORY, SetName.UUG_RINGS, 100, [\n        [Stat.POWER, 6666],\n        [Stat.TOUGHNESS, 6666],\n        [Stat.MOVE_COOLDOWN, 10],\n        [Stat.RESPAWN, 2],\n    ]),\n    new Item('Ring of Utility', Slot.ACCESSORY, SetName.UUG_RINGS, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 1000],\n        [Stat.NGU_SPEED, 50],\n        [Stat.WANDOOS_SPEED, 50],\n        [Stat.AT_SPEED, 50],\n    ]),\n    new Item('Ring of Way Too Much Energy', Slot.ACCESSORY, SetName.UUG_RINGS, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 1000],\n        [Stat.ENERGY_POWER, 250],\n        [Stat.ENERGY_BARS, 120],\n        [Stat.ENERGY_CAP, 40],\n    ]),\n    new Item('Ring of Way Too Much Magic', Slot.ACCESSORY, SetName.UUG_RINGS, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 1000],\n        [Stat.MAGIC_POWER, 250],\n        [Stat.MAGIC_BARS, 120],\n        [Stat.MAGIC_CAP, 40],\n    ]),\n    new Item('Ascended Ascended Ascended Pendant', Slot.ACCESSORY, SetName.FOREST_PENDANT, 100, [\n        [Stat.POWER, 40000],\n        [Stat.TOUGHNESS, 40000],\n        [Stat.DROP_CHANCE, 100],\n        [Stat.GOLD_DROP, 800],\n        [Stat.ENERGY_POWER, 270],\n    ]),\n    new Item('Groucho Marx Disguise', Slot.HEAD, SetName.BEARDVERSE, 100, [\n        [Stat.POWER, 1100],\n        [Stat.TOUGHNESS, 12000],\n        [Stat.ENERGY_POWER, 180],\n        [Stat.MAGIC_CAP, 48],\n        [Stat.MAGIC_BARS, 240],\n    ]),\n    new Item('Gossamer Chest', Slot.CHEST, SetName.BEARDVERSE, 100, [\n        [Stat.POWER, 1100],\n        [Stat.TOUGHNESS, 12500],\n        [Stat.ENERGY_CAP, 62],\n        [Stat.MAGIC_CAP, 50],\n    ]),\n    new Item('Braided Beard Legs', Slot.PANTS, SetName.BEARDVERSE, 100, [\n        [Stat.POWER, 1100],\n        [Stat.TOUGHNESS, 12500],\n        [Stat.MAGIC_POWER, 290],\n        [Stat.MAGIC_CAP, 43],\n        [Stat.MAGIC_BARS, 230],\n    ]),\n    new Item('Fuzzy Orange Cheeto Slippers!', Slot.BOOTS, SetName.BEARDVERSE, 100, [\n        [Stat.POWER, 1200],\n        [Stat.TOUGHNESS, 12500],\n        [Stat.ENERGY_POWER, 220],\n        [Stat.ENERGY_BARS, 330],\n        [Stat.ENERGY_CAP, 20],\n    ]),\n    new Item('Bearded Axe', Slot.WEAPON, SetName.BEARDVERSE, 100, [\n        [Stat.POWER, 83000],\n        [Stat.TOUGHNESS, 6000],\n        [Stat.ENERGY_BARS, 220],\n        [Stat.MAGIC_BARS, 220],\n        [Stat.BEARD_SPEED, 10],\n    ]),\n    new Item('An Infinitely Long Strand of Beard Hair', Slot.ACCESSORY, SetName.BEARDVERSE, 100, [\n        [Stat.POWER, 8000],\n        [Stat.TOUGHNESS, 8000],\n        [Stat.ENERGY_POWER, 450],\n        [Stat.MAGIC_POWER, 350],\n        [Stat.BEARD_SPEED, 10],\n    ]),\n    new Item('UUG\\'s \\'Special\\' Ring', Slot.ACCESSORY, SetName.UUG_RINGS, 100, [\n        [Stat.POWER, 12000],\n        [Stat.TOUGHNESS, 12000],\n        [Stat.NGU_SPEED, 100],\n        [Stat.SEED_DROP, 15],\n        [Stat.BEARD_SPEED, 10],\n    ]),\n    new Item('Wanderer\\'s Hat', Slot.HEAD, SetName.WANDERER, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 22000],\n        [Stat.ENERGY_CAP, 85],\n        [Stat.ENERGY_POWER, 750],\n        [Stat.MAGIC_POWER, 200],\n    ]),\n    new Item('Wanderer\\'s Chest', Slot.CHEST, SetName.WANDERER, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 23000],\n        [Stat.ENERGY_POWER, 800],\n        [Stat.ENERGY_BARS, 600],\n        [Stat.MAGIC_CAP, 30],\n    ]),\n    new Item('Wanderer\\'s Pants', Slot.PANTS, SetName.WANDERER, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 23000],\n        [Stat.ENERGY_BARS, 800],\n        [Stat.ENERGY_CAP, 85],\n        [Stat.MAGIC_BARS, 200],\n    ]),\n    new Item('Wanderer\\'s Boots', Slot.BOOTS, SetName.WANDERER, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 24000],\n        [Stat.WANDOOS_SPEED, 130],\n        [Stat.NGU_SPEED, 60],\n    ]),\n    new Item('Wanderer\\'s Cane', Slot.WEAPON, SetName.WANDERER, 100, [\n        [Stat.POWER, 170000],\n        [Stat.TOUGHNESS, 12000],\n    ]),\n    new Item('taH s\\'rerednaW', Slot.HEAD, SetName.WANDERER2, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 21000],\n        [Stat.MAGIC_CAP, 85],\n        [Stat.MAGIC_POWER, 750],\n        [Stat.ENERGY_POWER, 200],\n    ]),\n    new Item('tsehC s\\'rerednaW', Slot.CHEST, SetName.WANDERER2, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 22000],\n        [Stat.MAGIC_POWER, 800],\n        [Stat.MAGIC_BARS, 600],\n        [Stat.ENERGY_CAP, 30],\n    ]),\n    new Item('stnaP s\\'rerednaW', Slot.PANTS, SetName.WANDERER2, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 23000],\n        [Stat.MAGIC_BARS, 800],\n        [Stat.MAGIC_CAP, 85],\n        [Stat.ENERGY_BARS, 200],\n    ]),\n    new Item('stooB s\\'rerednaW', Slot.BOOTS, SetName.WANDERER2, 100, [\n        [Stat.POWER, 1000],\n        [Stat.TOUGHNESS, 24000],\n        [Stat.SEED_DROP, 30],\n        [Stat.BEARD_SPEED, 40],\n    ]),\n    new Item('The Candy Cane of Destiny', Slot.WEAPON, SetName.WANDERER, 100, [\n        [Stat.POWER, 170000],\n        [Stat.TOUGHNESS, 12000],\n        [Stat.ENERGY_POWER, 1000],\n        [Stat.MAGIC_POWER, 1000],\n        [Stat.ENERGY_BARS, 1000],\n        [Stat.MAGIC_BARS, 1000],\n        [Stat.ENERGY_CAP, 100],\n        [Stat.MAGIC_CAP, 100],\n    ]),\n    new Item('Fanny Pack', Slot.ACCESSORY, SetName.WANDERER, 100, [\n        [Stat.POWER, 15000],\n        [Stat.TOUGHNESS, 15000],\n        [Stat.DROP_CHANCE, 30],\n        [Stat.ENERGY_POWER, 500],\n        [Stat.MAGIC_POWER, 500],\n        [Stat.ENERGY_CAP, 30],\n        [Stat.MAGIC_CAP, 30],\n    ]),\n    new Item('Dorky Glasses', Slot.ACCESSORY, SetName.WANDERER2, 100, [\n        [Stat.POWER, 5000],\n        [Stat.TOUGHNESS, 5000],\n        [Stat.NGU_SPEED, 150],\n        [Stat.WANDOOS_SPEED, 120],\n        [Stat.ENERGY_BARS, 500],\n        [Stat.MAGIC_BARS, 500],\n    ]),\n    new Item('My Brown Heart <3', Slot.ACCESSORY, SetName.HEART, 100, [\n        [Stat.POWER, 100],\n        [Stat.TOUGHNESS, 100],\n        [Stat.SEED_DROP, 35],\n        [Stat.ENERGY_POWER, 100],\n        [Stat.MAGIC_POWER, 100],\n    ]),\n    new Item('Badly Drawn Smiley Face', Slot.HEAD, SetName.BADLY_DRAWN, 100, [\n        [Stat.TOUGHNESS, 60000],\n        [Stat.AT_SPEED, 160],\n        [Stat.GOLD_DROP, 1200],\n        [Stat.ENERGY_BARS, 450],\n        [Stat.MAGIC_BARS, 450],\n    ]),\n    new Item('Badly Drawn Chest', Slot.CHEST, SetName.BADLY_DRAWN, 100, [\n        [Stat.TOUGHNESS, 60000],\n        [Stat.MAGIC_CAP, 135],\n        [Stat.ENERGY_POWER, 1400],\n        [Stat.ENERGY_BARS, 450],\n        [Stat.MAGIC_BARS, 450],\n    ]),\n    new Item('Badly Drawn Pants', Slot.PANTS, SetName.BADLY_DRAWN, 100, [\n        [Stat.TOUGHNESS, 60000],\n        [Stat.MAGIC_BARS, 1400],\n        [Stat.ENERGY_CAP, 130],\n        [Stat.ENERGY_POWER, 400],\n        [Stat.MAGIC_POWER, 400],\n    ]),\n    new Item('Badly Drawn Foot', Slot.BOOTS, SetName.BADLY_DRAWN, 100, [\n        [Stat.TOUGHNESS, 60000],\n        [Stat.MAGIC_POWER, 1200],\n        [Stat.ENERGY_BARS, 1200],\n        [Stat.ENERGY_CAP, 40],\n        [Stat.MAGIC_CAP, 40],\n    ]),\n    new Item('Badly Drawn Gun', Slot.WEAPON, SetName.BADLY_DRAWN, 100, [\n        [Stat.POWER, 500000],\n        [Stat.TOUGHNESS, 25000],\n        [Stat.AUGMENT_SPEED, 120],\n        [Stat.ENERGY_CAP, 60],\n        [Stat.MAGIC_CAP, 60],\n        [Stat.ENERGY_POWER, 600],\n        [Stat.MAGIC_POWER, 600],\n    ]),\n    new Item('King Looty', Slot.ACCESSORY, SetName.LOOTY, 100, [\n        [Stat.POWER, 100000],\n        [Stat.TOUGHNESS, 100000],\n        [Stat.DROP_CHANCE, 100],\n        [Stat.ENERGY_POWER, 400],\n        [Stat.MAGIC_POWER, 400],\n        [Stat.ENERGY_CAP, 40],\n        [Stat.MAGIC_CAP, 40],\n    ]),\n    new Item('Ascended x4 Pendant', Slot.ACCESSORY, SetName.FOREST_PENDANT, 100, [\n        [Stat.POWER, 100000],\n        [Stat.TOUGHNESS, 100000],\n        [Stat.QUEST_DROP, 5],\n        [Stat.DROP_CHANCE, 250],\n        [Stat.ENERGY_CAP, 120],\n        [Stat.MAGIC_CAP, 120],\n    ]),\n    new Item('My Green Heart <3', Slot.ACCESSORY, SetName.HEART, 100, [\n        [Stat.POWER, 100],\n        [Stat.TOUGHNESS, 100],\n        [Stat.DROP_CHANCE, 50],\n        [Stat.RESPAWN, 4],\n        [Stat.BEARD_SPEED, 30],\n    ]),\n    new Item('Stealthy Hat', Slot.HEAD, SetName.STEALTH, 100, [\n        [Stat.POWER, 5000],\n        [Stat.TOUGHNESS, 112000],\n        [Stat.ENERGY_POWER, 1200],\n        [Stat.ENERGY_CAP, 175],\n        [Stat.MAGIC_CAP, 85],\n    ]),\n    new Item('Stealthy Chest', Slot.CHEST, SetName.STEALTH, 100, [\n        [Stat.POWER, 5000],\n        [Stat.TOUGHNESS, 115000],\n        [Stat.ENERGY_BARS, 1900],\n        [Stat.ENERGY_POWER, 900],\n        [Stat.MAGIC_POWER, 900],\n        [Stat.MAGIC_BARS, 800],\n    ]),\n    new Item('No Pants', Slot.PANTS, SetName.STEALTH, 100, [\n        [Stat.POWER, 5000],\n        [Stat.TOUGHNESS, 118000],\n        [Stat.ENERGY_POWER, 1750],\n        [Stat.MAGIC_BARS, 1000],\n        [Stat.MAGIC_POWER, 450],\n    ]),\n    new Item('High Heeled Boots', Slot.BOOTS, SetName.STEALTH, 100, [\n        [Stat.POWER, 5000],\n        [Stat.TOUGHNESS, 122000],\n        [Stat.MAGIC_POWER, 1400],\n        [Stat.ENERGY_CAP, 200],\n        [Stat.MAGIC_CAP, 60],\n    ]),\n    new Item('A Giant Bazooka', Slot.WEAPON, SetName.STEALTH, 100, [\n        [Stat.POWER, 1000000],\n        [Stat.TOUGHNESS, 60000],\n        [Stat.ENERGY_CAP, 120],\n        [Stat.MAGIC_CAP, 120],\n        [Stat.ENERGY_POWER, 1200],\n        [Stat.MAGIC_POWER, 1200],\n    ]),\n    new Item('The Stealthiest Armour', Slot.CHEST, SetName.STEALTH, 100, [\n        [Stat.POWER, 8000],\n        [Stat.TOUGHNESS, 150000],\n        [Stat.NGU_SPEED, 200],\n        [Stat.ENERGY_BARS, 2000],\n        [Stat.MAGIC_BARS, 2000],\n        [Stat.ENERGY_CAP, 210],\n        [Stat.MAGIC_CAP, 210],\n    ]),\n    new Item('Slimy Helmet', Slot.HEAD, SetName.SLIMY, 100, [\n        [Stat.POWER, 11000],\n        [Stat.TOUGHNESS, 242000],\n        [Stat.MAGIC_CAP, 150],\n        [Stat.MAGIC_BARS, 1000],\n        [Stat.ENERGY_POWER, 1400],\n        [Stat.MAGIC_POWER, 1400],\n    ]),\n    new Item('Slimy Chest', Slot.CHEST, SetName.SLIMY, 100, [\n        [Stat.POWER, 11000],\n        [Stat.TOUGHNESS, 250000],\n        [Stat.MAGIC_POWER, 1400],\n        [Stat.ENERGY_BARS, 1200],\n        [Stat.ENERGY_CAP, 150],\n        [Stat.MAGIC_CAP, 150],\n    ]),\n    new Item('Slimy Pants', Slot.PANTS, SetName.SLIMY, 100, [\n        [Stat.POWER, 10000],\n        [Stat.TOUGHNESS, 245000],\n        [Stat.ENERGY_POWER, 1800],\n        [Stat.ENERGY_CAP, 160],\n        [Stat.ENERGY_BARS, 1000],\n        [Stat.MAGIC_BARS, 1000],\n    ]),\n    new Item('Slimy Boots', Slot.BOOTS, SetName.SLIMY, 100, [\n        [Stat.POWER, 10000],\n        [Stat.TOUGHNESS, 240000],\n        [Stat.ENERGY_CAP, 140],\n        [Stat.MAGIC_CAP, 140],\n        [Stat.ENERGY_BARS, 1400],\n        [Stat.MAGIC_BARS, 1400],\n        [Stat.ENERGY_POWER, 1400],\n        [Stat.MAGIC_POWER, 1400],\n    ]),\n    new Item('The Fists of Flubber', Slot.WEAPON, SetName.SLIMY, 100, [\n        [Stat.POWER, 2200000],\n        [Stat.TOUGHNESS, 100000],\n        [Stat.MAGIC_CAP, 200],\n        [Stat.MAGIC_POWER, 2000],\n        [Stat.MAGIC_BARS, 1200],\n    ]),\n    new Item('A Bald Egg', Slot.ACCESSORY, SetName.SLIMY, 100, [\n        [Stat.POWER, 33333],\n        [Stat.TOUGHNESS, 33333],\n        [Stat.WANDOOS_SPEED, 200],\n        [Stat.ENERGY_CAP, 150],\n        [Stat.MAGIC_CAP, 150],\n    ]),\n    new Item('A Shrunken Voodoo Doll', Slot.ACCESSORY, SetName.SLIMY2, 100, [\n        [Stat.POWER, 66666],\n        [Stat.TOUGHNESS, 66666],\n        [Stat.BEARD_SPEED, 200],\n        [Stat.NGU_SPEED, 200],\n    ]),\n    new Item('A Priceless Van-Gogh Painting', Slot.ACCESSORY, SetName.SLIMY3, 100, [\n        [Stat.POWER, 30000],\n        [Stat.TOUGHNESS, 30000],\n        [Stat.GOLD_DROP, 3000],\n        [Stat.ENERGY_CAP, 200],\n        [Stat.MAGIC_CAP, 200],\n    ]),\n    new Item('A Giant Apple', Slot.ACCESSORY, SetName.SLIMY3, 100, [\n        [Stat.POWER, 50000],\n        [Stat.TOUGHNESS, 50000],\n        [Stat.SEED_DROP, 50],\n        [Stat.YGGDRASIL_YIELD, 10],\n    ]),\n    new Item('A Power Pill', Slot.ACCESSORY, SetName.SLIMY4, 100, [\n        [Stat.POWER, 250000],\n        [Stat.TOUGHNESS, 250000],\n        [Stat.ENERGY_POWER, 3000],\n        [Stat.MAGIC_POWER, 3000],\n        [Stat.ENERGY_BARS, 3000],\n        [Stat.MAGIC_BARS, 3000],\n        [Stat.ENERGY_CAP, 300],\n        [Stat.MAGIC_CAP, 300],\n    ]),\n    new Item('A Small Gerbil', Slot.ACCESSORY, SetName.SLIMY4, 100, [\n        [Stat.POWER, 100000],\n        [Stat.TOUGHNESS, 100000],\n        [Stat.MAGIC_CAP, 600],\n        [Stat.MAGIC_POWER, 6000],\n        [Stat.ENERGY_POWER, 6000],\n    ]),\n    new Item('My Blue Heart <3', Slot.ACCESSORY, SetName.HEART, 100, [\n        [Stat.POWER, 420],\n        [Stat.TOUGHNESS, 420],\n        [Stat.GOLD_DROP, 100],\n        [Stat.NGU_SPEED, 40],\n    ]),\n    new Item('My Purple Heart <3', Slot.ACCESSORY, SetName.HEART, 100, [\n        [Stat.POWER, 100],\n        [Stat.TOUGHNESS, 1000],\n        [Stat.DROP_CHANCE, 40],\n        [Stat.BEARD_SPEED, 40],\n    ]),\n    new Item('Edgy Helmet', Slot.HEAD, SetName.EDGY, 100, [\n        [Stat.POWER, 40000],\n        [Stat.TOUGHNESS, 502000],\n        [Stat.MAGIC_CAP, 330],\n        [Stat.MAGIC_BARS, 2600],\n        [Stat.ENERGY_POWER, 3600],\n        [Stat.MAGIC_POWER, 3600],\n    ]),\n    new Item('Edgy Chest', Slot.CHEST, SetName.EDGY, 100, [\n        [Stat.POWER, 30000],\n        [Stat.TOUGHNESS, 540000],\n        [Stat.MAGIC_BARS, 3700],\n        [Stat.ENERGY_CAP, 460],\n        [Stat.MAGIC_CAP, 460],\n        [Stat.ENERGY_POWER, 4100],\n        [Stat.MAGIC_POWER, 4100],\n    ]),\n    new Item('Edgy Pants', Slot.PANTS, SetName.EDGY, 100, [\n        [Stat.POWER, 30000],\n        [Stat.TOUGHNESS, 555000],\n        [Stat.ENERGY_BARS, 3300],\n        [Stat.ENERGY_CAP, 450],\n        [Stat.ENERGY_POWER, 5500],\n        [Stat.MAGIC_POWER, 5500],\n    ]),\n    new Item('Left Edgy Boot', Slot.BOOTS, SetName.EDGY, 100, [\n        [Stat.POWER, 20000],\n        [Stat.TOUGHNESS, 516000],\n        [Stat.ENERGY_CAP, 480],\n        [Stat.ENERGY_BARS, 4800],\n        [Stat.ENERGY_POWER, 4800],\n    ]),\n    new Item('Edgy Jaw Axe', Slot.WEAPON, SetName.EDGY, 100, [\n        [Stat.POWER, 5600000],\n        [Stat.TOUGHNESS, 300000],\n        [Stat.MAGIC_CAP, 420],\n        [Stat.ENERGY_POWER, 4400],\n        [Stat.MAGIC_BARS, 1700],\n    ]),\n    new Item('A Cheap Plastic Amulet', Slot.ACCESSORY, SetName.EDGY, 100, [\n        [Stat.POWER, 150000],\n        [Stat.TOUGHNESS, 150000],\n        [Stat.ENERGY_POWER, 4500],\n        [Stat.MAGIC_POWER, 4500],\n        [Stat.ENERGY_CAP, 360],\n        [Stat.MAGIC_CAP, 360],\n        [Stat.ENERGY_BARS, 3200],\n        [Stat.MAGIC_BARS, 3200],\n    ]),\n    new Item('Right Edgy Boot', Slot.BOOTS, SetName.EDGY, 100, [\n        [Stat.POWER, 30000],\n        [Stat.TOUGHNESS, 516000],\n        [Stat.MAGIC_CAP, 480],\n        [Stat.MAGIC_BARS, 4800],\n        [Stat.MAGIC_POWER, 4800],\n    ]),\n    new Item('BOTH Edgy Boots', Slot.BOOTS, SetName.EDGY, 100, [\n        [Stat.POWER, 60000],\n        [Stat.TOUGHNESS, 540000],\n        [Stat.ENERGY_CAP, 420],\n        [Stat.MAGIC_CAP, 420],\n        [Stat.ENERGY_BARS, 4200],\n        [Stat.MAGIC_BARS, 4200],\n        [Stat.ENERGY_POWER, 4200],\n        [Stat.MAGIC_POWER, 4200],\n    ]),\n    new Item('Chocolate Helmet', Slot.HEAD, SetName.CHOCO, 100, [\n        [Stat.POWER, 30000],\n        [Stat.TOUGHNESS, 352000],\n        [Stat.ENERGY_POWER, 2600],\n        [Stat.MAGIC_CAP, 190],\n        [Stat.MAGIC_BARS, 1400],\n    ]),\n    new Item('Chocolate Chest', Slot.CHEST, SetName.CHOCO, 100, [\n        [Stat.POWER, 20000],\n        [Stat.TOUGHNESS, 370000],\n        [Stat.MAGIC_BARS, 2500],\n        [Stat.ENERGY_CAP, 300],\n        [Stat.MAGIC_CAP, 300],\n        [Stat.ENERGY_POWER, 2900],\n        [Stat.MAGIC_POWER, 2900],\n    ]),\n    new Item('Chocolate Pants', Slot.PANTS, SetName.CHOCO, 100, [\n        [Stat.POWER, 20000],\n        [Stat.TOUGHNESS, 355000],\n        [Stat.ENERGY_BARS, 1700],\n        [Stat.ENERGY_CAP, 230],\n        [Stat.ENERGY_POWER, 2800],\n        [Stat.MAGIC_POWER, 2800],\n    ]),\n    new Item('Chocolate Boots', Slot.BOOTS, SetName.CHOCO, 100, [\n        [Stat.POWER, 20000],\n        [Stat.TOUGHNESS, 366000],\n        [Stat.ENERGY_CAP, 340],\n        [Stat.ENERGY_BARS, 3400],\n        [Stat.ENERGY_POWER, 3400],\n    ]),\n    new Item('Chocolate Crowbar', Slot.WEAPON, SetName.CHOCO, 100, [\n        [Stat.POWER, 3800000],\n        [Stat.TOUGHNESS, 200000],\n        [Stat.MAGIC_CAP, 290],\n        [Stat.ENERGY_POWER, 3000],\n        [Stat.ENERGY_BARS, 1800],\n        [Stat.MAGIC_BARS, 1800],\n    ]),\n    new Item('Energy Bar Bar', Slot.ACCESSORY, SetName.CHOCO, 100, [\n        [Stat.POWER, 50000],\n        [Stat.TOUGHNESS, 50000],\n        [Stat.ENERGY_POWER, 3000],\n        [Stat.ENERGY_CAP, 250],\n        [Stat.ENERGY_BARS, 2200],\n    ]),\n    new Item('Magic Bar Bar', Slot.ACCESSORY, SetName.CHOCO, 100, [\n        [Stat.POWER, 50000],\n        [Stat.TOUGHNESS, 50000],\n        [Stat.MAGIC_POWER, 3000],\n        [Stat.MAGIC_CAP, 250],\n        [Stat.MAGIC_BARS, 2200],\n    ]),\n    new Item('Ascended x5 Pendant', Slot.ACCESSORY, SetName.FOREST_PENDANT, 100, [\n        [Stat.POWER, 400000],\n        [Stat.TOUGHNESS, 400000],\n        [Stat.NGU_SPEED, 250],\n        [Stat.ENERGY_CAP, 500],\n        [Stat.MAGIC_CAP, 500],\n        [Stat.ENERGY_POWER, 5000],\n        [Stat.MAGIC_POWER, 5000],\n    ]),\n    new Item('Emperor Looty', Slot.ACCESSORY, SetName.LOOTY, 100, [\n        [Stat.POWER, 300000],\n        [Stat.TOUGHNESS, 300000],\n        [Stat.DROP_CHANCE, 300],\n        [Stat.ENERGY_POWER, 1500],\n        [Stat.MAGIC_POWER, 1500],\n        [Stat.ENERGY_CAP, 150],\n        [Stat.MAGIC_CAP, 150],\n    ]),\n    new Item('Clown Hat', Slot.HEAD, SetName.PINK, 100, [\n        [Stat.POWER, 60000],\n        [Stat.TOUGHNESS, 742000],\n        [Stat.MAGIC_POWER, 5500],\n        [Stat.ENERGY_CAP, 550],\n        [Stat.MAGIC_CAP, 550],\n        [Stat.ENERGY_BARS, 3500],\n        [Stat.MAGIC_BARS, 3500],\n    ]),\n    new Item('Fabulous Super Chest', Slot.CHEST, SetName.PINK, 100, [\n        [Stat.POWER, 60000],\n        [Stat.TOUGHNESS, 740000],\n        [Stat.MAGIC_BARS, 5300],\n        [Stat.ENERGY_CAP, 550],\n        [Stat.MAGIC_CAP, 550],\n        [Stat.ENERGY_POWER, 5400],\n        [Stat.MAGIC_POWER, 5400],\n    ]),\n    new Item('A Crappy Tutu', Slot.PANTS, SetName.PINK, 100, [\n        [Stat.POWER, 50000],\n        [Stat.TOUGHNESS, 755000],\n        [Stat.ENERGY_BARS, 5000],\n        [Stat.ENERGY_POWER, 7000],\n        [Stat.ENERGY_CAP, 600],\n        [Stat.MAGIC_CAP, 600],\n    ]),\n    new Item('Pretty Pink Slippers', Slot.BOOTS, SetName.PINK, 100, [\n        [Stat.POWER, 30000],\n        [Stat.TOUGHNESS, 730000],\n        [Stat.MAGIC_CAP, 630],\n        [Stat.MAGIC_BARS, 5000],\n        [Stat.ENERGY_POWER, 6500],\n        [Stat.MAGIC_POWER, 6500],\n    ]),\n    new Item('Giant Sticky Foot', Slot.WEAPON, SetName.PINK, 100, [\n        [Stat.POWER, 7600000],\n        [Stat.TOUGHNESS, 440000],\n        [Stat.ENERGY_CAP, 570],\n        [Stat.MAGIC_BARS, 3300],\n        [Stat.ENERGY_POWER, 6000],\n        [Stat.MAGIC_POWER, 6000],\n    ]),\n    new Item('A Pretty Pink Bow', Slot.ACCESSORY, SetName.PINK, 100, [\n        [Stat.POWER, 400000],\n        [Stat.TOUGHNESS, 400000],\n        [Stat.DAYCARE_SPEED, 10],\n        [Stat.NGU_SPEED, 170],\n        [Stat.QUEST_DROP, 5],\n    ]),\n    new Item('A Worn Out Fedora', Slot.HEAD, SetName.NERD, 100, [\n        [Stat.POWER, 80000],\n        [Stat.TOUGHNESS, 1100000],\n        [Stat.MAGIC_CAP, 900],\n        [Stat.ENERGY_BARS, 7000],\n        [Stat.ENERGY_POWER, 5800],\n        [Stat.MAGIC_POWER, 5800],\n    ]),\n    new Item('Sweat-Stained NGU Shirt', Slot.CHEST, SetName.NERD, 100, [\n        [Stat.POWER, 80000],\n        [Stat.TOUGHNESS, 1120000],\n        [Stat.ENERGY_POWER, 10000],\n        [Stat.MAGIC_BARS, 6100],\n        [Stat.ENERGY_CAP, 700],\n        [Stat.MAGIC_CAP, 700],\n    ]),\n    new Item('Not Sweat-Stained Underpants', Slot.PANTS, SetName.NERD, 100, [\n        [Stat.POWER, 50000],\n        [Stat.TOUGHNESS, 1200000],\n        [Stat.MAGIC_BARS, 6200],\n        [Stat.ENERGY_CAP, 900],\n        [Stat.ENERGY_POWER, 6100],\n        [Stat.MAGIC_POWER, 6100],\n    ]),\n    new Item('Nerdy Shoes', Slot.BOOTS, SetName.NERD, 100, [\n        [Stat.POWER, 80000],\n        [Stat.TOUGHNESS, 1200000],\n        [Stat.MAGIC_POWER, 8000],\n        [Stat.ENERGY_CAP, 800],\n        [Stat.MAGIC_CAP, 800],\n        [Stat.ENERGY_BARS, 6300],\n        [Stat.MAGIC_BARS, 6300],\n    ]),\n    new Item('Superior Japanese Katana', Slot.WEAPON, SetName.NERD, 100, [\n        [Stat.POWER, 11000000],\n        [Stat.TOUGHNESS, 600000],\n        [Stat.MAGIC_BARS, 6100],\n        [Stat.ENERGY_CAP, 670],\n        [Stat.MAGIC_CAP, 670],\n        [Stat.ENERGY_POWER, 6500],\n        [Stat.MAGIC_POWER, 6500],\n    ]),\n    new Item('An Ordinary Calculator', Slot.ACCESSORY, SetName.NERD, 100, [\n        [Stat.POWER, 250000],\n        [Stat.TOUGHNESS, 250000],\n        [Stat.NGU_SPEED, 300],\n        [Stat.RES3_POWER, 5],\n        [Stat.ENERGY_BARS, 6000],\n        [Stat.MAGIC_BARS, 6000],\n    ]),\n    new Item('Anime Figurine', Slot.ACCESSORY, SetName.NERD, 100, [\n        [Stat.POWER, 250000],\n        [Stat.TOUGHNESS, 250000],\n        [Stat.MAGIC_CAP, 500],\n        [Stat.ENERGY_BARS, 6000],\n        [Stat.ENERGY_POWER, 8000],\n        [Stat.MAGIC_POWER, 8000],\n    ]),\n    new Item('The D20', Slot.ACCESSORY, SetName.NERD2, 100, [\n        [Stat.POWER, 250000],\n        [Stat.TOUGHNESS, 250000],\n        [Stat.ENERGY_POWER, 9000],\n        [Stat.ENERGY_CAP, 800],\n        [Stat.ENERGY_BARS, 9000],\n    ]),\n    new Item('The D8', Slot.ACCESSORY, SetName.NERD2, 100, [\n        [Stat.POWER, 300000],\n        [Stat.TOUGHNESS, 250000],\n        [Stat.MAGIC_POWER, 9000],\n        [Stat.MAGIC_CAP, 800],\n        [Stat.MAGIC_BARS, 9000],\n    ]),\n    new Item('Anime Bodypillow', Slot.ACCESSORY, SetName.NERD3, 100, [\n        [Stat.POWER, 500000],\n        [Stat.TOUGHNESS, 500000],\n        [Stat.RES3_POWER, 10],\n        [Stat.NGU_SPEED, 150],\n        [Stat.RESPAWN, 2],\n    ]),\n    new Item('Red Meeple Thingy', Slot.ACCESSORY, SetName.NERD3, 100, [\n        [Stat.POWER, 500000],\n        [Stat.TOUGHNESS, 500000],\n        [Stat.MAGIC_POWER, 12000],\n        [Stat.RES3_POWER, 10],\n        [Stat.AUGMENT_SPEED, 250],\n    ]),\n    new Item('A Bag of Trash', Slot.ACCESSORY, SetName.NERD4, 100, [\n        [Stat.POWER, 500000],\n        [Stat.TOUGHNESS, 500000],\n        [Stat.RES3_BARS, 5],\n        [Stat.DAYCARE_SPEED, 10],\n        [Stat.ENERGY_CAP, 1000],\n        [Stat.MAGIC_CAP, 1000],\n    ]),\n    new Item('Heart Shaped Panties', Slot.ACCESSORY, SetName.NERD4, 100, [\n        [Stat.POWER, 666666],\n        [Stat.TOUGHNESS, 666666],\n        [Stat.RES3_POWER, 6.666666],\n        [Stat.NGU_SPEED, 333.3333],\n        [Stat.ENERGY_CAP, 666.6666],\n        [Stat.MAGIC_CAP, 666.6666],\n    ]),\n    new Item('Numerical Head', Slot.HEAD, SetName.META, 100, [\n        [Stat.POWER, 150000],\n        [Stat.TOUGHNESS, 2200000],\n        [Stat.ENERGY_CAP, 1500],\n        [Stat.MAGIC_BARS, 9000],\n        [Stat.ENERGY_POWER, 8300],\n        [Stat.MAGIC_POWER, 8300],\n    ]),\n    new Item('Numerical Chest', Slot.CHEST, SetName.META, 100, [\n        [Stat.POWER, 150000],\n        [Stat.TOUGHNESS, 2200000],\n        [Stat.MAGIC_CAP, 1100],\n        [Stat.MAGIC_POWER, 12000],\n        [Stat.ENERGY_BARS, 5000],\n        [Stat.MAGIC_BARS, 5000],\n    ]),\n    new Item('Numerical Legs', Slot.PANTS, SetName.META, 100, [\n        [Stat.POWER, 150000],\n        [Stat.TOUGHNESS, 2200000],\n        [Stat.ENERGY_BARS, 8500],\n        [Stat.RES3_POWER, 11],\n        [Stat.ENERGY_CAP, 900],\n        [Stat.MAGIC_CAP, 900],\n    ]),\n    new Item('Numerical Boots', Slot.BOOTS, SetName.META, 100, [\n        [Stat.POWER, 150000],\n        [Stat.TOUGHNESS, 2200000],\n        [Stat.ENERGY_CAP, 1100],\n        [Stat.MAGIC_BARS, 9000],\n        [Stat.ENERGY_POWER, 10000],\n        [Stat.MAGIC_POWER, 10000],\n    ]),\n    new Item('The Number 7', Slot.WEAPON, SetName.META, 100, [\n        [Stat.POWER, 25000000],\n        [Stat.TOUGHNESS, 1200000],\n        [Stat.MAGIC_POWER, 9000],\n        [Stat.MAGIC_CAP, 1000],\n        [Stat.RES3_BARS, 10],\n    ]),\n    new Item('Infinity Charm', Slot.ACCESSORY, SetName.META, 100, [\n        [Stat.POWER, 888888],\n        [Stat.TOUGHNESS, 888888],\n        [Stat.MOVE_COOLDOWN, 5],\n        [Stat.SEED_DROP, 40],\n        [Stat.ENERGY_CAP, 888.8888],\n        [Stat.MAGIC_CAP, 888.8888],\n    ]),\n    new Item('69 Charm', Slot.ACCESSORY, SetName.META, 100, [\n        [Stat.POWER, 696969],\n        [Stat.TOUGHNESS, 696969],\n        [Stat.QUEST_DROP, 8],\n        [Stat.WANDOOS_SPEED, 400],\n        [Stat.RES3_CAP, 1],\n    ]),\n    new Item('Party Hat', Slot.HEAD, SetName.PARTY, 100, [\n        [Stat.POWER, 250000],\n        [Stat.TOUGHNESS, 4500000],\n        [Stat.MAGIC_CAP, 1500],\n        [Stat.MAGIC_POWER, 16000],\n        [Stat.ENERGY_BARS, 8000],\n        [Stat.MAGIC_BARS, 8000],\n    ]),\n    new Item('Pogmail Chest', Slot.CHEST, SetName.PARTY, 100, [\n        [Stat.POWER, 250000],\n        [Stat.TOUGHNESS, 4500000],\n        [Stat.ENERGY_CAP, 1600],\n        [Stat.MAGIC_BARS, 10000],\n        [Stat.ENERGY_POWER, 13000],\n        [Stat.MAGIC_POWER, 13000],\n    ]),\n    new Item('Tear Away Pants', Slot.PANTS, SetName.PARTY, 100, [\n        [Stat.POWER, 250000],\n        [Stat.TOUGHNESS, 4500000],\n        [Stat.MAGIC_BARS, 12000],\n        [Stat.MAGIC_CAP, 1200],\n        [Stat.ENERGY_POWER, 12000],\n        [Stat.MAGIC_POWER, 12000],\n    ]),\n    new Item('Pizza Boots', Slot.BOOTS, SetName.PARTY, 100, [\n        [Stat.POWER, 250000],\n        [Stat.TOUGHNESS, 4500000],\n        [Stat.ENERGY_BARS, 10000],\n        [Stat.ENERGY_POWER, 10000],\n        [Stat.ENERGY_CAP, 1200],\n        [Stat.MAGIC_CAP, 1200],\n    ]),\n    new Item('The God of Thunder\\'s Hammer', Slot.WEAPON, SetName.PARTY, 100, [\n        [Stat.POWER, 50000000],\n        [Stat.TOUGHNESS, 2000000],\n        [Stat.ENERGY_CAP, 1300],\n        [Stat.ENERGY_BARS, 10000],\n        [Stat.ENERGY_POWER, 11000],\n        [Stat.MAGIC_POWER, 11000],\n    ]),\n    new Item('Plastic Red Cup', Slot.ACCESSORY, SetName.PARTY, 100, [\n        [Stat.POWER, 1500000],\n        [Stat.TOUGHNESS, 1000000],\n        [Stat.GOLD_DROP, 8000],\n        [Stat.ENERGY_CAP, 1200],\n        [Stat.MAGIC_CAP, 1200],\n        [Stat.ENERGY_BARS, 12000],\n        [Stat.MAGIC_BARS, 12000],\n    ]),\n    new Item('Party Whistle', Slot.ACCESSORY, SetName.PARTY, 100, [\n        [Stat.POWER, 2000000],\n        [Stat.TOUGHNESS, 2000000],\n        [Stat.NGU_SPEED, 200],\n        [Stat.YGGDRASIL_YIELD, 5],\n        [Stat.ENERGY_POWER, 10000],\n        [Stat.MAGIC_POWER, 10000],\n    ]),\n    new Item('Mobster Hat', Slot.HEAD, SetName.MOBSTER, 100, [\n        [Stat.POWER, 400000],\n        [Stat.TOUGHNESS, 10000000],\n        [Stat.ENERGY_POWER, 17000],\n        [Stat.RES3_CAP, 1.4],\n        [Stat.ENERGY_CAP, 1600],\n        [Stat.MAGIC_CAP, 1600],\n    ]),\n    new Item('Mobster Vest', Slot.CHEST, SetName.MOBSTER, 100, [\n        [Stat.POWER, 400000],\n        [Stat.TOUGHNESS, 10000000],\n        [Stat.MAGIC_POWER, 18000],\n        [Stat.RES3_CAP, 1.6],\n        [Stat.ENERGY_CAP, 1600],\n        [Stat.MAGIC_CAP, 1600],\n    ]),\n    new Item('Mobster Pants', Slot.PANTS, SetName.MOBSTER, 100, [\n        [Stat.POWER, 400000],\n        [Stat.TOUGHNESS, 10000000],\n        [Stat.ENERGY_CAP, 1400],\n        [Stat.ENERGY_BARS, 17000],\n        [Stat.MAGIC_BARS, 17000],\n        [Stat.ENERGY_POWER, 13000],\n        [Stat.MAGIC_POWER, 13000],\n    ]),\n    new Item('Cement Boots', Slot.BOOTS, SetName.MOBSTER, 100, [\n        [Stat.POWER, 400000],\n        [Stat.TOUGHNESS, 10000000],\n        [Stat.ENERGY_CAP, 1300],\n        [Stat.RES3_BARS, 14],\n        [Stat.ENERGY_POWER, 14000],\n        [Stat.MAGIC_POWER, 14000],\n    ]),\n    new Item('Tommy Gun', Slot.WEAPON, SetName.MOBSTER, 100, [\n        [Stat.POWER, 100000000],\n        [Stat.TOUGHNESS, 4000000],\n        [Stat.MAGIC_CAP, 1800],\n        [Stat.ENERGY_POWER, 13000],\n        [Stat.MAGIC_POWER, 13000],\n        [Stat.ENERGY_BARS, 14000],\n        [Stat.MAGIC_BARS, 14000],\n    ]),\n    new Item('A Garrote', Slot.ACCESSORY, SetName.MOBSTER, 100, [\n        [Stat.POWER, 4000000],\n        [Stat.TOUGHNESS, 4000000],\n        [Stat.DAYCARE_SPEED, 10],\n        [Stat.DROP_CHANCE, 300],\n        [Stat.ENERGY_POWER, 14000],\n        [Stat.MAGIC_POWER, 14000],\n    ]),\n    new Item('Brass Knuckles', Slot.ACCESSORY, SetName.MOBSTER, 100, [\n        [Stat.POWER, 3500000],\n        [Stat.TOUGHNESS, 3500000],\n        [Stat.RES3_POWER, 12],\n        [Stat.GOLD_DROP, 12000],\n        [Stat.ENERGY_CAP, 900],\n        [Stat.MAGIC_CAP, 900],\n    ]),\n    new Item('Violin Case', Slot.ACCESSORY, SetName.MOBSTER2, 100, [\n        [Stat.POWER, 7000000],\n        [Stat.TOUGHNESS, 7000000],\n        [Stat.RES3_POWER, 13],\n        [Stat.ENERGY_CAP, 1300],\n        [Stat.MAGIC_CAP, 1300],\n        [Stat.ENERGY_BARS, 13000],\n        [Stat.MAGIC_BARS, 13000],\n    ]),\n    new Item('Molotov Cocktail', Slot.ACCESSORY, SetName.MOBSTER2, 100, [\n        [Stat.POWER, 10000000],\n        [Stat.TOUGHNESS, 10000000],\n        [Stat.NGU_SPEED, 200],\n        [Stat.SEED_DROP, 50],\n        [Stat.WANDOOS_SPEED, 800],\n    ]),\n    new Item('The Godmother\\'s Ring', Slot.ACCESSORY, SetName.MOBSTER3, 100, [\n        [Stat.POWER, 15000000],\n        [Stat.TOUGHNESS, 15000000],\n        [Stat.GOLD_DROP, 30000],\n        [Stat.DROP_CHANCE, 700],\n        [Stat.RES3_CAP, 5.5],\n    ]),\n    new Item('The Godmother\\'s Wand', Slot.ACCESSORY, SetName.MOBSTER3, 100, [\n        [Stat.POWER, 22000000],\n        [Stat.TOUGHNESS, 22000000],\n        [Stat.YGGDRASIL_YIELD, 7.5],\n        [Stat.ENERGY_POWER, 60000],\n        [Stat.MAGIC_POWER, 60000],\n        [Stat.ENERGY_CAP, 6000],\n        [Stat.MAGIC_CAP, 6000],\n    ]),\n    new Item('Left Fairy Wing', Slot.ACCESSORY, SetName.MOBSTER4, 100, [\n        [Stat.POWER, 60000000],\n        [Stat.TOUGHNESS, 60000000],\n        [Stat.RES3_CAP, 8],\n        [Stat.RES3_POWER, 80],\n        [Stat.ENERGY_CAP, 8000],\n    ]),\n    new Item('Right Fairy Wing', Slot.ACCESSORY, SetName.MOBSTER4, 100, [\n        [Stat.MAGIC_CAP, 9000],\n        [Stat.ENERGY_BARS, 90000],\n        [Stat.MAGIC_BARS, 90000],\n        [Stat.ENERGY_POWER, 90000],\n        [Stat.MAGIC_POWER, 90000],\n    ]),\n    new Item('My Orange Heart <3', Slot.ACCESSORY, SetName.HEART, 100, [\n        [Stat.POWER, 100],\n        [Stat.TOUGHNESS, 1000],\n        [Stat.QUEST_DROP, 5],\n        [Stat.GOLD_DROP, 300],\n    ]),\n    new Item('Ascended x6 Pendant', Slot.ACCESSORY, SetName.FOREST_PENDANT, 100, [\n        [Stat.POWER, 20000000],\n        [Stat.TOUGHNESS, 20000000],\n        [Stat.RES3_CAP, 50],\n        [Stat.RES3_POWER, 100],\n        [Stat.RES3_BARS, 100],\n    ]),\n    new Item('GALACTIC HERALD LOOTY', Slot.ACCESSORY, SetName.LOOTY, 100, [\n        [Stat.POWER, 30000000],\n        [Stat.TOUGHNESS, 30000000],\n        [Stat.DROP_CHANCE, 600],\n        [Stat.RES3_CAP, 20],\n        [Stat.ENERGY_POWER, 25000],\n        [Stat.MAGIC_POWER, 25000],\n    ]),\n    new Item('My Grey Heart <3', Slot.ACCESSORY, SetName.HEART, 100, [\n        [Stat.POWER, 1000000],\n        [Stat.TOUGHNESS, 1000000],\n        [Stat.RES3_CAP, 20],\n        [Stat.RES3_BARS, 20],\n    ]),\n    new Item('Hamlet', Slot.HEAD, SetName.TYPO, 100, [\n        [Stat.POWER, 600000],\n        [Stat.TOUGHNESS, 15000000],\n        [Stat.RES3_POWER, 28],\n        [Stat.RES3_BARS, 30],\n        [Stat.ENERGY_BARS, 31000],\n        [Stat.MAGIC_BARS, 31000],\n    ]),\n    new Item('Chess Plate', Slot.CHEST, SetName.TYPO, 100, [\n        [Stat.POWER, 600000],\n        [Stat.TOUGHNESS, 16000000],\n        [Stat.RES3_CAP, 2.7],\n        [Stat.RES3_BARS, 40],\n        [Stat.ENERGY_POWER, 29000],\n        [Stat.MAGIC_POWER, 29000],\n    ]),\n    new Item('Logs', Slot.PANTS, SetName.TYPO, 100, [\n        [Stat.POWER, 600000],\n        [Stat.TOUGHNESS, 15500000],\n        [Stat.RES3_CAP, 3.2],\n        [Stat.RES3_POWER, 28],\n        [Stat.ENERGY_CAP, 3500],\n        [Stat.MAGIC_CAP, 3500],\n    ]),\n    new Item('Booms', Slot.BOOTS, SetName.TYPO, 100, [\n        [Stat.POWER, 600000],\n        [Stat.TOUGHNESS, 15000000],\n        [Stat.RES3_POWER, 30],\n        [Stat.RES3_CAP, 3.1],\n        [Stat.ENERGY_POWER, 35000],\n        [Stat.MAGIC_POWER, 35000],\n    ]),\n    new Item('Wee pin', Slot.WEAPON, SetName.TYPO, 100, [\n        [Stat.POWER, 160000000],\n        [Stat.TOUGHNESS, 6000000],\n        [Stat.RES3_CAP, 3.5],\n        [Stat.ENERGY_POWER, 25000],\n        [Stat.MAGIC_POWER, 25000],\n        [Stat.ENERGY_BARS, 34000],\n        [Stat.MAGIC_BARS, 34000],\n    ]),\n    new Item('The Ass-cessory', Slot.ACCESSORY, SetName.TYPO, 100, [\n        [Stat.POWER, 12000000],\n        [Stat.TOUGHNESS, 12000000],\n        [Stat.YGGDRASIL_YIELD, 5],\n        [Stat.ENERGY_CAP, 3300],\n        [Stat.MAGIC_CAP, 3300],\n        [Stat.ENERGY_POWER, 33000],\n        [Stat.MAGIC_POWER, 33000],\n    ]),\n    new Item('Eye of ELXU', Slot.ACCESSORY, SetName.TYPO, 100, [\n        [Stat.POWER, 6666666],\n        [Stat.TOUGHNESS, 6666666],\n        [Stat.RES3_CAP, 3.2],\n        [Stat.RES3_POWER, 35],\n        [Stat.RES3_BARS, 29],\n    ]),\n    new Item('Spinning Tophat', Slot.HEAD, SetName.FAD, 100, [\n        [Stat.POWER, 900000],\n        [Stat.TOUGHNESS, 22000000],\n        [Stat.RES3_POWER, 62],\n        [Stat.RES3_BARS, 52],\n        [Stat.ENERGY_POWER, 61000],\n        [Stat.MAGIC_POWER, 61000],\n    ]),\n    new Item('Demonic Flurbie Chestplate', Slot.CHEST, SetName.FAD, 100, [\n        [Stat.POWER, 900000],\n        [Stat.TOUGHNESS, 24000000],\n        [Stat.RES3_CAP, 7],\n        [Stat.ENERGY_CAP, 6600],\n        [Stat.MAGIC_CAP, 6600],\n        [Stat.ENERGY_BARS, 40000],\n        [Stat.MAGIC_BARS, 40000],\n    ]),\n    new Item('AAA Battery Legs', Slot.PANTS, SetName.FAD, 100, [\n        [Stat.POWER, 900000],\n        [Stat.TOUGHNESS, 23000000],\n        [Stat.RES3_POWER, 62],\n        [Stat.RES3_CAP, 6.3],\n        [Stat.ENERGY_POWER, 57000],\n        [Stat.MAGIC_POWER, 57000],\n    ]),\n    new Item('Slinky Boots', Slot.BOOTS, SetName.FAD, 100, [\n        [Stat.POWER, 900000],\n        [Stat.TOUGHNESS, 21000000],\n        [Stat.RES3_BARS, 62],\n        [Stat.RES3_POWER, 69],\n        [Stat.ENERGY_BARS, 50000],\n        [Stat.MAGIC_BARS, 50000],\n    ]),\n    new Item('THE MALF SLAMMER', Slot.WEAPON, SetName.FAD, 100, [\n        [Stat.POWER, 250000000],\n        [Stat.TOUGHNESS, 10000000],\n        [Stat.RES3_POWER, 64],\n        [Stat.RES3_CAP, 7],\n        [Stat.ENERGY_POWER, 62000],\n        [Stat.MAGIC_POWER, 62000],\n    ]),\n    new Item('Rare Foil Pokeyman Card', Slot.ACCESSORY, SetName.FAD, 100, [\n        [Stat.POWER, 19000000],\n        [Stat.TOUGHNESS, 19000000],\n        [Stat.DROP_CHANCE, 400],\n        [Stat.GOLD_DROP, 50000],\n        [Stat.RES3_CAP, 12],\n    ]),\n    new Item('A handful of Krazy Bonez', Slot.ACCESSORY, SetName.FAD, 100, [\n        [Stat.POWER, 20000000],\n        [Stat.TOUGHNESS, 20000000],\n        [Stat.QUEST_DROP, 7],\n        [Stat.RES3_CAP, 7],\n        [Stat.RES3_POWER, 60],\n    ]),\n    new Item('Buster Sword Top', Slot.HEAD, SetName.JRPG, 100, [\n        [Stat.POWER, 1400000],\n        [Stat.TOUGHNESS, 38000000],\n        [Stat.RES3_CAP, 8.3],\n        [Stat.RES3_POWER, 90],\n        [Stat.ENERGY_POWER, 85000],\n        [Stat.MAGIC_POWER, 85000],\n    ]),\n    new Item('Buster Sword Upper', Slot.CHEST, SetName.JRPG, 100, [\n        [Stat.POWER, 1500000],\n        [Stat.TOUGHNESS, 37000000],\n        [Stat.RES3_CAP, 9.2],\n        [Stat.RES3_POWER, 88],\n        [Stat.RES3_BARS, 90],\n    ]),\n    new Item('Buster Sword Lower', Slot.PANTS, SetName.JRPG, 100, [\n        [Stat.POWER, 1500000],\n        [Stat.TOUGHNESS, 39000000],\n        [Stat.RES3_CAP, 8.9],\n        [Stat.RES3_POWER, 94],\n        [Stat.ENERGY_BARS, 87000],\n        [Stat.MAGIC_BARS, 87000],\n    ]),\n    new Item('Buster Sword Bottom', Slot.BOOTS, SetName.JRPG, 100, [\n        [Stat.POWER, 1500000],\n        [Stat.TOUGHNESS, 38000000],\n        [Stat.RES3_POWER, 91],\n        [Stat.ENERGY_POWER, 89000],\n        [Stat.MAGIC_POWER, 89000],\n        [Stat.ENERGY_CAP, 9400],\n        [Stat.MAGIC_CAP, 9400],\n    ]),\n    new Item('Gift Shop Buster Sword Replica', Slot.WEAPON, SetName.JRPG, 100, [\n        [Stat.POWER, 400000000],\n        [Stat.TOUGHNESS, 16000000],\n        [Stat.RES3_BARS, 91],\n        [Stat.RES3_POWER, 100],\n        [Stat.ENERGY_BARS, 87000],\n        [Stat.MAGIC_BARS, 87000],\n    ]),\n    new Item('A Gigantic Zipper', Slot.ACCESSORY, SetName.JRPG, 100, [\n        [Stat.POWER, 21000000],\n        [Stat.TOUGHNESS, 23000000],\n        [Stat.RES3_BARS, 97],\n        [Stat.RES3_POWER, 100],\n        [Stat.ENERGY_POWER, 88000],\n        [Stat.MAGIC_POWER, 88000],\n    ]),\n    new Item('Anime Hero Wig', Slot.ACCESSORY, SetName.JRPG, 100, [\n        [Stat.POWER, 30000000],\n        [Stat.TOUGHNESS, 30000000],\n        [Stat.RES3_CAP, 8.8],\n        [Stat.YGGDRASIL_YIELD, 4],\n        [Stat.ENERGY_POWER, 96000],\n        [Stat.MAGIC_POWER, 96000],\n    ]),\n    new Item('Hat of Greed', Slot.HEAD, SetName.EXILE, 100, [\n        [Stat.POWER, 2200000],\n        [Stat.TOUGHNESS, 57000000],\n        [Stat.RES3_CAP, 12],\n        [Stat.RES3_POWER, 112],\n        [Stat.GOLD_DROP, 100000],\n    ]),\n    new Item('Blue Eyes White Chestplate', Slot.CHEST, SetName.EXILE, 100, [\n        [Stat.POWER, 2300000],\n        [Stat.TOUGHNESS, 60000000],\n        [Stat.RES3_POWER, 118],\n        [Stat.ENERGY_CAP, 11600],\n        [Stat.MAGIC_CAP, 11600],\n        [Stat.ENERGY_BARS, 103000],\n        [Stat.MAGIC_BARS, 103000],\n    ]),\n    new Item('Trap Pants', Slot.PANTS, SetName.EXILE, 100, [\n        [Stat.POWER, 2200000],\n        [Stat.TOUGHNESS, 59000000],\n        [Stat.RES3_BARS, 110],\n        [Stat.RES3_CAP, 13],\n        [Stat.ENERGY_POWER, 120000],\n        [Stat.MAGIC_POWER, 120000],\n    ]),\n    new Item('All the other Titans\\' Missing Shoes', Slot.BOOTS, SetName.EXILE, 100, [\n        [Stat.POWER, 2200000],\n        [Stat.TOUGHNESS, 58000000],\n        [Stat.RES3_POWER, 113],\n        [Stat.ENERGY_CAP, 11600],\n        [Stat.MAGIC_CAP, 11600],\n        [Stat.ENERGY_POWER, 118000],\n        [Stat.MAGIC_POWER, 118000],\n    ]),\n    new Item('The Disk of Dueling', Slot.WEAPON, SetName.EXILE, 100, [\n        [Stat.POWER, 620000000],\n        [Stat.TOUGHNESS, 25000000],\n        [Stat.RES3_POWER, 118],\n        [Stat.RES3_CAP, 13],\n        [Stat.ENERGY_BARS, 100000],\n        [Stat.MAGIC_BARS, 100000],\n    ]),\n    new Item('The Joker', Slot.ACCESSORY, SetName.EXILE, 100, [\n        [Stat.POWER, 66600000],\n        [Stat.TOUGHNESS, 66600000],\n        [Stat.COOKING, 10000000],\n        [Stat.WISH_SPEED, 5],\n        [Stat.RES3_CAP, 40],\n    ]),\n    new Item('Antlers of the Exile', Slot.ACCESSORY, SetName.EXILE, 100, [\n        [Stat.POWER, 80000000],\n        [Stat.RES3_POWER, 120],\n        [Stat.ENERGY_POWER, 100000],\n        [Stat.MAGIC_POWER, 100000],\n        [Stat.ENERGY_CAP, 12000],\n        [Stat.MAGIC_CAP, 12000],\n    ]),\n    new Item('The Credit Card', Slot.ACCESSORY, SetName.EXILE2, 100, [\n        [Stat.QUEST_DROP, 5],\n        [Stat.GOLD_DROP, 250000],\n        [Stat.ENERGY_BARS, 170000],\n        [Stat.MAGIC_BARS, 170000],\n    ]),\n    new Item('Tentacle of the Exile', Slot.ACCESSORY, SetName.EXILE2, 100, [\n        [Stat.POWER, 110000000],\n        [Stat.TOUGHNESS, 100000000],\n        [Stat.RES3_BARS, 180],\n        [Stat.RES3_CAP, 18],\n        [Stat.ENERGY_POWER, 190000],\n        [Stat.MAGIC_POWER, 190000],\n    ]),\n    new Item('The Skip Card', Slot.ACCESSORY, SetName.EXILE3, 100, [\n        [Stat.POWER, 120000000],\n        [Stat.TOUGHNESS, 120000000],\n        [Stat.NGU_SPEED, 250],\n        [Stat.RES3_POWER, 260],\n        [Stat.ENERGY_POWER, 280000],\n        [Stat.MAGIC_POWER, 280000],\n    ]),\n    new Item('Antennae of the Exile', Slot.ACCESSORY, SetName.EXILE3, 100, [\n        [Stat.POWER, 100000000],\n        [Stat.TOUGHNESS, 100000000],\n        [Stat.RES3_POWER, 270],\n        [Stat.HACK_SPEED, 12],\n        [Stat.ENERGY_CAP, 26000],\n        [Stat.MAGIC_CAP, 26000],\n    ]),\n    new Item('The Black Lotus', Slot.ACCESSORY, SetName.EXILE4, 100, [\n        [Stat.POWER, 150000000],\n        [Stat.TOUGHNESS, 150000000],\n        [Stat.RES3_CAP, 45],\n        [Stat.WISH_SPEED, 20],\n        [Stat.ENERGY_CAP, 40000],\n        [Stat.MAGIC_CAP, 40000],\n    ]),\n    new Item('Buster of the Exile', Slot.ACCESSORY, SetName.EXILE4, 100, [\n        [Stat.POWER, 250000000],\n        [Stat.TOUGHNESS, 250000000],\n        [Stat.RES3_POWER, 400],\n        [Stat.HACK_SPEED, 20],\n        [Stat.ENERGY_POWER, 400000],\n        [Stat.MAGIC_POWER, 400000],\n    ]),\n    new Item('Seal of the Exile', Slot.WEAPON, SetName.MISC, 100, [\n    ]),\n    new Item('Blue Eyes Ultimate Chestplate', Slot.CHEST, SetName.EXILE, 100, [\n        [Stat.POWER, 5500000],\n        [Stat.TOUGHNESS, 160000000],\n        [Stat.RES3_CAP, 120],\n        [Stat.WISH_SPEED, 25],\n        [Stat.HACK_SPEED, 20],\n    ]),\n    new Item('My Pink Heart <3', Slot.ACCESSORY, SetName.HEART, 100, [\n        [Stat.POWER, 3000000],\n        [Stat.TOUGHNESS, 3000000],\n        [Stat.WISH_SPEED, 10],\n        [Stat.DAYCARE_SPEED, 10],\n    ]),\n    new Item('Cool Shades', Slot.HEAD, SetName.RADLANDS, 100, [\n        [Stat.POWER, 3300000],\n        [Stat.TOUGHNESS, 87000000],\n        [Stat.RES3_CAP, 14.7],\n        [Stat.ENERGY_CAP, 14500],\n        [Stat.MAGIC_CAP, 14500],\n        [Stat.ENERGY_POWER, 144000],\n        [Stat.MAGIC_POWER, 144000],\n    ]),\n    new Item('Leather Jacket', Slot.CHEST, SetName.RADLANDS, 100, [\n        [Stat.POWER, 3400000],\n        [Stat.TOUGHNESS, 86000000],\n        [Stat.RES3_BARS, 147],\n        [Stat.RES3_POWER, 148],\n        [Stat.ENERGY_CAP, 14500],\n        [Stat.MAGIC_CAP, 14500],\n    ]),\n    new Item('Flamin\\' Hot Shorts', Slot.PANTS, SetName.RADLANDS, 100, [\n        [Stat.POWER, 3500000],\n        [Stat.TOUGHNESS, 86000000],\n        [Stat.RES3_CAP, 14.5],\n        [Stat.ENERGY_POWER, 144000],\n        [Stat.MAGIC_POWER, 144000],\n        [Stat.ENERGY_BARS, 145000],\n        [Stat.MAGIC_BARS, 145000],\n    ]),\n    new Item('A Skateboard', Slot.BOOTS, SetName.RADLANDS, 100, [\n        [Stat.POWER, 3400000],\n        [Stat.TOUGHNESS, 86000000],\n        [Stat.RES3_POWER, 144],\n        [Stat.RES3_CAP, 14.8],\n        [Stat.ENERGY_CAP, 15000],\n        [Stat.MAGIC_CAP, 15000],\n    ]),\n    new Item('Nunchuks', Slot.WEAPON, SetName.RADLANDS, 100, [\n        [Stat.POWER, 880000000],\n        [Stat.TOUGHNESS, 35000000],\n        [Stat.ENERGY_POWER, 147000],\n        [Stat.MAGIC_POWER, 147000],\n        [Stat.ENERGY_CAP, 14700],\n        [Stat.MAGIC_CAP, 14700],\n        [Stat.ENERGY_BARS, 147000],\n        [Stat.MAGIC_BARS, 147000],\n    ]),\n    new Item('Not Drugs', Slot.ACCESSORY, SetName.RADLANDS, 100, [\n        [Stat.POWER, 90000000],\n        [Stat.TOUGHNESS, 90000000],\n        [Stat.HACK_SPEED, 14.7],\n        [Stat.GOLD_DROP, 148000],\n        [Stat.ENERGY_CAP, 14600],\n        [Stat.MAGIC_CAP, 14600],\n    ]),\n    new Item('The Glove of Power', Slot.ACCESSORY, SetName.RADLANDS, 100, [\n        [Stat.POWER, 130000000],\n        [Stat.TOUGHNESS, 80000000],\n        [Stat.RES3_POWER, 150],\n        [Stat.AUGMENT_SPEED, 550],\n        [Stat.ENERGY_POWER, 150000],\n        [Stat.MAGIC_POWER, 150000],\n    ]),\n    new Item('Dunce Cap', Slot.HEAD, SetName.BACKTOSCHOOL, 100, [\n        [Stat.POWER, 4600000],\n        [Stat.TOUGHNESS, 122000000],\n        [Stat.RES3_POWER, 174],\n        [Stat.ENERGY_BARS, 175000],\n        [Stat.MAGIC_BARS, 175000],\n        [Stat.ENERGY_POWER, 176000],\n        [Stat.MAGIC_POWER, 176000],\n    ]),\n    new Item('School Jersey', Slot.CHEST, SetName.BACKTOSCHOOL, 100, [\n        [Stat.POWER, 4600000],\n        [Stat.TOUGHNESS, 122000000],\n        [Stat.RES3_CAP, 17.4],\n        [Stat.ENERGY_CAP, 17300],\n        [Stat.MAGIC_CAP, 17300],\n        [Stat.ENERGY_BARS, 178000],\n        [Stat.MAGIC_BARS, 178000],\n    ]),\n    new Item('ULTRAWIDE Pants', Slot.PANTS, SetName.BACKTOSCHOOL, 100, [\n        [Stat.POWER, 4600000],\n        [Stat.TOUGHNESS, 122000000],\n        [Stat.RES3_CAP, 17.4],\n        [Stat.ENERGY_POWER, 173000],\n        [Stat.MAGIC_POWER, 173000],\n        [Stat.ENERGY_CAP, 17600],\n        [Stat.MAGIC_CAP, 17600],\n    ]),\n    new Item('Shoes With Wheels', Slot.BOOTS, SetName.BACKTOSCHOOL, 100, [\n        [Stat.POWER, 4600000],\n        [Stat.TOUGHNESS, 122000000],\n        [Stat.RES3_BARS, 172],\n        [Stat.RES3_POWER, 178],\n        [Stat.ENERGY_POWER, 175000],\n        [Stat.MAGIC_POWER, 175000],\n    ]),\n    new Item('Floppy Elastic Ruler', Slot.WEAPON, SetName.BACKTOSCHOOL, 100, [\n        [Stat.POWER, 1140000000],\n        [Stat.TOUGHNESS, 45000000],\n        [Stat.RES3_CAP, 17.7],\n        [Stat.RES3_POWER, 174],\n        [Stat.ENERGY_CAP, 17300],\n        [Stat.MAGIC_CAP, 17300],\n    ]),\n    new Item('THE S', Slot.ACCESSORY, SetName.BACKTOSCHOOL, 100, [\n        [Stat.POWER, 180000000],\n        [Stat.TOUGHNESS, 180000000],\n        [Stat.RES3_POWER, 180],\n        [Stat.WISH_SPEED, 18],\n        [Stat.ENERGY_POWER, 180000],\n        [Stat.MAGIC_POWER, 180000],\n    ]),\n    new Item('A Walkman', Slot.ACCESSORY, SetName.BACKTOSCHOOL, 100, [\n        [Stat.POWER, 126000000],\n        [Stat.TOUGHNESS, 90000000],\n        [Stat.GOLD_DROP, 175000],\n        [Stat.HACK_SPEED, 17.5],\n        [Stat.WISH_SPEED, 17.5],\n    ]),\n    new Item('A 10 Litre Hat', Slot.HEAD, SetName.WESTWORLD, 100, [\n        [Stat.POWER, 6000000],\n        [Stat.TOUGHNESS, 159000000],\n        [Stat.RES3_POWER, 209],\n        [Stat.ENERGY_CAP, 21100],\n        [Stat.MAGIC_CAP, 21100],\n        [Stat.ENERGY_POWER, 213000],\n        [Stat.MAGIC_POWER, 213000],\n    ]),\n    new Item('Asslest Vest', Slot.CHEST, SetName.WESTWORLD, 100, [\n        [Stat.POWER, 6000000],\n        [Stat.TOUGHNESS, 160000000],\n        [Stat.RES3_CAP, 21],\n        [Stat.RES3_POWER, 212],\n        [Stat.ENERGY_BARS, 207000],\n        [Stat.MAGIC_BARS, 207000],\n    ]),\n    new Item('Assful Chaps', Slot.PANTS, SetName.WESTWORLD, 100, [\n        [Stat.POWER, 6000000],\n        [Stat.TOUGHNESS, 158000000],\n        [Stat.RES3_POWER, 211],\n        [Stat.RES3_BARS, 209],\n        [Stat.ENERGY_CAP, 21200],\n        [Stat.MAGIC_CAP, 21200],\n    ]),\n    new Item('Extra Spiky Spurs', Slot.BOOTS, SetName.WESTWORLD, 100, [\n        [Stat.POWER, 6000000],\n        [Stat.TOUGHNESS, 162000000],\n        [Stat.RES3_CAP, 21.2],\n        [Stat.ENERGY_POWER, 213000],\n        [Stat.MAGIC_POWER, 213000],\n        [Stat.ENERGY_BARS, 210000],\n        [Stat.MAGIC_BARS, 210000],\n    ]),\n    new Item('The Six Shooter', Slot.WEAPON, SetName.WESTWORLD, 100, [\n        [Stat.POWER, 1480000000],\n        [Stat.TOUGHNESS, 58000000],\n        [Stat.RES3_POWER, 208],\n        [Stat.RES3_CAP, 21.1],\n        [Stat.ENERGY_CAP, 21400],\n        [Stat.MAGIC_CAP, 21400],\n    ]),\n    new Item('A Battle Corgi', Slot.ACCESSORY, SetName.WESTWORLD, 100, [\n        [Stat.POWER, 220000000],\n        [Stat.TOUGHNESS, 220000000],\n        [Stat.WISH_SPEED, 21],\n        [Stat.NGU_SPEED, 500],\n        [Stat.DROP_CHANCE, 1200],\n    ]),\n    new Item('A Pink Bandana', Slot.ACCESSORY, SetName.WESTWORLD, 100, [\n        [Stat.POWER, 170000000],\n        [Stat.TOUGHNESS, 170000000],\n        [Stat.MAGIC_CAP, 36000],\n        [Stat.ENERGY_POWER, 360000],\n        [Stat.RES3_CAP, 31],\n    ]),\n    new Item('A 9mm Beretta', Slot.WEAPON, SetName.WESTWORLD, 100, [\n        [Stat.POWER, 1400000000],\n        [Stat.TOUGHNESS, 70000000],\n        [Stat.RES3_CAP, 21],\n        [Stat.NGU_SPEED, 700],\n        [Stat.AUGMENT_SPEED, 750],\n    ]),\n    new Item('Space Helmet', Slot.HEAD, SetName.ITHUNGERS, 100, [\n        [Stat.POWER, 7800000],\n        [Stat.TOUGHNESS, 205000000],\n        [Stat.RES3_POWER, 251],\n        [Stat.RES3_CAP, 25.2],\n        [Stat.ENERGY_CAP, 28300],\n        [Stat.MAGIC_CAP, 28300],\n    ]),\n    new Item('Space Suit Chest', Slot.CHEST, SetName.ITHUNGERS, 100, [\n        [Stat.POWER, 7800000],\n        [Stat.TOUGHNESS, 205000000],\n        [Stat.RES3_BARS, 271],\n        [Stat.RES3_CAP, 25.5],\n        [Stat.ENERGY_POWER, 250000],\n        [Stat.MAGIC_POWER, 250000],\n    ]),\n    new Item('Space Suit Legs', Slot.PANTS, SetName.ITHUNGERS, 100, [\n        [Stat.POWER, 7800000],\n        [Stat.TOUGHNESS, 205000000],\n        [Stat.RES3_POWER, 289],\n        [Stat.ENERGY_POWER, 256000],\n        [Stat.MAGIC_POWER, 256000],\n        [Stat.ENERGY_BARS, 303000],\n        [Stat.MAGIC_BARS, 303000],\n    ]),\n    new Item('Space Boots', Slot.BOOTS, SetName.ITHUNGERS, 100, [\n        [Stat.POWER, 7800000],\n        [Stat.TOUGHNESS, 205000000],\n        [Stat.RES3_POWER, 254],\n        [Stat.RES3_CAP, 25.5],\n        [Stat.ENERGY_CAP, 30000],\n        [Stat.MAGIC_CAP, 30000],\n    ]),\n    new Item('Space Gun!', Slot.WEAPON, SetName.ITHUNGERS, 100, [\n        [Stat.POWER, 1920000000],\n        [Stat.TOUGHNESS, 75000000],\n        [Stat.RES3_POWER, 283],\n        [Stat.RES3_CAP, 25],\n        [Stat.ENERGY_POWER, 251000],\n        [Stat.MAGIC_POWER, 251000],\n    ]),\n    new Item('A Manhole', Slot.ACCESSORY, SetName.ITHUNGERS, 100, [\n        [Stat.POWER, 225000000],\n        [Stat.TOUGHNESS, 225000000],\n        [Stat.HACK_SPEED, 20.2],\n        [Stat.ENERGY_POWER, 252000],\n        [Stat.MAGIC_POWER, 252000],\n        [Stat.ENERGY_BARS, 252000],\n        [Stat.MAGIC_BARS, 252000],\n    ]),\n    new Item('A Red Shirt', Slot.ACCESSORY, SetName.ITHUNGERS, 100, [\n        [Stat.POWER, 300000000],\n        [Stat.TOUGHNESS, 1],\n        [Stat.WISH_SPEED, 20.3],\n        [Stat.RESPAWN, 3],\n        [Stat.RES3_CAP, 25.2],\n    ]),\n    new Item('\\'The Cricket\\'', Slot.WEAPON, SetName.ITHUNGERS, 100, [\n        [Stat.POWER, 2100000000],\n        [Stat.TOUGHNESS, 90000000],\n        [Stat.RES3_POWER, 253],\n        [Stat.ENERGY_CAP, 28300],\n        [Stat.MAGIC_CAP, 28300],\n        [Stat.ENERGY_POWER, 249000],\n        [Stat.MAGIC_POWER, 249000],\n    ]),\n    new Item('Evil Rubber Ducky', Slot.ACCESSORY, SetName.ITHUNGERS2, 100, [\n        [Stat.POWER, 225000000],\n        [Stat.TOUGHNESS, 225000000],\n        [Stat.MAGIC_POWER, 301000],\n        [Stat.ENERGY_CAP, 30300],\n        [Stat.MAGIC_CAP, 30300],\n        [Stat.ENERGY_BARS, 304000],\n        [Stat.MAGIC_BARS, 304000],\n    ]),\n    new Item('A Gas Giant', Slot.ACCESSORY, SetName.ITHUNGERS2, 100, [\n        [Stat.POWER, 290000000],\n        [Stat.TOUGHNESS, 290000000],\n        [Stat.RES3_POWER, 302],\n        [Stat.RES3_CAP, 30.4],\n        [Stat.AUGMENT_SPEED, 800],\n    ]),\n    new Item('An Inanimate Carbon Rod', Slot.ACCESSORY, SetName.ITHUNGERS3, 100, [\n        [Stat.POWER, 400000000],\n        [Stat.TOUGHNESS, 400000000],\n        [Stat.HACK_SPEED, 20],\n        [Stat.YGGDRASIL_YIELD, 4],\n        [Stat.WANDOOS_SPEED, 1300],\n    ]),\n    new Item('A Funky Klein Bottle', Slot.ACCESSORY, SetName.ITHUNGERS3, 100, [\n        [Stat.POWER, 380000000],\n        [Stat.TOUGHNESS, 380000000],\n        [Stat.RES3_POWER, 365],\n        [Stat.ENERGY_POWER, 510000],\n        [Stat.MAGIC_POWER, 510000],\n    ]),\n    new Item('Giant Alien Bug Nest', Slot.ACCESSORY, SetName.ITHUNGERS4, 100, [\n        [Stat.POWER, 456000000],\n        [Stat.TOUGHNESS, 456000000],\n        [Stat.QUEST_DROP, 8],\n        [Stat.RES3_CAP, 44],\n        [Stat.ENERGY_POWER, 437000],\n        [Stat.MAGIC_POWER, 437000],\n    ]),\n    new Item('The Key', Slot.ACCESSORY, SetName.ITHUNGERS4, 100, [\n        [Stat.POWER, 456000000],\n        [Stat.TOUGHNESS, 456000000],\n        [Stat.AUGMENT_SPEED, 750],\n        [Stat.NGU_SPEED, 1000],\n        [Stat.ENERGY_POWER, 437000],\n        [Stat.MAGIC_POWER, 437000],\n    ]),\n    new Item('Ascended x7 Pendant', Slot.ACCESSORY, SetName.FOREST_PENDANT, 100, [\n        [Stat.POWER, 400000000],\n        [Stat.TOUGHNESS, 400000000],\n        [Stat.RES3_CAP, 40],\n        [Stat.RES3_POWER, 400],\n        [Stat.WISH_SPEED, 40],\n    ]),\n    new Item('SUPREME INTELLIGENCE LOOTY', Slot.ACCESSORY, SetName.LOOTY, 100, [\n        [Stat.POWER, 500000000],\n        [Stat.TOUGHNESS, 500000000],\n        [Stat.GOLD_DROP, 200000],\n        [Stat.DROP_CHANCE, 3000],\n        [Stat.ENERGY_POWER, 500000],\n        [Stat.MAGIC_POWER, 500000],\n    ]),\n];\n\n\nexport const LOOTIES = ITEMLIST.filter(x => x.zone !== undefined && x.zone[0] === SetName.LOOTY[0]).sort((a, b) => a.power - b.power).map(x=>x.name);\nexport const PENDANTS = ITEMLIST.filter(x => x.zone !== undefined && x.zone[0] === SetName.FOREST_PENDANT[0]).sort((a, b) => a.power - b.power).map(x=>x.name);\n","import {Item, Stat, ItemNameContainer, Slot, SetName} from './assets/ItemAux'\nimport {LOOTIES, PENDANTS} from './assets/Items'\n\nexport function getSlot(name, data) {\n        return data[name].slot;\n}\n\nexport function getLock(slot, idx, locked) {\n        if (!Object.getOwnPropertyNames(locked).includes(slot)) {\n                return false;\n        }\n        return locked[slot].includes(idx);\n}\n\nexport function old2newequip(accslots, offhand, base_layout) {\n        let equip = ItemNameContainer(accslots, offhand);\n        let counts = Object.getOwnPropertyNames(Slot).map((x) => (0));\n        for (let idx = 0; idx < base_layout.items.length; idx++) {\n                const item = base_layout.items[idx];\n                equip[item.slot[0]][counts[item.slot[1]]] = item.name;\n                counts[item.slot[1]]++;\n        }\n        return equip;\n}\n\nexport function clone(obj) {\n        let copy;\n        // Handle the 3 simple types, and null or undefined\n        if (null == obj || \"object\" != typeof obj) \n                return obj;\n        \n        // Handle Date\n        if (obj instanceof Date) {\n                copy = new Date();\n                copy.setTime(obj.getTime());\n                return copy;\n        }\n        // Handle Array\n        if (obj instanceof Array) {\n                copy = [];\n                for (let i = 0, len = obj.length; i < len; i++) {\n                        copy[i] = clone(obj[i]);\n                }\n                return copy;\n        }\n        // Handle Object\n        if (obj instanceof Object) {\n                copy = {};\n                for (let attr in obj) {\n                        if (obj.hasOwnProperty(attr)) \n                                copy[attr] = clone(obj[attr]);\n                        }\n                return copy;\n        }\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n\nexport function get_limits(state) {\n        return {\n                zone: state.zone,\n                titan: get_max_titan(state.zone),\n                titanversion: state.titanversion,\n                looty: state.looty,\n                pendant: state.pendant\n        }\n}\n\nexport function allowed_zone(itemdata, limits, name) {\n        const zone = limits.zone;\n        const titan = limits.titan;\n        const titanversion = limits.titanversion;\n        const looty = limits.looty;\n        const pendant = limits.pendant;\n        const item = itemdata[name];\n        if (item.empty) {\n                return false;\n        }\n        if (item.zone[1] > zone) {\n                // zone too high\n                return false;\n        }\n        if (item.zone[1] === titan[1] && item.zone[2] > titanversion) {\n                // titan version too high\n                return false;\n        }\n        if (item.zone[0] === SetName.LOOTY[0] && LOOTIES.indexOf(name) > looty) {\n                return false;\n        }\n        if (item.zone[0] === SetName.FOREST_PENDANT[0] && PENDANTS.indexOf(name) > pendant) {\n                return false;\n        }\n        return true;\n}\n\nexport function get_zone(zone) {\n        return SetName[Object.getOwnPropertyNames(SetName).filter(x => {\n                        return zone === SetName[x][1];\n                })[0]];\n}\n\nexport function get_max_zone(zone) {\n        let maxzone = 1;\n        Object.getOwnPropertyNames(SetName).forEach(x => {\n                maxzone = SetName[x][1] > maxzone\n                        ? SetName[x][1]\n                        : maxzone;\n        });\n        return maxzone;\n}\n\nexport function get_max_titan(zone) {\n        let maxtitan = 21;\n        Object.getOwnPropertyNames(SetName).forEach(x => {\n                if (SetName[x].length === 3 && SetName[x][1] <= zone) {\n                        maxtitan = maxtitan[1] > SetName[x][1]\n                                ? maxtitan\n                                : SetName[x];\n                }\n        });\n        return maxtitan;\n}\n\nexport function score_vals(vals, factors) {\n        vals = vals.map((val, idx) => val / 100);\n        if (factors.length > 2) {\n                const exponents = factors[2];\n                vals = vals.map((val, idx) => val ** exponents[idx]);\n        }\n        return vals.reduce((res, val) => res * val, 1);\n}\n\nexport function get_raw_vals(data, equip, factors, offhand) {\n        const stats = factors[1];\n        const sorted = Object.getOwnPropertyNames(Slot).reduce((res, slot) => {\n                if (equip[Slot[slot][0]] !== undefined) {\n                        return res.concat(equip[Slot[slot][0]]);\n                }\n                return res;\n        }, []);\n        let vals = [];\n        for (let idx in stats) {\n                const stat = stats[idx];\n                if (stat === 'Respawn' || stat === 'Power' || stat === 'Toughness') {\n                        vals[idx] = 0;\n                } else {\n                        vals[idx] = 100;\n                }\n                let mainhand = true;\n                for (let jdx in sorted) {\n                        const name = sorted[jdx];\n                        let val = data[name][stat];\n                        if (data[name].slot[0] === 'weapon') {\n                                if (mainhand) {\n                                        mainhand = false;\n                                } else {\n                                        val *= offhand / 100\n                                }\n                        }\n                        if (val === undefined || isNaN(val)) {\n                                continue;\n                        }\n                        vals[idx] += val;\n                }\n        }\n        return vals;\n}\n\nexport const hardcap = (vals, factors, capstats) => {\n        //handle hardcap\n        return vals.map((val, idx) => {\n                const hardcap = capstats[factors[1][idx] + ' Cap'];\n                if (hardcap === undefined) {\n                        return val;\n                }\n                const gear = 100 * capstats[factors[1][idx] + ' Gear'] + 100;\n                const total = Math.max(1, capstats[factors[1][idx] + ' Total']);\n                const maxVal = Math.max(100, hardcap / total * gear);\n                return Math.min(val, maxVal);\n        });\n}\n\nexport function get_vals(data, equip, factors, offhand, capstats) {\n        return hardcap(get_raw_vals(data, equip, factors, offhand), factors, capstats);\n}\n\nexport function score_raw_equip(data, equip, factors, offhand) {\n        return score_vals(get_raw_vals(data, equip, factors, offhand), factors);\n}\n\nexport function score_equip(data, equip, factors, offhand, capstats) {\n        return score_vals(get_vals(data, equip, factors, offhand, capstats), factors);\n}\n\nexport const shorten = (val, mfd = 2) => {\n        if (val < 10000) {\n                return val.toLocaleString(undefined, {maximumFractionDigits: mfd});\n        }\n        let units = [\n                'k',\n                'M',\n                'B',\n                'T',\n                'Qa',\n                'Qi',\n                'Sx',\n                'Sp',\n                'Oc',\n                'No',\n                'Dc'\n        ];\n        let order = Math.floor(Math.log(val / 10) / Math.log(1000));\n        let unitname = units[(order - 1)];\n        let num = val / 1000 ** order;\n        return num.toLocaleString(undefined, {maximumFractionDigits: mfd}) + unitname;\n}\n\nexport const shortenExponential = (val, mfd = 3) => {\n        if (val < 10000) {\n                return val.toLocaleString(undefined, {maximumFractionDigits: mfd});\n        }\n        return (val - 10 ** Math.floor(Math.log10(val) - mfd)).toExponential(mfd);\n}\n\nexport const toTime = (ticks) => {\n        if (ticks === Infinity) {\n                return Infinity;\n        }\n        let result = '';\n        let days = Math.floor(ticks / 50 / 60 / 60 / 24);\n        ticks -= days * 24 * 60 * 60 * 50;\n        let hours = Math.floor(ticks / 50 / 60 / 60);\n        ticks -= hours * 60 * 60 * 50;\n        let mins = Math.floor(ticks / 50 / 60);\n        ticks -= mins * 60 * 50\n        if (days >= 100) {\n                return shorten(days, 0) + ' days';\n        }\n        if (days > 0) {\n                result += days + 'd ';\n        }\n        if (days > 0 || hours > 0) {\n                result += hours + 'h ';\n        }\n        if (days > 0 || hours > 0 || mins > 0) {\n                result += mins + 'm ';\n        }\n        result += shortenExponential(ticks / 50, 1) + 's'\n        return result;\n}\n\nexport const cubeBaseItemData = (itemdata, cubestats, basestats) => {\n        // make cube stats item\n        let tier = Number(cubestats.tier);\n        let cube = new Item('Infinity Cube', Slot.OTHER, undefined, 0, [\n\n                [\n                        Stat.POWER,\n                        Number(cubestats.power)\n                ],\n                [\n                        Stat.TOUGHNESS,\n                        Number(cubestats.toughness)\n                ],\n                [\n                        Stat.DROP_CHANCE, tier <= 0\n                                ? 0\n                                : tier === 1\n                                        ? 50\n                                        : 50 + (tier - 1) * 20\n                ],\n                [\n                        Stat.GOLD_DROP, tier <= 1\n                                ? 0\n                                : tier === 2\n                                        ? 50\n                                        : Math.pow(tier - 1, 1.3) * 50\n                ],\n                [\n                        Stat.HACK_SPEED, tier <= 7\n                                ? 0\n                                : tier < 10\n                                        ? (tier - 8) * 5 + 10\n                                        : 20\n                ],\n                [\n                        Stat.WISH_SPEED, tier <= 8\n                                ? 0\n                                : tier === 9\n                                        ? 10\n                                        : 20\n                ]\n        ]);\n        // make base stats item\n        let base = new Item('Base Stats', Slot.OTHER, undefined, 0, [\n                [\n                        Stat.POWER,\n                        Number(basestats.power)\n                ],\n                [\n                        Stat.TOUGHNESS,\n                        Number(basestats.toughness)\n                ]\n        ]);\n        return {\n                ...itemdata,\n                'Infinity Cube': cube,\n                'Base Stats': base\n\n        };\n}\n","import {\n        Item,\n        Stat,\n        Slot,\n        EmptySlot,\n        Equip,\n        Factors\n} from './assets/ItemAux'\nimport {\n        allowed_zone,\n        score_equip,\n        score_raw_equip,\n        score_vals,\n        get_vals,\n        get_raw_vals,\n        clone,\n        get_limits,\n        old2newequip,\n        cubeBaseItemData,\n        hardcap\n} from './util.js'\n\nconst EMPTY_ACCESSORY = new EmptySlot(Slot['ACCESSORY']).name;\n\nexport class Optimizer {\n        constructor(state) {\n                this.itemnames = state.items;\n                this.itemdata = cubeBaseItemData(state.itemdata, state.cubestats, state.basestats);\n                this.factorslist = state.factors;\n                this.maxslotslist = state.maxslots;\n                this.accslots = state.equip.accessory.length;\n                this.offhand = state.offhand * 5;\n                this.limits = get_limits(state);\n                this.capstats = state.capstats;\n        }\n\n        construct_base(locked, equip) {\n                let base = new Equip();\n                Object.getOwnPropertyNames(locked).forEach(slot => {\n                        const locks = locked[slot];\n                        for (let i = 0; i < locks.length; i++) {\n                                const item = this.itemdata[equip[slot][locks[i]]];\n                                this.add_equip(base, item);\n                        }\n                });\n                base = this.old2newequip(base);\n                // wrap base in an array\n                return [base];\n        }\n\n        sort_locks(locked, equip, result) {\n                //sort locks\n                Object.getOwnPropertyNames(Slot).forEach(slotname => {\n                        const slot = Slot[slotname][0];\n                        const locks = locked[slot];\n                        if (locks === undefined) {\n                                return;\n                        }\n                        const items = [...result[slot]];\n                        let item_idx = locks.length;\n                        let sorted = [];\n                        // add the items in the correct order\n                        for (let slot_idx = 0; slot_idx < equip[slot].length; slot_idx++) {\n                                if (locks.includes(slot_idx)) {\n                                        const item = equip[slot][slot_idx];\n                                        sorted.push(item);\n                                } else if (item_idx < items.length) {\n                                        const item = items[item_idx];\n                                        sorted.push(item);\n                                        item_idx++;\n                                } else {\n                                        sorted.push(new EmptySlot(slot).name);\n                                }\n                        }\n                        result[slot] = sorted;\n                });\n                return result;\n        }\n\n        old2newequip(equip) {\n                // create new equip\n                return {\n                        ...old2newequip(this.accslots, this.offhand, equip),\n                        other: ['Infinity Cube', 'Base Stats']\n                };\n        }\n\n        new2oldequip(equip) {\n                let base = new Equip();\n                Object.getOwnPropertyNames(Slot).forEach(slot => {\n                        for (let i = 0; i < equip[Slot[slot][0]].length; i++) {\n                                const name = equip[Slot[slot][0]][i];\n                                const item = this.itemdata[name];\n                                this.add_equip(base, item);\n                        }\n                });\n                return base;\n        }\n\n        score_equip(equip) {\n                return score_equip(this.itemdata, equip, this.factors, this.offhand, this.capstats);\n        }\n\n        score_raw_equip(equip) {\n                return score_raw_equip(this.itemdata, equip, this.factors, this.offhand);\n        }\n\n        get_vals(equip) {\n                return get_vals(this.itemdata, equip, this.factors, this.offhand, this.capstats);\n        }\n\n        get_raw_vals(equip) {\n                return get_raw_vals(this.itemdata, equip, this.factors, this.offhand);\n        }\n\n        score_equip_wrapper(base_layout) {\n                let equip = this.old2newequip(base_layout)\n                return this.score_equip(equip);\n        }\n\n        score_raw_equip_wrapper(base_layout) {\n                let equip = this.old2newequip(base_layout)\n                return this.score_raw_equip(equip);\n        }\n\n        get_vals_wrapper(base_layout) {\n                let equip = this.old2newequip(base_layout)\n                return this.get_vals(equip);\n        }\n\n        swap_vals(vals, a, b) {\n                const valsa = this.get_vals({accessory: a});\n                const valsb = this.get_vals({accessory: b});\n                for (let idx in vals) {\n                        vals[idx] += valsb[idx] - valsa[idx];\n                }\n                return vals;\n        }\n\n        top_scorers(optimal) {\n                const scores = optimal.map(x => this.score_equip(x));\n                const max = Math.max(...scores)\n                return optimal.filter((x, idx) => scores[idx] === max);\n        }\n\n        sort_accs(equip) {\n                let optimal_size = equip.items.length;\n                let scores = [];\n                for (let jdx = Math.max(0, equip.item_count); jdx < optimal_size; jdx++) {\n                        let item = equip.items[jdx];\n                        let score = this.score_raw_equip_wrapper(this.remove_equip(clone(equip), item));\n                        scores.push([score, item])\n                }\n                for (let jdx = equip.item_count; jdx < optimal_size; jdx++) {\n                        equip.items.pop();\n                }\n                scores = scores.sort((a, b) => (a[0] - b[0]));\n                for (let jdx in scores) {\n                        equip.items.push(scores[jdx][1]);\n                }\n                return equip;\n        }\n\n        count_accslots(base_layout) {\n                let accslots = this.accslots - base_layout.counts['accessory'];\n                accslots = this.maxslots < accslots\n                        ? this.maxslots\n                        : accslots;\n                return accslots;\n        }\n\n        optimize_layouts(base_layout, accslots, s) {\n                // find all possible items that can be equiped in main slots\n                let weapons = base_layout.counts['weapon'];\n                let options = [\n                        [\n                                'WEAPON', 100, 'mainhand'\n                        ], // mainhand\n                        [\n                                'WEAPON', this.offhand, 'offhand'\n                        ], // offhand\n                        [\n                                'HEAD', 100\n                        ],\n                        [\n                                'CHEST', 100\n                        ],\n                        [\n                                'PANTS', 100\n                        ],\n                        [\n                                'BOOTS', 100\n                        ]\n                ].filter((x) => {\n                        if (x[1] === 0) {\n                                return false;\n                        }\n                        let slot = Slot[x[0]][0]\n                        if (slot === 'accessory' || slot === 'other') {\n                                return false;\n                        }\n                        if (slot === 'weapon' && x[2] === 'mainhand') {\n                                return weapons === 0;\n                        }\n                        if (slot === 'weapon' && x[2] === 'offhand') {\n                                return weapons < 2;\n                        }\n                        return base_layout.counts[slot] < 1;\n                }).map((x) => ([\n                        this.gear_slot(Slot[x[0]], base_layout),\n                        x[1]\n                ]));\n                s.push(options.map((x) => (x[0].length)).reduce((a, b) => (a * b), 1));\n                let remaining = options.map((x) => {\n                        let items = x[0];\n                        return [\n                                this.pareto(\n                                        items, items[0].slot[0] === 'weapon'\n                                        ? 2 - base_layout.counts['weapon']\n                                        : 1),\n                                x[1]\n                        ];\n                });\n                s.push(remaining.map((x) => (x[0].length)).reduce((a, b) => (a * b), 1));\n                base_layout.item_count = base_layout.items.length;\n                let layouts = [base_layout];\n                for (let i = 0; i < remaining.length; i++) {\n                        let tmp = clone(layouts);\n                        for (let j = 0; j < layouts.length; j++) {\n                                for (let k = 0; k < remaining[i][0].length; k++) {\n                                        const item = remaining[i][0][k];\n                                        if (item.empty) {\n                                                continue;\n                                        }\n                                        let equip = clone(layouts[j]);\n                                        if (item.slot[0] === 'weapon') {\n                                                // check if weapon is already in mainhand slot\n                                                if (equip.items.map(val => val.name).filter(name => name === item.name).length > 0) {\n                                                        continue;\n                                                }\n                                        }\n                                        this.add_equip(equip, item);\n                                        equip.item_count = equip.items.length;\n                                        tmp.push(equip);\n                                }\n                        }\n                        layouts = this.pareto(tmp);\n                }\n                s.push(layouts.length);\n                return layouts;\n        }\n\n        filter_accs(candidate, accslots, accs) {\n                let candidate_accs = candidate.accessory.filter(x => {\n                        if (!accs.includes(x)) {\n                                // locked accessory\n                                return false;\n                        }\n                        return true;\n                });\n                return accs.filter(x => !candidate_accs.includes(x));\n        }\n\n        get_accs(base_layout, accslots) {\n                let accs = this.gear_slot(Slot.ACCESSORY, base_layout);\n                accs = this.pareto(accs, accslots);\n                let everything = accs.concat(base_layout.items).map((x) => (x.name));\n                // sort accessories\n                accs = accs.map((x, idx) => idx).sort((a, b) => {\n                        // remove accessory a\n                        everything[a] = EMPTY_ACCESSORY;\n                        const ascore = this.score_equip({accessory: everything});\n                        everything[a] = accs[a].name;\n                        // remove accessory b\n                        everything[b] = EMPTY_ACCESSORY;\n                        const bscore = this.score_equip({accessory: everything});\n                        everything[b] = accs[b].name;\n                        // compare scores\n                        return ascore - bscore;\n                }).map(x => accs[x].name);\n                return accs;\n        }\n\n        compute_optimal(base_layouts, factoridx) {\n                this.factors = Factors[this.factorslist[factoridx]];\n                this.maxslots = this.maxslotslist[factoridx];\n                console.log('Priority', factoridx + ':', this.factors[0], this.maxslots)\n                if (this.factors[1].length === 0) {\n                        return base_layouts;\n                }\n                // all base layouts should have the same number of available acc slots\n                const base_layout = this.new2oldequip(base_layouts[0]);\n                const empty_accslots = this.count_accslots(base_layout);\n                //TODO: clean this\n                const locked_accs = base_layouts[0].accessory.reduce((res, x) => res + (\n                        this.itemdata[x].empty\n                        ? 0\n                        : 1), 0);\n                let candidates = this.top_scorers(base_layouts);\n                candidates.forEach(x => x.accslots = 0);\n                candidates.forEach(x => x.accs = []);\n                // expand layout and accessory candidate into proper candidate\n                for (let layout = 0; layout < base_layouts.length; layout++) {\n                        // find and sort possible accessories\n                        const accs = this.get_accs(this.new2oldequip(base_layouts[layout]), empty_accslots);\n                        let accslots = Math.min(empty_accslots, accs.length);\n                        const acc_candidate = accs.slice(0, accslots);\n                        let s = [];\n                        const layouts = this.optimize_layouts(this.new2oldequip(base_layouts[layout]), accslots, s).map(x => this.old2newequip(x));\n                        console.log('Processing ' + s[2] + ' out of ' + s[1] + ' out of ' + s[0] + ' gear layouts.');\n                        for (let idx in layouts) {\n                                // combine every gear with every accessory layout\n                                let candidate = layouts[idx];\n                                if (accslots > 0) {\n                                        for (let kdx = 0; kdx < accslots; kdx++) {\n                                                candidate.accessory[locked_accs + kdx] = acc_candidate[kdx];\n                                        }\n                                        let filter_accs = this.filter_accs(candidate, accslots, accs);\n                                        let filter_idx = undefined;\n                                        while (accslots > 0) {\n                                                let riskidx = undefined;\n                                                let score = this.score_equip(candidate);\n                                                let rawscore = this.score_raw_equip(candidate);\n                                                let riskscore = -1;\n                                                let rawriskscore = -1;\n                                                let vals = this.get_raw_vals(candidate);\n                                                for (let kdx = locked_accs; kdx < locked_accs + accslots; kdx++) {\n                                                        const tmp = this.swap_vals([...vals], candidate.accessory[kdx], EMPTY_ACCESSORY)\n                                                        const tmpscore = score_vals(hardcap(tmp, this.factors, this.capstats), this.factors);\n                                                        const rawtmpscore = score_vals(tmp, this.factors);\n                                                        if (tmpscore > riskscore || (tmpscore === riskscore && rawtmpscore > rawriskscore)) {\n                                                                riskidx = kdx;\n                                                                riskscore = tmpscore;\n                                                                rawriskscore = rawtmpscore;\n                                                        }\n                                                }\n                                                const atrisk = candidate.accessory[riskidx];\n                                                let winner = undefined;\n                                                filter_accs = [\n                                                        ...filter_accs,\n                                                        EMPTY_ACCESSORY\n                                                ];\n                                                for (let kdx in filter_accs) {\n                                                        const acc = filter_accs[kdx];\n                                                        const tmp = this.swap_vals([...vals], atrisk, acc);\n                                                        const tmpscore = score_vals(hardcap(tmp, this.factors, this.capstats), this.factors);\n                                                        const rawtmpscore = score_vals(tmp, this.factors);\n                                                        if (tmpscore > score || (tmpscore === score && rawtmpscore > rawscore) || (tmpscore === score && this.itemdata[acc].empty)) {\n                                                                score = tmpscore;\n                                                                rawscore = rawtmpscore;\n                                                                winner = acc;\n                                                                filter_idx = kdx;\n                                                        }\n                                                }\n                                                if (winner === undefined) {\n                                                        candidate.accessory[riskidx] = atrisk;\n                                                        break;\n                                                } else {\n                                                        candidate.accessory[riskidx] = candidate.accessory[locked_accs + accslots - 1];\n                                                        candidate.accessory[locked_accs + accslots - 1] = winner\n                                                        filter_accs[filter_idx] = atrisk;\n                                                        if (this.itemdata[winner].empty) {\n                                                                accslots--;\n                                                        }\n                                                }\n                                        }\n                                }\n                                candidate.accslots = accslots;\n                                candidate.accs = [...accs];\n                                candidates.push(candidate);\n                                candidates = this.top_scorers(candidates);\n                        }\n                }\n                // sort new accs per candidate\n                for (let idx in candidates) {\n                        let tmp = this.new2oldequip(candidates[idx]);\n                        tmp.item_count = tmp.items.length - candidates[idx].accslots;\n                        candidates[idx] = {\n                                ...this.old2newequip(this.sort_accs(tmp)),\n                                accslots: candidates[idx].accslots,\n                                accs: candidates[idx].accs\n                        };\n                }\n                // construct alternative candidates\n                let alternatives = [...candidates];\n                let score = this.score_equip(candidates[0]);\n                let rawscore = this.score_raw_equip(candidates[0]);\n                candidates.forEach(candidate => {\n                        const remainder = candidate.accs.filter(x => !candidate.accessory.includes(x));\n                        for (let idx = 0; idx < candidate.accslots; idx++) {\n                                const tmp = candidate.accessory[locked_accs + idx];\n                                for (let jdx in remainder) {\n                                        candidate.accessory[locked_accs + idx] = remainder[jdx];\n                                        const tmp_score = this.score_equip(candidate);\n                                        const rawtmp_score = this.score_raw_equip(candidate);\n                                        if (tmp_score === score && rawtmp_score === rawscore) {\n                                                alternatives.push(clone(candidate));\n                                                console.log('alternative found')\n                                        }\n                                        if (tmp_score > score) {\n                                                console.log('an error occured');\n                                        }\n                                }\n                                candidate.accessory[locked_accs + idx] = tmp;\n                        }\n                });\n                return alternatives;\n        }\n\n        add_equip(equip, item, effect = 100) {\n                if (item.empty) {\n                        return equip;\n                }\n                for (let i = 0; i < item.statnames.length; i++) {\n                        const stat = item.statnames[i];\n                        equip[stat] += item[stat] * effect / 100;\n                }\n                equip.items.push(item);\n                equip.counts[item.slot[0]] += 1;\n                return equip;\n        }\n\n        remove_equip(equip, item) {\n                if (item.empty) {\n                        return equip;\n                }\n                item = equip.items.filter((x) => (x.name === item.name))[0];\n                if (item === undefined) {\n                        return equip;\n                }\n                for (let i = 0; i < item.statnames.length; i++) {\n                        const stat = item.statnames[i];\n                        equip[stat] -= item[stat];\n                }\n                equip.items = equip.items.filter((x) => (x.name !== item.name));\n                equip.counts[item.slot[0]] -= 1;\n                return equip;\n        }\n\n        gear_slot(type, equip) {\n                const equiped = equip.items.filter((item) => (item.slot[0] === type[0])).map((x) => (x.name));\n                return this.itemnames.filter((name) => {\n                        if (!allowed_zone(this.itemdata, this.limits, name)) {\n                                return false;\n                        }\n                        return this.itemdata[name].slot[0] === type[0];\n                }).map((name) => (this.itemdata[name])).filter((item) => (!item.disable && !equiped.includes(item.name)));\n        }\n\n        //set <equal> to <false> if equal results result in a dominate call\n        dominates(major, minor, equal = true) {\n                let l = this.factors[1].length;\n                let major_stats = new Array(l).fill(0);\n                let minor_stats = new Array(l).fill(0);\n                for (let i = 0; i < l; i++) {\n                        let stat = this.factors[1][i];\n                        let idx = major.statnames.indexOf(stat);\n                        const exponent = this.factors.length > 2\n                                ? this.factors[2][i]\n                                : 1;\n                        if (idx >= 0) {\n                                major_stats[i] = major[stat] ** exponent;\n                        } else {\n                                minor_stats[i] = exponent > 0 || minor.empty\n                                        ? 0\n                                        : 1;\n                        }\n                        idx = minor.statnames.indexOf(stat);\n                        if (idx >= 0) {\n                                minor_stats[i] = minor[stat] ** exponent;\n                        } else {\n                                minor_stats[i] = exponent > 0 || major.empty\n                                        ? 0\n                                        : 1;\n                        }\n                        if (minor_stats[i] > major_stats[i]) {\n                                return false;\n                        }\n                        if (minor_stats[i] < major_stats[i]) {\n                                equal = false;\n                        }\n                }\n                return !equal;\n        }\n\n        pareto(list, cutoff = 1) {\n                let dominated = new Array(list.length).fill(false);\n                let empty = list[0].slot === undefined\n                        ? new Equip()\n                        : new EmptySlot(list[0].slot);\n                for (let i = list.length - 1; i > -1; i--) {\n                        if (this.dominates(empty, list[i], !empty.empty)) {\n                                dominated[i] = cutoff;\n                        }\n                        if (dominated[i] === cutoff) {\n                                continue;\n                        }\n                        for (let j = list.length - 1; j > -1; j--) {\n                                if (dominated[j] === cutoff) {\n                                        continue;\n                                }\n                                dominated[j] += this.dominates(list[i], list[j]);\n                        }\n                }\n                let result = dominated.map((val, idx) => (\n                        val < cutoff\n                        ? list[idx]\n                        : false)).filter((val) => (val !== false));\n                if (result.length === 0) {\n                        result = [empty];\n                }\n                return result;\n        }\n}\n","export class Augment {\n        constructor(augstats, augs) {\n                this.augstats = augstats;\n                this.augs = augs;\n        }\n\n        exponent(idx) {\n                let lsc = Number(this.augstats.lsc);\n                let difference = 0.1;\n                if (lsc > 0) {\n                        difference += 0.05;\n                }\n                if (lsc >= 20) {\n                        difference += 0.05;\n                        lsc = 20;\n                }\n                difference += lsc * 0.01;\n                return 1 + difference * idx;\n        }\n\n        cost(idx, version, isUpgrade, isGold) {\n                if (idx > 4 && !isUpgrade && isGold) {\n                        return idx === 5\n                                ? 1.8e16\n                                : 2.3e19;\n                }\n                const nacfactor = this.augstats.nac >= 25\n                        ? 0.5\n                        : 1;\n                const base = isGold\n                        ? isUpgrade\n                                ? 1e7 * nacfactor\n                                : 1e4 * nacfactor\n                        : [\n                                2e7, 5e19, 5e34 / 1.2 //HACK: why do we need to divide by 1.2 here ??\n                        ][version];\n                const a = isUpgrade\n                        ? isGold\n                                ? 20\n                                : 12\n                        : isGold\n                                ? 50\n                                : 17;\n                const b = isUpgrade\n                        ? isGold\n                                ? 1e3\n                                : 8e2\n                        : isGold\n                                ? 1e3 //never used\n                                : 1.4e3;\n                return base * Math.pow(a, Math.min(4, idx)) * Math.pow(b, Math.max(0, idx - 4));\n        }\n\n        energy(idx) {\n                const ratio = Math.max(0, Number(this.augstats.augs[idx].ratio));\n                const cap = Number(this.augstats.ecap);\n                return [\n                        cap * ratio / (ratio + 1),\n                        cap / (ratio + 1)\n                ];\n        }\n\n        reachable(idx, isUpgrade) {\n                const version = Number(this.augstats.version);\n                let level = 0\n                let ticks = Number(this.augstats.time) * 60 * 50;\n                if (ticks > 365 * 4.32e6) {\n                        ticks = 365 * 4.32e6;\n                }\n                const speed = Number(this.augstats.augspeed);\n                const cap = isUpgrade\n                        ? this.energy(idx)[1]\n                        : this.energy(idx)[0];\n                const base = this.cost(idx, version, isUpgrade, false);\n                const basegold = this.cost(idx, version, isUpgrade, true);\n                const gpt = Number(this.augstats.gps) / 50;\n                let gold = Number(this.augstats.gold) + gpt; //add 1 tick worth of gold\n                const bbtill = cap * speed / base;\n                const totalgold = gold + gpt * ticks;\n                if (totalgold > Math.pow(\n                        ticks, isUpgrade\n                        ? 3\n                        : 2) / 2 * basegold && 500 * bbtill > level) {\n                        // handle bar fills up to 0.1s\n                        for (let i = 1; i < 501; i++) {\n                                if (i * bbtill >= level + Math.floor(ticks / i)) {\n                                        return [\n                                                Math.min(1e9, level + Math.floor(ticks / i)),\n                                                false\n                                        ];\n                                } else if (Math.floor(i * bbtill) > level) {\n                                        ticks -= i * (Math.floor(i * bbtill) - level);\n                                        level = Math.floor(i * bbtill);\n                                }\n                        }\n                }\n                //handle slow bar fills\n                let goldlimited = false;\n                while (ticks > 0 && level < 1e9) {\n                        const cost = isUpgrade\n                                ? basegold * Math.pow(level + 1, 2)\n                                : basegold * (level + 1);\n                        if (gold < cost) {\n                                goldlimited = true;\n                                if (gpt <= 0) {\n                                        break;\n                                }\n                                const reqticks = Math.ceil((cost - gold) / gpt);\n                                ticks -= reqticks;\n                                if (ticks < 0) {\n                                        ticks = 0;\n                                }\n                                gold += reqticks * gpt;\n                        } else {\n                                const reqticks = Math.ceil(base * (level + 1) / (cap * speed));\n                                ticks -= reqticks;\n                                gold += reqticks * gpt - cost;\n                                level++;\n                        }\n                }\n                //correct overfill\n                if (ticks < 0) {\n                        level--;\n                }\n                return [\n                        Math.min(1e9, level),\n                        goldlimited\n                ];\n        }\n\n        boost(idx, auglevel, upglevel) {\n                const factor = 1; //[1, 1, 1e12][Number(this.augstats.version)];\n                const augbonus = this.augs[idx].boost * Math.pow(auglevel, this.exponent(idx));\n                const upgbonus = 1 + Math.pow(upglevel, 2);\n                return Math.max(1, Math.floor(augbonus * upgbonus / factor));\n        }\n}\n","import {Wishes, resource_priorities} from './assets/ItemAux';\n// [min, max[\nfunction getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport class Wish {\n        constructor(wishstats) {\n                this.wishstats = wishstats;\n        }\n\n        base(res) {\n                let assignment = res.map(x => Math.max(1e3, Math.floor(x / 1e5)));\n                return assignment;\n        }\n\n        update_res(r, A) {\n                return r.map((ri, i) => r[i] - A.reduce((res, a) => a[i] + res, 0));\n        }\n\n        score(cost, wishcap, res, start, goal, x = -0.17) {\n                let result = cost;\n                for (let i = 0; i < res.length; i++) {\n                        result *= res[i] ** x;\n                }\n                let total = 0;\n                for (let i = start + 1; i <= goal; i++) {\n                        total += Math.max(wishcap, result / goal * i);\n                }\n                return Math.ceil(total);\n        }\n\n        score_raw(cost, wishcap, res, start, goal, force = false, x = -0.17) {\n                let result = cost;\n                for (let i = 0; i < res.length; i++) {\n                        result *= res[i] ** x;\n                }\n                let total = 0;\n                for (let i = start + 1; i <= goal; i++) {\n                        if (force || result > wishcap) {\n                                total += Math.max(wishcap, result / goal * i);\n                        } else {\n                                total += result / goal * i;\n                        }\n                }\n                return Math.ceil(total);\n        }\n\n        score_true(cost, wishcap, res, start, goal, x = -0.17) {\n                if (!this.wishstats.truetime) {\n                        return 0;\n                }\n                let result = cost;\n                for (let i = 0; i < res.length; i++) {\n                        result *= res[i] ** x;\n                }\n                let total = 0;\n                for (let i = start + 1; i <= goal; i++) {\n                        total += this.actualtime(Math.max(wishcap, result / goal * i));\n                }\n                return Math.ceil(total);\n        }\n\n        spread_res(assignments, res, scores, resource_priority, wishcap, exponent, l, totres, coef, start, goal, minimal = 0) {\n                const mincap = Math.max(...coef.map((_, i) => goal[i] - start[i])) * wishcap;\n                resource_priority.forEach((i) => {\n                        for (let j = l - 1; j >= minimal; j--) {\n                                let count = 0;\n                                while (count < 1000) {\n                                        //might require quite a few iterations when doing\n                                        //a single wish with multiple levels, but probably less than 20\n                                        count++;\n                                        if (res[i] < l) {\n                                                break;\n                                        }\n                                        if (scores[l - 1] === wishcap * (goal[j] - start[j])) {\n                                                break;\n                                        }\n                                        const ref_score = j === 0 || scores[j - 1] === 0\n                                                ? mincap\n                                                : scores[j - 1] > mincap\n                                                        ? scores[j - 1]\n                                                        : mincap;\n                                        if (scores[j] === ref_score) {\n                                                break;\n                                        }\n                                        const ratio = scores[l - 1] / ref_score;\n                                        let factor = ratio ** (1 / exponent);\n                                        let s = 0;\n                                        for (let k = j; k < l; k++) {\n                                                s += assignments[k][i];\n                                        }\n                                        factor = Math.min(factor, res[i] / s + 1);\n                                        let required = assignments.map(a => a[i] * factor);\n                                        /* eslint-disable-next-line no-loop-func */\n                                        required = assignments.map((a, k) => Math.min(required[k] - a[i], res[i]));\n                                        // assign additional resources and update remainder and score\n                                        let changed = 0;\n                                        for (let k = j; k < l; k++) {\n                                                changed += Math.floor(required[k] + 1) / assignments[k][i];\n                                                assignments[k][i] += Math.floor(required[k] + 1);\n                                        }\n                                        if (changed < 1e-4) {\n                                                // nothing much is changing anymore\n                                                break;\n                                        }\n                                        res = this.update_res(totres, assignments);\n                                        scores = assignments.map((a, k) => this.score(coef[k], wishcap, a, start[k], goal[k]));\n                                }\n                        }\n                });\n                res = this.update_res(totres, assignments);\n                scores = assignments.map((a, k) => this.score(coef[k], wishcap, a, start[k], goal[k]));\n                return [assignments, res, scores];\n        }\n\n        save_res(assignments, res, scores, resource_priority, wishcap, exponent, l, totres, coef, start, goal, saveidx, spendidx, minimal) {\n                const save = resource_priority[saveidx];\n                const spend = spendidx > -1\n                        ? spendidx\n                        : resource_priority[getRandomInt(0, saveidx)];\n                let w1 = getRandomInt(minimal, l);\n                while (goal[w1] === 0) {\n                        w1 = getRandomInt(minimal, l);\n                }\n                let w2 = w1;\n                while (w1 === w2 || goal[w2] === 0) {\n                        w2 = getRandomInt(minimal, l);\n                };\n                if (assignments[w1][save] <= this.BASE[save] && assignments[w2][save] <= this.BASE[save]) {\n                        return [assignments, res, scores];\n                }\n                scores = assignments.map((a, k) => this.score(coef[k], wishcap, a, start[k], goal[k]));\n                if (assignments[w1][spend] > assignments[w2][spend]) {\n                        let tmp = w1;\n                        w1 = w2;\n                        w2 = tmp;\n                };\n                if (res[spend] > 0) {\n                        [w1, w2].forEach(w => {\n                                if (res[spend] > 0 && assignments[w][save] > 1) {\n                                        const tmp = [...assignments[w]];\n                                        assignments[w][spend] = Math.ceil(tmp[spend] + res[spend]);\n                                        if (tmp[spend] / assignments[w][spend] >= 1) {\n                                                console.log('error in wish assignment')\n                                        }\n                                        assignments[w][save] *= tmp[spend] / assignments[w][spend];\n                                        assignments[w][save] = Math.ceil(assignments[w][save]);\n                                        res = this.update_res(totres, assignments);\n                                }\n                        });\n                }\n                const M1 = assignments[w1][spend];\n                const M2 = assignments[w2][spend];\n                const R1 = assignments[w1][save];\n                const R2 = assignments[w2][save];\n                const m = M2 / M1;\n                const r = R2 / R1;\n                if (m * r === 1) {\n                        return [assignments, res, scores];\n                }\n                const d = (m * r * (m + 1) ** 2) ** 0.5;\n                const x1 = (m + 1 + d) / (1 - m * r);\n                const x2 = (m + 1 - d) / (1 - m * r);\n                let x;\n                if (x1 < 0 && x2 < 0) {\n                        console.log('Wish error: both negative.');\n                        return [assignments, res, scores];;\n                }\n                if (x1 < 0) {\n                        x = x2;\n                } else if (x2 < 0) {\n                        x = x1;\n                } else {\n                        x = x1 < x2\n                                ? x1\n                                : x2;\n                }\n                if (x * M1 > M2 + M1 && x * M1 > M2 + M1 + res[spend]) {\n                        console.log('Wish warning: too many resources requested.')\n                        return [assignments, res, scores];\n                }\n                assignments[w1][spend] = Math.max(this.BASE[spend], Math.ceil(x * M1));\n                assignments[w2][spend] = Math.max(this.BASE[spend], Math.ceil(M2 + M1 - assignments[w1][spend]));\n                assignments[w1][save] = Math.max(this.BASE[save], Math.ceil(M1 * R1 / assignments[w1][spend]));\n                assignments[w2][save] = Math.max(this.BASE[save], Math.ceil(M2 * R2 / assignments[w2][spend]));\n                let newr = assignments[w1][save] + assignments[w2][save];\n                let oldr = R1 + R2;\n                if (oldr - newr < this.BASE[save]) {\n                        //oops\n                        assignments[w1][spend] = M1;\n                        assignments[w2][spend] = M2;\n                        assignments[w1][save] = R1;\n                        assignments[w2][save] = R2;\n                }\n                res = this.update_res(totres, assignments);\n                scores = assignments.map((a, k) => this.score(coef[k], wishcap, a, start[k], goal[k]));\n                return [assignments, res, scores];\n        }\n\n        optimize() {\n                let global_start_time = Date.now();\n                const resource_priority = resource_priorities[this.wishstats.rp_idx];\n                const costs = this.wishstats.wishes.map(wish => Wishes[wish.wishidx][1] * wish.goal);\n                const wishcap = this.wishstats.wishcap/* minutes */ * 60 * 50;\n                const mintottime = Math.max(...this.wishstats.wishes.map(wish => wish.goal - wish.start)) * wishcap;\n                const powproduct = (this.wishstats.epow * this.wishstats.mpow * this.wishstats.rpow) ** .17;\n                const capproduct = (this.wishstats.ecap * this.wishstats.mcap * this.wishstats.rcap) ** .17;\n                const capreqs = costs.map((cost, k) => [\n                        cost / this.wishstats.wishspeed / powproduct,\n                        this.wishstats.wishes[k].start,\n                        this.wishstats.wishes[k].goal\n                ]).sort((a, b) => a[0] - b[0]);\n                const totres = [\n                        Number(this.wishstats.ecap),\n                        Number(this.wishstats.mcap),\n                        Number(this.wishstats.rcap)\n                ];\n                let res = [...totres];\n                const coef = capreqs.map(c => c[0]);\n                const start = capreqs.map(c => c[1]);\n                const goal = capreqs.map(c => c[2]);\n                const exponent = 0.17;\n\n                let assignments = coef.map((_, i) => this.base(res));\n                this.BASE = this.base(res);\n                res = this.update_res(totres, assignments);\n                const l = coef.length;\n                let scores = coef.map((_, i) => this.score(coef[i], wishcap, assignments[i], start[i], goal[i]));\n                let minimal = 0;\n                while (minimal < scores.length && scores[minimal] <= mintottime) {\n                        minimal++;\n                }\n                res = res.map(x => Math.max(0, x));\n                if (powproduct === 1 && capproduct === 1) {\n                        // quit early\n                        return [scores, assignments, res, scores];\n                };\n\n                // optimize\n                [assignments, res, scores] = this.spread_res(assignments, res, scores, resource_priority, wishcap, exponent, l, totres, coef, start, goal, minimal);\n                if (goal.filter(x => x > 0).length - minimal > 1) {\n                        const runs = 1000;\n                        for (let i = 0; i < runs; i++) {\n                                let save = res[1] <= 0\n                                        ? getRandomInt(1, 3)\n                                        : 1;\n                                [assignments, res, scores] = this.save_res(assignments, res, scores, resource_priority, wishcap, exponent, l, totres, coef, start, goal, save, -1, minimal);\n                                let max = Math.floor(Math.max(...scores));\n                                for (let k = minimal; k < coef.length; k++) {\n                                        if (coef[k] === 0) {\n                                                continue;\n                                        }\n                                        for (let j = 2; j > -1; j--) {\n                                                let spend = resource_priority[j];\n                                                let s = this.score(coef[k], wishcap, assignments[k], start[k], goal[k]);\n                                                const a = assignments[k][spend];\n                                                if (Math.ceil(s) < max) {\n                                                        assignments[k][spend] = Math.ceil(assignments[k][spend] * (max / s) ** (-1 / exponent));\n                                                        s = Math.ceil(this.score(coef[k], wishcap, assignments[k], start[k], goal[k]));\n                                                        while (s > max) {\n                                                                assignments[k][spend] = Math.max(Math.ceil((assignments[k][spend] + a) / 2 + a / 1000), a);\n                                                                s = Math.ceil(this.score(coef[k], wishcap, assignments[k], start[k], goal[k]));\n                                                        }\n                                                        res = this.update_res(totres, assignments);\n                                                }\n                                        }\n                                };\n                                if (Math.floor(Math.max(...scores)) === mintottime) {\n                                        for (let k = minimal; k < coef.length; k++) {\n                                                if (coef[k] === 0) {\n                                                        continue;\n                                                }\n                                                if (scores[k] < mintottime) {\n                                                        continue;\n                                                }\n                                                for (let j = 2; j > -1; j--) {\n                                                        let spend = resource_priority[j];\n                                                        let s = this.score(coef[k], wishcap, assignments[k], start[k], goal[k]);\n                                                        const a = assignments[k][spend];\n                                                        let b = a;\n                                                        while (s === mintottime) {\n                                                                b /= 1.1;\n                                                                if (b <= 1) {\n                                                                        b = 1;\n                                                                        break;\n                                                                }\n                                                                assignments[k][spend] = Math.max(this.BASE[spend], Math.floor(b));\n                                                                s = this.score(coef[k], wishcap, assignments[k], start[k], goal[k]);\n                                                        }\n                                                        b = Math.floor(b);\n                                                        if (b === 1 && s === mintottime) {\n                                                                break;\n                                                        }\n                                                        while (s > mintottime) {\n                                                                b *= 1.05;\n                                                                if (b >= a) {\n                                                                        b = a;\n                                                                        break;\n                                                                }\n                                                                assignments[k][spend] = Math.max(this.BASE[spend], Math.ceil(b));\n                                                                s = this.score(coef[k], wishcap, assignments[k], start[k], goal[k]);\n                                                        }\n                                                        res = this.update_res(totres, assignments);\n                                                }\n                                        }\n                                }\n                                res = this.update_res(totres, assignments);\n                                scores = assignments.map((a, k) => this.score(coef[k], wishcap, a, start[k], goal[k]));\n                                if (Math.floor(Math.max(...scores)) > mintottime + 100) {\n                                        [assignments, res, scores] = this.spread_res(assignments, res, scores, resource_priority, wishcap, exponent, l, totres, coef, start, goal, minimal);\n                                }\n                        }\n                }\n\n                scores = assignments.map((a, k) => this.score(coef[k], wishcap, a, start[k], goal[k]));\n                let true_scores = assignments.map((a, k) => this.score_true(coef[k], wishcap, a, start[k], goal[k]));\n\n                //unsort the assigned values\n                const idxs = coef.map((_, i) => i).sort((a, b) => costs[a] - costs[b]);\n                let tmp_assignments = Array(l);\n                let tmp_scores = Array(l);\n                let tmp_true_scores = Array(l);\n                for (let i = 0; i < l; i++) {\n                        tmp_assignments[idxs[i]] = assignments[i];\n                        tmp_scores[idxs[i]] = scores[i];\n                        tmp_true_scores[idxs[i]] = true_scores[i];\n                }\n                assignments = tmp_assignments;\n                scores = tmp_scores;\n                true_scores = tmp_true_scores;\n\n                res = res.map(x => Math.max(0, x));\n                console.log(Date.now() - global_start_time + ' ms');\n                return [scores, assignments, res, true_scores];\n        }\n\n        actualtime(time) {\n                if (time > 10 ** 8) {\n                        return Infinity;\n                }\n                let progress = Math.fround(0);\n                let ticks = 0;\n                const ppt = Math.fround(Math.fround(1) / Math.fround(time));\n                const target = Math.fround(1);\n                while (progress < target) {\n                        const next = Math.fround(progress + ppt);\n                        if (next === progress) {\n                                console.log('early exit at ', progress * 100, '%');\n                                return Infinity;\n                        }\n                        progress = next;\n                        ticks += 1;\n                }\n                return ticks;\n        }\n}\n","import {LOCALSTORAGE_NAME} from '../constants';\nimport {ITEMLIST} from '../assets/Items'\nimport {\n        ItemContainer,\n        ItemNameContainer,\n        Slot,\n        EmptySlot,\n        update_level,\n        SetName,\n        Factors,\n        Hacks,\n        NGUs\n} from '../assets/ItemAux'\n\nimport {AUGMENT, AUGMENT_SETTINGS} from '../actions/Augment';\nimport {HACK} from '../actions/Hack';\nimport {WISH} from '../actions/Wish';\nimport {SETTINGS, TITAN} from '../actions/Settings';\nimport {CREMENT} from '../actions/Crement'\nimport {DISABLE_ITEM} from '../actions/DisableItem';\nimport {TOGGLE_EDIT} from '../actions/ToggleEdit';\nimport {EDIT_ITEM} from '../actions/EditItem';\nimport {EDIT_FACTOR} from '../actions/EditFactor';\nimport {EQUIP_ITEM} from '../actions/EquipItem';\nimport {HIDE_ZONE} from '../actions/HideZone';\nimport {LOCK_ITEM} from '../actions/LockItem'\nimport {OPTIMIZE_GEAR} from '../actions/OptimizeGear';\nimport {OPTIMIZE_SAVES} from '../actions/OptimizeSaves';\nimport {OPTIMIZING_GEAR} from '../actions/OptimizingGear';\nimport {TERMINATE} from '../actions/Terminate'\nimport {UNDO} from '../actions/Undo'\nimport {UNEQUIP_ITEM} from '../actions/UnequipItem';\nimport {DELETE_SLOT} from '../actions/DeleteSlot'\nimport {LOAD_SLOT, LOAD_FACTORS} from '../actions/LoadSlot'\nimport {SAVE_SLOT, SAVE_NAME} from '../actions/SaveSlot'\nimport {TOGGLE_SAVED, TOGGLE_UNUSED} from '../actions/ToggleSaved'\nimport {LOAD_STATE_LOCALSTORAGE} from '../actions/LoadStateLocalStorage';\nimport {SAVE_STATE_LOCALSTORAGE} from '../actions/SaveStateLocalStorage';\n\nlet ITEMS = new ItemContainer(ITEMLIST.map((item, idx) => {\n        return [item.name, item];\n}));\n\nconst accslots = 2;\nconst offhand = 0;\nconst maxZone = 2;\nconst zoneDict = {};\nObject.getOwnPropertyNames(SetName).forEach(x => {\n        zoneDict[SetName[x][1]] = 0 < SetName[x][1] && SetName[x][1] < maxZone;\n});\n\nexport function cleanState(state) {\n        // clean locks\n        Object.getOwnPropertyNames(state.locked).forEach(slot => {\n                state.locked[slot] = state.locked[slot].filter(idx => {\n                        if (idx >= state.equip[slot].length) {\n                                return false;\n                        }\n                        return !state.itemdata[state.equip[slot][idx]].empty;\n                });\n        });\n        // clean maxslots\n        state.maxslots = state.maxslots.map((val, idx) => {\n                if (val > state.equip.accessory.length && val !== Infinity) {\n                        return state.equip.accessory.length;\n                }\n                if (val === null) {\n                        return Infinity;\n                }\n                return val;\n        })\n        // clean offhand\n        let offhand = state.offhand;\n        if (offhand === 0 && state.equip.weapon.length > 1) {\n                state.equip.weapon = [state.equip.weapon[0]];\n        } else if (offhand > 0 && state.equip.weapon.length < 2) {\n                state.equip.weapon = [\n                        state.equip.weapon[0],\n                        new EmptySlot(Slot['WEAPON']).name\n                ];\n        }\n        // return cleaned state\n        return state;\n}\n\nconst INITIAL_STATE = {\n        itemdata: ITEMS,\n        items: ITEMS.names,\n        offhand: offhand,\n        equip: ItemNameContainer(accslots, offhand),\n        locked: {},\n        lastequip: ItemNameContainer(accslots, offhand),\n        savedequip: [ItemNameContainer(accslots, offhand)],\n        savedidx: 0,\n        maxsavedidx: 0,\n        showsaved: false,\n        showunused: false,\n        factors: [\n                'RESPAWN', 'DAYCARE_SPEED', 'HACK', 'NGUS', 'NONE'\n        ],\n        maxslots: [\n                3, 1, 6, accslots, accslots\n        ],\n        editItem: [\n                false, undefined, undefined, undefined\n        ],\n        running: false,\n        zone: maxZone,\n        looty: 0,\n        pendant: 0,\n        titanversion: 1,\n        hidden: zoneDict,\n        augstats: {\n                lsc: 20,\n                nac: 25,\n                time: 1440,\n                augspeed: 1,\n                ecap: 1,\n                gps: 0,\n                gold: 0,\n                augs: [\n                        {\n                                ratio: 1 / 2\n                        }, {\n                                ratio: 1.1 / 2\n                        }, {\n                                ratio: 1.2 / 2\n                        }, {\n                                ratio: 1.3 / 2\n                        }, {\n                                ratio: 1.4 / 2\n                        }, {\n                                ratio: 1.5 / 2\n                        }, {\n                                ratio: 1.6 / 2\n                        }\n                ],\n                version: 0\n        },\n        wishstats: {\n                epow: 1,\n                ecap: 1,\n                mpow: 1,\n                mcap: 1,\n                rpow: 1,\n                rcap: 1,\n                wishspeed: 1,\n                wishcap: 4 * 60,\n                wishtime: 4 * 60,\n                wishidx: 0,\n                start: 0,\n                goal: 1,\n                wishes: [\n                        {\n                                wishidx: 0,\n                                start: 0,\n                                goal: 1\n                        }, {\n                                wishidx: 1,\n                                start: 0,\n                                goal: 1\n                        }, {\n                                wishidx: 2,\n                                start: 0,\n                                goal: 1\n                        }, {\n                                wishidx: 3,\n                                start: 0,\n                                goal: 1\n                        }\n                ],\n                rp_idx: 0,\n                trueTime: false\n        },\n        hackstats: {\n                rbeta: 0,\n                rdelta: 0,\n                rpow: 1,\n                rcap: 1,\n                hackspeed: 1,\n                hacktime: 24 * 60,\n                hackoption: '0',\n                hacks: Hacks.map((hack, hackidx) => {\n                        return {level: 0, reducer: 0, goal: 1, hackidx: hackidx};\n                })\n        },\n        cubestats: {\n                tier: 0,\n                power: 0,\n                toughness: 0\n        },\n        basestats: {\n                power: 0,\n                toughness: 0\n        },\n        capstats: {\n                'Energy Cap Cap': 9e18,\n                'Energy Cap Gear': 0,\n                'Energy Cap Total': 1,\n                'Magic Cap Cap': 9e18,\n                'Magic Cap Gear': 0,\n                'Magic Cap Total': 1\n        },\n        ngustats: {\n                nguoption: 0,\n                energy: {\n                        ngus: NGUs.energy.map(x => {\n                                return {normal: 0, evil: 0, sadistic: 0};\n                        }),\n                        cap: 1,\n                        nguspeed: 1\n                },\n                magic: {\n                        ngus: NGUs.magic.map(x => {\n                                return {normal: 0, evil: 0, sadistic: 0};\n                        }),\n                        cap: 1,\n                        nguspeed: 1\n                },\n                ngutime: 1440,\n                quirk: {\n                        e2n: false,\n                        s2e: false\n                }\n        },\n        version: '1.4.0'\n};\n\nconst ItemsReducer = (state = INITIAL_STATE, action) => {\n        switch (action.type) {\n                case AUGMENT:\n                        {\n                                if (!state.running) {\n                                        return state;\n                                }\n                                console.log('worker finished')\n                                return {\n                                        ...state,\n                                        augment: {\n                                                ...state.augment,\n                                                vals: action.payload.vals\n                                        },\n                                        running: false\n                                };\n                        }\n\n                case AUGMENT_SETTINGS:\n                        {\n                                let lsc = Number(action.payload.lsc);\n                                let time = Number(action.payload.time);\n                                if (isNaN(lsc)) {\n                                        lsc = 20;\n                                }\n                                if (isNaN(time)) {\n                                        time = 1440;\n                                }\n                                return {\n                                        ...state,\n                                        augment: {\n                                                ...state.augment,\n                                                lsc: lsc,\n                                                time: time\n                                        }\n                                };\n                        }\n\n                case HACK:\n                        {\n                                if (!state.running) {\n                                        return state;\n                                }\n                                console.log('worker finished')\n                                return {\n                                        ...state,\n                                        running: false\n                                };\n                        }\n\n                case WISH:\n                        {\n                                if (!state.running) {\n                                        return state;\n                                }\n                                console.log('worker finished')\n                                return {\n                                        ...state,\n                                        running: false\n                                };\n                        }\n\n                case SETTINGS:\n                        {\n                                return {\n                                        ...state,\n                                        [action.payload.statname]: {\n                                                ...action.payload.stats\n                                        }\n                                };\n                        }\n\n                case CREMENT:\n                        {\n                                if (action.payload.val < 0 && action.payload.min === state[action.payload.name]) {\n                                        return state;\n                                }\n                                if (action.payload.val > 0 && action.payload.max === state[action.payload.name]) {\n                                        return state;\n                                }\n                                if (action.payload.name === 'wishslots') {\n                                        let wishes = [...state.wishstats.wishes];\n                                        if (action.payload.val === -1) {\n                                                if (wishes.length === 1) {\n                                                        return state;\n                                                }\n                                                wishes.pop();\n                                        } else if (action.payload.val === 1) {\n                                                wishes.push({wishidx: 0, start: 0, goal: 1});\n                                        }\n                                        return {\n                                                ...state,\n                                                wishstats: {\n                                                        ...state.wishstats,\n                                                        wishes: wishes\n                                                }\n                                        };\n                                }\n                                if (action.payload.name === 'accslots') {\n                                        let accessory;\n                                        if (action.payload.val === -1) {\n                                                accessory = state.equip.accessory.slice(0, -1);\n                                        } else if (action.payload.val === 1) {\n                                                accessory = state.equip.accessory.concat([new EmptySlot(Slot.ACCESSORY).name]);\n                                        }\n                                        return cleanState({\n                                                ...state,\n                                                equip: {\n                                                        ...state.equip,\n                                                        accessory: accessory\n                                                },\n                                                lastequip: state.equip\n                                        });\n                                }\n                                if (action.payload.name[0] === 'maxslots') {\n                                        return {\n                                                ...state,\n                                                maxslots: state.maxslots.map((val, idx) => {\n                                                        if (idx === action.payload.name[1]) {\n                                                                if (action.payload.val < 0 && val === Infinity) {\n                                                                        return action.payload.max;\n                                                                }\n                                                                val += action.payload.val;\n                                                                if (val < action.payload.min) {\n                                                                        return action.payload.min;\n                                                                }\n                                                                if (val > action.payload.max) {\n                                                                        return Infinity;\n                                                                }\n                                                        }\n                                                        return val;\n                                                })\n                                        }\n                                }\n                                return cleanState({\n                                        ...state,\n                                        [action.payload.name]: state[action.payload.name] + action.payload.val\n                                });\n                        }\n\n                case DISABLE_ITEM:\n                        {\n                                const name = action.payload.name;\n                                const item = state.itemdata[name];\n                                return {\n                                        ...state,\n                                        itemdata: {\n                                                ...state.itemdata,\n                                                [name]: {\n                                                        ...item,\n                                                        disable: !item.disable\n                                                }\n                                        }\n                                };\n                        }\n\n                case TOGGLE_EDIT:\n                        {\n                                const name = action.payload.name;\n                                const item = state.itemdata[name];\n                                return {\n                                        ...state,\n                                        editItem: [\n                                                action.payload.on, name, item === undefined\n                                                        ? undefined\n                                                        : item.level,\n                                                action.payload.lockable\n                                        ]\n                                };\n                        }\n\n                case EDIT_ITEM:\n                        {\n                                if (isNaN(action.payload.val)) {\n                                        return state;\n                                }\n                                if (0 > action.payload.val || action.payload.val > 100) {\n                                        return state;\n                                }\n                                let item = state.itemdata[state.editItem[1]];\n                                update_level(item, action.payload.val);\n                                return {\n                                        ...state,\n                                        editItem: {\n                                                ...state.editItem,\n                                                2: action.payload.val\n                                        },\n                                        itemdata: {\n                                                ...state.itemdata,\n                                                [item.name]: item\n                                        }\n                                }\n                        }\n\n                case LOCK_ITEM:\n                        {\n                                const lock = action.payload.lock;\n                                const slot = action.payload.slot;\n                                const idx = action.payload.idx;\n                                let tmp = state.locked[slot];\n                                if (tmp === undefined) {\n                                        tmp = [];\n                                }\n                                if (lock) {\n                                        if (!tmp.includes(idx)) {\n                                                tmp.push(idx);\n                                        }\n                                } else {\n                                        tmp = tmp.filter(i => i !== idx);\n                                }\n                                return {\n                                        ...state,\n                                        locked: {\n                                                ...state.locked,\n                                                [slot]: tmp\n                                        }\n                                };\n                        }\n\n                case EDIT_FACTOR:\n                        {\n                                let factors = [];\n                                let maxslots = [];\n                                if (action.payload.name === 'INSERT') {\n                                        state.factors.forEach((item, idx) => {\n                                                if (idx === action.payload.idx) {\n                                                        factors.push('NONE');\n                                                        maxslots.push(state.equip.accessory.length);\n                                                }\n                                                factors.push(item);\n                                                maxslots.push(state.maxslots[idx]);\n                                        });\n                                } else {\n                                        factors = state.factors.map((item, idx) => {\n                                                if (idx === action.payload.idx) {\n                                                        return action.payload.name;\n                                                }\n                                                return item;\n                                        });\n                                        maxslots = state.maxslots;\n                                }\n                                // clean factors\n                                let tmpFactors = [];\n                                let tmpMaxslots = [];\n                                for (let i = 0; i < factors.length; i++) {\n                                        if (factors[i] !== 'DELETE') {\n                                                tmpFactors.push(factors[i]);\n                                                tmpMaxslots.push(maxslots[i]);\n                                        }\n                                }\n                                let i = tmpFactors.length - 1;\n                                while (tmpFactors.length > 1 && tmpFactors[i - 1] === 'NONE' && tmpFactors[i] === 'NONE') {\n                                        tmpFactors.pop();\n                                        tmpMaxslots.pop();\n                                        i--;\n                                }\n                                if (tmpFactors[tmpFactors.length - 1] !== 'NONE') {\n                                        tmpFactors.push('NONE');\n                                        tmpMaxslots.push(state.equip.accessory.length);\n                                }\n                                return {\n                                        ...state,\n                                        factors: tmpFactors,\n                                        maxslots: tmpMaxslots\n                                };\n                        }\n\n                case EQUIP_ITEM:\n                        {\n                                const name = action.payload.name;\n                                const slot = state.itemdata[name].slot[0];\n                                const count = state.equip[slot].length;\n                                let sel = count - 1;\n                                for (let idx = 0; idx < count; idx++) {\n                                        if (state.itemdata[state.equip[slot][idx]].empty) {\n                                                if (sel > idx) {\n                                                        sel = idx;\n                                                }\n                                        }\n                                        if (state.equip[slot][idx] === name) {\n                                                return state;\n                                        }\n                                }\n                                return {\n                                        ...state,\n                                        equip: {\n                                                ...state.equip,\n                                                [slot]: state.equip[slot].map((tmp, idx) => {\n                                                        if (idx === sel) {\n                                                                return name;\n                                                        }\n                                                        return tmp;\n                                                })\n                                        },\n                                        lastequip: state.equip\n                                };\n                        }\n\n                case HIDE_ZONE:\n                        {\n                                return {\n                                        ...state,\n                                        hidden: {\n                                                ...state.hidden,\n                                                [action.payload.idx]: !state.hidden[action.payload.idx]\n                                        }\n                                }\n                        }\n\n                case TITAN:\n                        {\n                                let zone = [\n                                        2, // offset\n                                        8, //GRB\n                                        10, //GCT\n                                        13, //Jake\n                                        16, //UUG\n                                        18, //Walderp\n                                        21, //Beast\n                                        25, //Nerd\n                                        28, //Godmother\n                                        32, //Exile\n                                        36 //It Hungers\n                                ][action.payload.titan];\n                                let zoneDict = {};\n                                Object.getOwnPropertyNames(SetName).forEach(x => {\n                                        zoneDict[SetName[x][1]] = 0 < SetName[x][1] && SetName[x][1] < zone;\n                                });\n                                let accslots = state.equip.accessory;\n                                while (accslots.length < action.payload.accslots) {\n                                        accslots = accslots.concat([new EmptySlot(Slot.ACCESSORY).name]);\n                                }\n                                while (accslots.length > action.payload.accslots) {\n                                        accslots = accslots.slice(0, -1);\n                                }\n                                return cleanState({\n                                        ...state,\n                                        zone: zone,\n                                        looty: action.payload.looty,\n                                        pendant: action.payload.pendant,\n                                        equip: {\n                                                ...state.equip,\n                                                accessory: accslots\n                                        },\n                                        hidden: zoneDict\n                                });\n                        }\n\n                case UNDO:\n                        {\n                                return cleanState({\n                                        ...state,\n                                        equip: state.lastequip,\n                                        lastequip: state.equip\n                                });\n                        }\n\n                case UNEQUIP_ITEM:\n                        {\n                                const name = action.payload.name;\n                                if (state.itemdata[name].empty) {\n                                        return state;\n                                }\n                                const item = state.itemdata[name];\n                                const slot = item.slot[0];\n                                let sel = 0;\n                                for (;; sel++) {\n                                        if (state.equip[slot][sel] === name) {\n                                                break;\n                                        }\n                                }\n                                return cleanState({\n                                        ...state,\n                                        equip: {\n                                                ...state.equip,\n                                                [slot]: state.equip[slot].map((tmp, idx) => {\n                                                        if (idx === sel) {\n                                                                return new EmptySlot(item.slot).name;\n                                                        }\n                                                        return tmp;\n                                                })\n                                        },\n                                        lastequip: state.equip\n                                });\n                        }\n\n                case OPTIMIZE_GEAR:\n                        {\n                                if (!state.running) {\n                                        return state;\n                                }\n                                console.log('worker finished')\n                                const equip = action.payload.equip;\n                                return cleanState({\n                                        ...state,\n                                        equip: equip,\n                                        lastequip: state.equip,\n                                        running: false\n                                });\n                        }\n\n                case OPTIMIZE_SAVES:\n                        {\n                                if (!state.running) {\n                                        return state;\n                                }\n                                console.log('worker finished')\n                                const savedequip = action.payload.savedequip;\n                                const savedidx = action.payload.savedidx;\n                                return cleanState({\n                                        ...state,\n                                        savedequip: savedequip,\n                                        savedidx: savedidx,\n                                        running: false\n                                });\n                        }\n\n                case OPTIMIZING_GEAR:\n                        {\n                                if (state.running) {\n                                        return state;\n                                }\n                                console.log('worker running');\n                                return {\n                                        ...state,\n                                        running: true\n                                };\n                        }\n\n                case TERMINATE:\n                        {\n                                console.log('terminated worker');\n                                return {\n                                        ...state,\n                                        running: false\n                                }\n                        }\n\n                case SAVE_NAME:\n                        {\n                                return {\n                                        ...state,\n                                        savedequip: state.savedequip.map((tmp, idx) => {\n                                                if (idx === state.savedidx) {\n                                                        return {\n                                                                ...tmp,\n                                                                name: action.payload.name\n                                                        };\n                                                }\n                                                return tmp;\n                                        })\n                                }\n                        }\n\n                case SAVE_SLOT:\n                        {\n                                let locked = {};\n                                Object.getOwnPropertyNames(state.locked).forEach(slot => {\n                                        locked[slot] = state.locked[slot].map(idx => state.equip[slot][idx]);\n                                });\n                                if (state.savedidx === state.maxsavedidx) {\n                                        return {\n                                                ...state,\n                                                savedequip: state.savedequip.map((tmp, idx) => {\n                                                        if (idx === state.savedidx) {\n                                                                return {\n                                                                        ...state.equip,\n                                                                        locked: locked,\n                                                                        factors: state.factors,\n                                                                        maxslots: state.maxslots,\n                                                                        name: tmp.name\n                                                                };\n                                                        }\n                                                        return tmp;\n                                                }).concat([\n                                                        {\n                                                                ...ItemNameContainer(state.equip.accessory.length, state.offhand),\n                                                                locked: undefined,\n                                                                factors: undefined,\n                                                                maxslots: undefined,\n                                                                name: undefined\n                                                        }\n                                                ]),\n                                                maxsavedidx: state.maxsavedidx + 1\n                                        }\n                                }\n                                return {\n                                        ...state,\n                                        savedequip: state.savedequip.map((tmp, idx) => {\n                                                if (idx === state.savedidx) {\n                                                        return {\n                                                                ...state.equip,\n                                                                locked: locked,\n                                                                factors: state.factors,\n                                                                maxslots: state.maxslots,\n                                                                name: tmp.name\n                                                        };\n                                                }\n                                                return tmp;\n                                        })\n                                }\n                        }\n\n                case LOAD_SLOT:\n                        {\n                                const save = state.savedequip[state.savedidx];\n                                return cleanState({\n                                        ...state,\n                                        equip: {\n                                                ...save\n                                        }\n                                });\n                        }\n\n                case LOAD_FACTORS:\n                        {\n                                const save = state.savedequip[state.savedidx];\n                                const hasNoFactors = save.factors === undefined && save.maxslots === undefined;\n                                let equip = {\n                                        ...ItemNameContainer(state.equip.accessory.length, state.offhand)\n                                };\n                                let locked = {};\n                                if (save.locked === undefined) {\n                                        save.locked = {};\n                                }\n                                Object.getOwnPropertyNames(save.locked).forEach(slot => {\n                                        equip[slot] = save.locked[slot].concat(equip[slot].slice(save.locked[slot].length));\n                                        locked[slot] = save.locked[slot].map((_, idx) => idx);\n                                });\n                                return cleanState({\n                                        ...state,\n                                        equip: equip,\n                                        locked: locked,\n                                        factors: hasNoFactors\n                                                ? state.factors\n                                                : save.factors,\n                                        maxslots: hasNoFactors\n                                                ? state.maxslots\n                                                : save.maxslots\n                                });\n                        }\n\n                case DELETE_SLOT:\n                        {\n                                if (state.savedidx === state.savedequip.length - 1) {\n                                        // do not delete the last slot\n                                        return state;\n                                }\n                                return {\n                                        ...state,\n                                        savedequip: state.savedequip.map((equip, idx) => {\n                                                if (idx === state.maxsavedidx) {\n                                                        return undefined;\n                                                }\n                                                if (idx >= state.savedidx) {\n                                                        return state.savedequip[idx + 1];\n                                                }\n                                                return equip;\n                                        }).filter(x => x !== undefined),\n                                        savedidx: state.savedidx - (\n                                                state.savedidx === state.maxsavedidx\n                                                ? 1\n                                                : 0),\n                                        maxsavedidx: state.maxsavedidx - 1\n                                }\n                        }\n\n                case TOGGLE_SAVED:\n                        {\n                                return {\n                                        ...state,\n                                        showsaved: !state.showsaved\n                                };\n                        }\n\n                case TOGGLE_UNUSED:\n                        {\n                                return {\n                                        ...state,\n                                        showunused: !state.showunused\n                                };\n                        }\n\n                case SAVE_STATE_LOCALSTORAGE:\n                        {\n                                if (document.cookie.includes('accepts-cookies=true')) {\n                                        window.localStorage.setItem(LOCALSTORAGE_NAME, JSON.stringify(action.payload.state));\n                                }\n                                return state;\n                        }\n\n                case LOAD_STATE_LOCALSTORAGE:\n                        {\n                                const lc = window.localStorage.getItem(LOCALSTORAGE_NAME);\n                                let localStorageState = JSON.parse(lc);\n                                if (!Boolean(localStorageState)) {\n                                        console.log('No local storage found. Loading fresh v' + state.version + ' state.');\n                                        return state;\n                                }\n                                if (!Boolean(localStorageState.version)) {\n                                        console.log('No valid version information found. Loading fresh v' + state.version + ' state.');\n                                        return state;\n                                }\n                                // TODO: Validate local storage state.\n                                if (localStorageState.version === '1.0.0') {\n                                        console.log('Saved local storage is v' + localStorageState.version + ', incompatible with current version. Loading fresh v' + state.version + ' state.');\n                                        return state;\n                                }\n                                console.log('Loading saved v' + state.version + ' state.');\n                                // update item store with changed levels and disabled items\n                                for (let idx = 0; idx < localStorageState.items.length; idx++) {\n                                        const name = localStorageState.items[idx];\n                                        const saveditem = localStorageState.itemdata[name];\n                                        let item = state.itemdata[name];\n                                        if (item === undefined) {\n                                                // item was renamed or removed\n                                                console.log('Item ' + name + ' was renamed or removed, this may result in changes in saved or equipped loadouts.')\n                                                const slot = saveditem.slot[0];\n                                                localStorageState.equip[slot] = localStorageState.equip[slot].map(tmp => {\n                                                        if (tmp === name) {\n                                                                return new EmptySlot(saveditem.slot).name;\n                                                        }\n                                                        return tmp;\n                                                });\n                                                localStorageState.savedequip = localStorageState.savedequip.map(save => {\n                                                        save[slot] = save[slot].map(tmp => {\n                                                                if (tmp === name) {\n                                                                        return new EmptySlot(saveditem.slot).name;\n                                                                }\n                                                                return tmp;\n                                                        });\n                                                        return save;\n                                                })\n                                                continue;\n                                        }\n                                        if (saveditem.empty) {\n                                                continue;\n                                        }\n                                        item.disable = saveditem.disable;\n                                        update_level(item, saveditem.level);\n                                }\n                                Object.getOwnPropertyNames(state).forEach(name => {\n                                        if (name === 'version') {\n                                                return;\n                                        }\n                                        if (localStorageState[name] === undefined) {\n                                                localStorageState[name] = state[name];\n                                                console.log('Keeping default ' + name + ': ' + state[name]);\n                                        }\n                                });\n                                if (localStorageState.version === '1.1.0') {\n                                        // update to 1.2.0\n                                        console.log('Updating local storage for wishes, some wish data might be erased.');\n                                        Object.getOwnPropertyNames(state.wishstats).forEach(name => {\n                                                if (localStorageState.wishstats[name] === undefined) {\n                                                        localStorageState.wishstats[name] = state.wishstats[name];\n                                                        console.log('Keeping default wishstats ' + name + ': ' + state.wishstats[name]);\n                                                }\n                                        });\n                                        Object.getOwnPropertyNames(localStorageState.wishstats).forEach(name => {\n                                                if (state.wishstats[name] === undefined) {\n                                                        console.log('Removing saved wishstats ' + name + ': ' + localStorageState.wishstats[name]);\n                                                        delete localStorageState.wishstats[name];\n                                                }\n                                        });\n                                        localStorageState.wishstats.wishes = localStorageState.wishstats.wishes.map(wish => {\n                                                if (wish.start === undefined) {\n                                                        wish.start = 0;\n                                                }\n                                                return wish;\n                                        });\n                                        console.log('Wish data:', localStorageState.wishstats);\n                                }\n                                if (localStorageState.version === '1.3.0') {\n                                        localStorageState.equip = {\n                                                ...localStorageState.equip,\n                                                other: ['Infinity Cube', 'Base Stats']\n                                        };\n                                        localStorageState.savedequip = localStorageState.savedequip.map(x => {\n                                                return {\n                                                        ...x,\n                                                        other: ['Infinity Cube', 'Base Stats']\n                                                }\n                                        });\n                                }\n                                while (localStorageState.hackstats.hacks.length < Hacks.length) {\n                                        localStorageState.hackstats.hacks = [\n                                                ...localStorageState.hackstats.hacks, {\n                                                        level: 0,\n                                                        reducer: 0,\n                                                        goal: 1,\n                                                        hackidx: localStorageState.hackstats.hacks.length\n                                                }\n                                        ];\n                                }\n                                if (localStorageState.augstats !== undefined && localStorageState.augstats.nac === undefined) {\n                                        localStorageState.augstats.nac = 25;\n                                }\n                                if (localStorageState.wishstats.trueTime === undefined) {\n                                        localStorageState.wishstats.trueTime = false;\n                                }\n                                const tmpFactors = Object.getOwnPropertyNames(Factors);\n                                localStorageState.factors = localStorageState.factors.map(name => {\n                                        if (!tmpFactors.includes(name)) {\n                                                return 'NONE';\n                                        }\n                                        return name;\n                                });\n                                localStorageState.capstats = {\n                                        ...state.capstats,\n                                        ...localStorageState.capstats\n                                }\n                                return cleanState({\n                                        ...state,\n                                        offhand: localStorageState.offhand,\n                                        equip: localStorageState.equip,\n                                        locked: localStorageState.locked,\n                                        savedequip: localStorageState.savedequip,\n                                        savedidx: localStorageState.savedidx,\n                                        maxsavedidx: localStorageState.maxsavedidx,\n                                        showsaved: localStorageState.showsaved,\n                                        factors: localStorageState.factors,\n                                        maxslots: localStorageState.maxslots,\n                                        zone: localStorageState.zone,\n                                        titanversion: localStorageState.titanversion,\n                                        looty: localStorageState.looty,\n                                        pendant: localStorageState.pendant,\n                                        hidden: localStorageState.hidden,\n                                        augstats: localStorageState.augstats,\n                                        basestats: localStorageState.basestats,\n                                        capstats: localStorageState.capstats,\n                                        cubestats: localStorageState.cubestats,\n                                        ngustats: localStorageState.ngustats,\n                                        hackstats: localStorageState.hackstats,\n                                        wishstats: localStorageState.wishstats\n                                });\n                        }\n\n                default:\n                        {\n                                return state;\n                        }\n        }\n};\n\nexport default ItemsReducer;\n","import {ItemNameContainer, Slot} from '../assets/ItemAux'\nimport {Optimizer} from '../Optimizer'\nimport {old2newequip} from '../util'\nimport {Augment} from '../Augment'\nimport {Wish} from '../Wish'\nimport {cleanState} from '../reducers/Items'\n\n// eslint-disable-next-line\nself.addEventListener(\"message\", choose);\n\nfunction choose(e) {\n        if (e.data.command === 'optimize') {\n                optimize.call(this, e);\n        } else if (e.data.command === 'optimizeSaves') {\n                optimizeSaves.call(this, e);\n        } else if (e.data.command === 'augment') {\n                augment.call(this, e);\n        } else if (e.data.command === 'wishes') {\n                augment.call(this, e);\n        } else {\n                console.log('Error: invalid web worker command: ' + e.data.command + '.')\n        }\n}\n\nfunction optimize(e) {\n        let start_time = Date.now();\n        let state = e.data.state;\n        let optimizer = new Optimizer(state);\n        // construct base layout from locks\n        let base_layout = optimizer.construct_base(state.locked, state.equip);\n        // optimize the priorities\n        for (let idx = 0; idx < state.factors.length; idx++) {\n                base_layout = optimizer.compute_optimal(base_layout, idx);\n        }\n        // select random remaining layout\n        base_layout = base_layout[Math.floor(Math.random() * base_layout.length)];\n        let equip = optimizer.sort_locks(state.locked, state.equip, base_layout);\n        this.postMessage({equip: equip});\n        console.log(Math.floor((Date.now() - start_time) / 10) / 100 + ' seconds');\n        this.close();\n}\n\nfunction optimizeSaves(e) {\n        let start_time = Date.now();\n        const savedequip = e.data.state.savedequip.map(save => {\n                if (save.factors === undefined || save.factors.length === 0) {\n                        console.log('quit early')\n                        return save;\n                }\n                let state = {\n                        ...e.data.state\n                };\n                const hasNoFactors = save.factors === undefined && save.maxslots === undefined;\n                let equip = {\n                        ...ItemNameContainer(state.equip.accessory.length, state.offhand)\n                };\n                let locked = {};\n                if (save.locked === undefined) {\n                        save.locked = {};\n                }\n                Object.getOwnPropertyNames(save.locked).forEach(slot => {\n                        equip[slot] = save.locked[slot].concat(equip[slot].slice(save.locked[slot].length));\n                        locked[slot] = save.locked[slot].map((_, idx) => idx);\n                });\n                state = cleanState({\n                        ...state,\n                        equip: equip,\n                        locked: locked,\n                        factors: hasNoFactors\n                                ? state.factors\n                                : save.factors,\n                        maxslots: hasNoFactors\n                                ? state.maxslots\n                                : save.maxslots\n                });\n                let optimizer = new Optimizer(state);\n                // construct base layout from locks\n                let base_layout = optimizer.construct_base(state.locked, state.equip);\n                // optimize the priorities\n                for (let idx = 0; idx < state.factors.length; idx++) {\n                        base_layout = optimizer.compute_optimal(base_layout, idx);\n                }\n                // select random remaining layout\n                base_layout = base_layout[Math.floor(Math.random() * base_layout.length)];\n                return {\n                        ...save,\n                        ...base_layout\n                };\n        });\n        this.postMessage({savedequip: savedequip});\n        console.log(Math.floor((Date.now() - start_time) / 10) / 100 + ' seconds');\n        this.close();\n}\n\nfunction augment(e) {\n        const start_time = Date.now();\n        const state = e.data.state;\n        const augment = new Augment(state.augment.lsc, state.augment.time);\n        let vals = augment.optimize();\n        this.postMessage({vals: vals});\n        console.log(Math.floor((Date.now() - start_time) / 10) / 100 + ' seconds');\n        this.close();\n}\n\nfunction wish(e) {\n        const base = [1]\n        const start_time = Date.now();\n        const state = e.data.state;\n        const wish = new Wish(state.wishstats);\n        let vals = wish.optimize();\n        this.postMessage({vals: vals});\n        console.log(Math.floor((Date.now() - start_time) / 10) / 100 + ' seconds');\n        this.close();\n}\n"],"sourceRoot":""}