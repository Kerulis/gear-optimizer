{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","assets/ItemAux.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","util.js","sagas/optimize.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof2","obj","iterator","constructor","_typeof","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_inherits","subClass","superClass","TypeError","writable","configurable","_classCallCheck","instance","Constructor","Item","slot","zone","level","props","this","statnames","base","disable","length","push","EmptySlot","_Item","_this","undefined","empty","Equip","_Item2","_this2","items","counts","getOwnPropertyNames","Slot","map","x","Stat","POWER","TOUGHNESS","RESPAWN","ItemContainer","names","slotlist","accslots","list","filter","ACCESSORY","jdx","WEAPON","HEAD","CHEST","PANTS","BOOTS","ADVANCE_TRAINING","AP","AUGMENT_SPEED","BEARD_SPEED","COOKING","DAYCARE_SPEED","DROP_CHANCE","ENERGY_BARS","ENERGY_CAP","ENERGY_POWER","ENERGY_SPEED","EXPERIENCE","GOLD_DROP","HACK_SPEED","MAGIC_BARS","MAGIC_CAP","MAGIC_POWER","MAGIC_SPEED","MOVE_COOLDOWN","NGU_SPEED","QUEST_DROP","RES3_BARS","RES3_CAP","RES3_POWER","SEED_DROP","WANDOOS_SPEED","WISH_SPEED","YGGDRASIL_YIELD","Factors","NONE","ENGU","MNGU","HACK","NGUS","NGUSHACK","WANDOOS","SetName","MISC","FOREST_PENDANT","LOOTY","ITOPOD","SAFE","TRAINING","SEWERS","FOREST","CAVE","SKY","HSB","GRB","CLOCK","GCT","TWO_D","SPOOPY","JAKE","GAUDY","MEGA","UUG_RINGS","BEARDVERSE","WANDERER","WANDERER2","BADLY_DRAWN","STEALTH","SLIMY","SLIMY2","SLIMY3","SLIMY4","CHOCO","EDGY","PINK","NERD","NERD2","NERD3","NERD4","META","PARTY","MOBSTER","MOBSTER2","MOBSTER3","MOBSTER4","TYPO","FAD","JRPG","EXILE","EXILE2","EXILE3","EXILE4","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","from","_iterableToArray","_nonIterableSpread","top_scorers","optimal","top_score","score","compute_optimal","item_names","factor","totalslots","maxslots","base_layouts","titanversion","titan","maxtitan","get_max_titan","clone","score_product","item_count","acc_layouts","_loop3","layout","base_layout","options","gear_slot","reduce","a","b","remaining","pareto","layouts","outfits","accs","everything","idx","add_equip","sort","ascore","remove_equip","console","log","capacity","zero_state","add","matrix_weight","start_time","Date","now","w","last","knapsack_combine_single","Math","floor","knapsack","candidate","acc_candidate","kdx","filtered","done","_loop2","tmp","item","_loop","filter_duplicates","optimal_size","scores","pop","equip","stat","cart_aux","_ref","concat","apply","e","cartesian","_len","arguments","_key","stats","add_one","type","equiped","includes","copy","setTime","getTime","len","attr","Error","max_with","pareto_2","all","dominates","major","minor","equal","major_stats","fill","minor_stats","indexOf","cutoff","dominated","j","result","val","newlist","addEventListener","state","data","ItemAux_Equip","factors","factorname","random","ItemAux_ItemContainer","postMessage","close"],"mappings":"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","file":"716227fb7f8c124eea3e.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/gear-optimizer/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export class Item {\n        constructor(name, slot, zone, level, props) {\n                this.name = name;\n                this.slot = slot;\n                this.zone = zone;\n                this.level = level;\n                this.statnames = []\n                this.base = {}\n                this.disable = false;\n                for (let i = 0; i < props.length; i++) {\n                        this.statnames.push(props[i][0]);\n                        this[props[i][0]] = props[i][1];\n                        this.base[props[i][0]] = props[i][1] / 2;\n                }\n        }\n}\n\nexport function update_level(item, level) {\n        for (let stat in item.base) {\n                item[stat] = item.base[stat] * (1 + level / 100);\n        }\n        item.level = level;\n}\n\nexport class EmptySlot extends Item {\n        constructor(slot) {\n                if (slot === undefined) {\n                        super('Empty Slot', slot, undefined, 0, []);\n                } else {\n                        super('Empty ' + slot[0] + ' Slot', slot, undefined, 0, []);\n                }\n                this.empty = true;\n        }\n}\n\nexport class Equip extends Item {\n        constructor() {\n                super('total', undefined, undefined, 100, []);\n                this.items = [];\n                this.counts = {};\n                Object.getOwnPropertyNames(Slot).map((x) => {\n                        this.counts[Slot[x][0]] = 0;\n                        return undefined;\n                });\n                Object.getOwnPropertyNames(Stat).map((x) => {\n                        this[Stat[x]] = 100;\n                        this.statnames.push(Stat[x]);\n                        return undefined;\n                });\n                // correct POWER, TOUGHNESS and RESPAWN since these are additive from 0 instead of 100%\n                this[Stat.POWER] = 0;\n                this[Stat.TOUGHNESS] = 0;\n                this[Stat.RESPAWN] = 0;\n        }\n}\n\nexport class ItemContainer {\n        constructor(items) {\n                this.names = [];\n                for (let i = 0; i < items.length; i++) {\n                        this.names.push(items[i][0]);\n                        this[items[i][0]] = items[i][1];\n                }\n        }\n}\n\nexport const slotlist = (accslots) => {\n        let list = Object.getOwnPropertyNames(Slot).map((x) => ([\n                Slot[x][0] + 0,\n                new EmptySlot(Slot[x])\n        ])).filter((x) => (x[0] !== Slot.ACCESSORY[0] + 0));\n        let slot = Slot.ACCESSORY\n        for (let jdx = 0; jdx < accslots; jdx++) {\n                list.push([\n                        slot[0] + jdx,\n                        new EmptySlot(slot)\n                ]);\n        }\n        return list;\n}\n\nexport const Slot = {\n        WEAPON: [\n                'Weapon', 0\n        ],\n        HEAD: [\n                'Head', 1\n        ],\n        CHEST: [\n                'Armor', 2\n        ],\n        PANTS: [\n                'Pants', 3\n        ],\n        BOOTS: [\n                'Boots', 4\n        ],\n        ACCESSORY: ['Accessory', 5]\n}\n\nexport const Stat = {\n        ADVANCE_TRAINING: 'Advance Training',\n        AP: 'AP',\n        AUGMENT_SPEED: 'Augment Speed',\n        BEARD_SPEED: 'Beard Speed',\n        COOKING: 'Cooking',\n        DAYCARE_SPEED: 'Daycare Speed',\n        DROP_CHANCE: 'Drop Chance',\n        ENERGY_BARS: 'Energy Bars',\n        ENERGY_CAP: 'Energy Cap',\n        ENERGY_POWER: 'Energy Power',\n        ENERGY_SPEED: 'Energy Speed',\n        EXPERIENCE: 'Experience',\n        GOLD_DROP: 'Gold Drops',\n        HACK_SPEED: 'Hack Speed',\n        MAGIC_BARS: 'Magic Bars',\n        MAGIC_CAP: 'Magic Cap',\n        MAGIC_POWER: 'Magic Power',\n        MAGIC_SPEED: 'Magic Speed',\n        MOVE_COOLDOWN: 'Move Cooldown',\n        NGU_SPEED: 'NGU Speed',\n        POWER: 'Power',\n        QUEST_DROP: 'Quest Drops',\n        RES3_BARS: 'Res3 Bars',\n        RES3_CAP: 'Res3 Cap',\n        RES3_POWER: 'Res3 Power',\n        RESPAWN: 'Respawn',\n        SEED_DROP: 'Seed Gain',\n        TOUGHNESS: 'Toughness',\n        WANDOOS_SPEED: 'Wandoos Speed',\n        WISH_SPEED: 'Wish Speed',\n        YGGDRASIL_YIELD: 'Yggdrasil Yield'\n}\n\nexport const Factors = {\n        NONE: [\n                'None', []\n        ],\n        RESPAWN: [\n                'Respawn',\n                [Stat.RESPAWN]\n        ],\n        POWER: [\n                'Power',\n                [Stat.POWER]\n        ],\n        TOUGHNESS: [\n                'Toughness',\n                [Stat.TOUGHNESS]\n        ],\n        DAYCARE_SPEED: [\n                'Daycare',\n                [Stat.DAYCARE_SPEED]\n        ],\n        ENGU: [\n                'Energy NGU',\n                [\n                        Stat.ENERGY_CAP, Stat.ENERGY_POWER, Stat.NGU_SPEED\n                ]\n        ],\n        MNGU: [\n                'Magic NGU',\n                [\n                        Stat.MAGIC_CAP, Stat.MAGIC_POWER, Stat.NGU_SPEED\n                ]\n        ],\n        HACK: [\n                'Hacks',\n                [\n                        Stat.RES3_CAP, Stat.RES3_POWER, Stat.HACK_SPEED\n                ]\n        ],\n        NGUS: [\n                'NGUs',\n                [\n                        Stat.ENERGY_CAP,\n                        Stat.ENERGY_POWER,\n                        Stat.NGU_SPEED,\n                        Stat.MAGIC_CAP,\n                        Stat.MAGIC_POWER,\n                        Stat.NGU_SPEED\n                ]\n        ],\n        NGUSHACK: [\n                'NGUs and Hacks',\n                [\n                        Stat.ENERGY_CAP,\n                        Stat.ENERGY_POWER,\n                        Stat.NGU_SPEED,\n                        Stat.MAGIC_CAP,\n                        Stat.MAGIC_POWER,\n                        Stat.NGU_SPEED,\n                        Stat.RES3_CAP,\n                        Stat.RES3_POWER,\n                        Stat.HACK_SPEED\n                ]\n        ],\n        GOLD_DROP: [\n                'Gold Drops',\n                [Stat.GOLD_DROP]\n        ],\n        DROP_CHANCE: [\n                'Drop chance',\n                [Stat.DROP_CHANCE]\n        ],\n        QUEST_DROP: [\n                'Quest Drop',\n                [Stat.QUEST_DROP]\n        ],\n        WANDOOS: [\n                'Wandoos',\n                [\n                        Stat.ENERGY_CAP, Stat.WANDOOS_SPEED, Stat.MAGIC_CAP, Stat.WANDOOS_SPEED\n                ]\n        ]\n}\n\nexport const SetName = {\n        MISC: [\n                'Miscellaneous', -3\n        ],\n        FOREST_PENDANT: [\n                'Forest Pendant', -2\n        ],\n        LOOTY: [\n                'Looty', -1\n        ],\n        ITOPOD: [\n                'ITOPOD', 0\n        ],\n        SAFE: [\n                'Safe Zone', 1\n        ],\n        TRAINING: [\n                'Tutorial Zone', 2\n        ],\n        SEWERS: [\n                'Sewers', 3\n        ],\n        FOREST: [\n                'Forest', 4\n        ],\n        CAVE: [\n                'Cave of Many Things', 5\n        ],\n        SKY: [\n                'The Sky', 6\n        ],\n        HSB: [\n                'High Security Base', 7\n        ],\n        GRB: [\n                'Gordon Ramsay Bolton', 8\n        ],\n        CLOCK: [\n                'Clock Dimension', 9\n        ],\n        GCT: [\n                'Grand Corrupted Tree', 10\n        ],\n        TWO_D: [\n                'The 2D Universe', 11\n        ],\n        SPOOPY: [\n                'Ancient Battlefield', 12\n        ],\n        JAKE: [\n                'Jake from Accounting', 13\n        ],\n        GAUDY: [\n                'Ary Strange Place', 14\n        ],\n        MEGA: [\n                'Mega Lands', 15\n        ],\n        UUG_RINGS: [\n                'UUG, The Unmentionable', 16\n        ],\n        BEARDVERSE: [\n                'The Beardverse', 17\n        ],\n        WANDERER: [\n                'Walderp', 18\n        ],\n        WANDERER2: [\n                'Walderp', 18\n        ],\n        BADLY_DRAWN: [\n                'Badly Drawn World', 19\n        ],\n        STEALTH: [\n                'Boring-Ass Earth', 20\n        ],\n        SLIMY: [\n                'The Beast', 21, 1\n        ],\n        SLIMY2: [\n                'The Beast', 21, 2\n        ],\n        SLIMY3: [\n                'The Beast', 21, 3\n        ],\n        SLIMY4: [\n                'The Beast', 21, 4\n        ],\n        CHOCO: [\n                'Chocolate World', 22\n        ],\n        EDGY: [\n                'The Evilverse', 23\n        ],\n        PINK: [\n                'Pretty Pink Princess Land', 24\n        ],\n        NERD: [\n                'Greasy Nerd', 25, 1\n        ],\n        NERD2: [\n                'Greasy Nerd', 25, 2\n        ],\n        NERD3: [\n                'Greasy Nerd', 25, 3\n        ],\n        NERD4: [\n                'Greasy Nerd', 25, 4\n        ],\n        META: [\n                'Meta Land', 26\n        ],\n        PARTY: [\n                'Interdimensional Party', 27\n        ],\n        MOBSTER: [\n                'The Godmother', 28, 1\n        ],\n        MOBSTER2: [\n                'The Godmother', 28, 2\n        ],\n        MOBSTER3: [\n                'The Godmother', 28, 3\n        ],\n        MOBSTER4: [\n                'The Godmother', 28, 4\n        ],\n        TYPO: [\n                'Typo Zonw', 29\n        ],\n        FAD: [\n                'The Fad-lands', 30\n        ],\n        JRPG: [\n                'JRPGVille', 31\n        ],\n        EXILE: [\n                'The Exile', 32, 1\n        ],\n        EXILE2: [\n                'The Exile', 32, 2\n        ],\n        EXILE3: [\n                'The Exile', 32, 3\n        ],\n        EXILE4: ['The Exile', 32, 4]\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import {Slot, EmptySlot, Equip, SetName} from './assets/ItemAux'\n\nexport function get_zone(zone) {\n        return SetName[Object.getOwnPropertyNames(SetName).filter(x => {\n                        return zone === SetName[x][1];\n                })[0]];\n}\n\nexport function get_max_zone(zone) {\n        let maxzone = 1;\n        /* eslint-disable-next-line array-callback-return */\n        Object.getOwnPropertyNames(SetName).map(x => {\n                maxzone = SetName[x][1] > maxzone\n                        ? SetName[x][1]\n                        : maxzone;\n        });\n        return maxzone;\n}\n\nexport function get_max_titan(zone) {\n        let maxtitan = 21;\n        /* eslint-disable-next-line array-callback-return */\n        Object.getOwnPropertyNames(SetName).map(x => {\n                if (SetName[x].length === 3 && SetName[x][1] <= zone) {\n                        maxtitan = maxtitan[1] > SetName[x][1]\n                                ? maxtitan\n                                : SetName[x];\n                }\n        });\n        return maxtitan;\n}\n\nfunction top_scorers(optimal) {\n        // only keep best candidates\n        let top_score = optimal[0].score;\n        /* eslint-disable-next-line array-callback-return */\n        optimal.map((x) => {\n                top_score = x.score > top_score\n                        ? x.score\n                        : top_score;\n        });\n        return optimal.filter((x) => (x.score === top_score));\n}\n\nfunction filter_duplicates(optimal) {\n        if (optimal.length === 1) {\n                return optimal;\n        }\n        // filter duplicates, wherever they may come from\n        let filtered = [optimal[0]];\n        for (let idx = 1; idx < optimal.length; idx++) {\n                let done = false;\n                let l = optimal[idx].items.length;\n                for (let jdx = 0; jdx < filtered.length; jdx++) {\n                        if (filtered[jdx].items.length !== l) {\n                                continue;\n                        }\n                        let tmp = {};\n                        /* eslint-disable-next-line array-callback-return */\n                        optimal[idx].items.map((item) => {\n                                tmp[item.name] = true;\n                        });\n                        /* eslint-disable-next-line array-callback-return */\n                        filtered[jdx].items.map((item) => {\n                                tmp[item.name] = true;\n                        });\n                        if (Object.getOwnPropertyNames(tmp).length !== l) {\n                                continue;\n                        }\n                        done = true;\n                        break;\n                }\n                if (!done) {\n                        filtered.push(optimal[idx]);\n                }\n        }\n        console.log('Keeping ' + filtered.length + ' out of ' + optimal.length + ' candidates.');\n        return filtered;\n}\n\nexport function compute_optimal(item_names, items, factor, totalslots, maxslots, base_layouts, zone, titanversion) {\n        if (factor.length === 0) {\n                return base_layouts;\n        }\n        const titan = get_max_titan(zone);\n        let optimal = clone(base_layouts);\n        /* eslint-disable-next-line array-callback-return */\n        optimal.map((x) => {\n                x.score = score_product(x, factor);\n                x.item_count = x.items.length;\n        });\n        optimal = top_scorers(optimal);\n        {\n                let acc_layouts = {};\n                for (let layout = 0; layout < base_layouts.length; layout++) {\n                        const base_layout = base_layouts[layout];\n                        let accslots = totalslots - base_layout.counts['Accessory'];\n                        accslots = maxslots < accslots\n                                ? maxslots\n                                : accslots;\n                        // find all possible items that can be equiped in main slots\n                        let options = Object.getOwnPropertyNames(Slot).filter((x) => {\n                                if (Slot[x][0] === 'Accessory') {\n                                        return false;\n                                }\n                                if (base_layout.counts[Slot[x][0]] > 0) {\n                                        return false;\n                                }\n                                return true;\n                        }).map((x) => (gear_slot(item_names, items, Slot[x], base_layout, zone, titan, titanversion)));\n                        let s = [options.map((x) => (x.length)).reduce((a, b) => (a * b), 1)];\n                        let remaining = options.map((x) => (pareto(x, factor)));\n                        s.push(remaining.map((x) => (x.length)).reduce((a, b) => (a * b), 1));\n                        let layouts = outfits(remaining, base_layout);\n                        layouts = pareto(layouts, factor);\n                        s.push(layouts.length);\n                        // find all possible accessories\n                        if (acc_layouts[accslots] === undefined) {\n                                let accs = gear_slot(item_names, items, Slot.ACCESSORY, base_layout, zone, titan, titanversion);\n                                s.push(accs.length);\n                                accs = pareto(accs, factor, accslots);\n                                s.push(accs.length);\n                                {\n                                        let everything = new Equip();\n                                        for (let idx = 0; idx < accs.length; idx++) {\n                                                add_equip(everything, accs[idx]);\n                                        }\n                                        accs.sort((a, b) => {\n                                                let ascore = score_product(remove_equip(clone(everything), a), factor);\n                                                let bscore = score_product(remove_equip(clone(everything), b), factor);\n                                                return bscore - ascore;\n                                        });\n                                }\n                                console.log('Processing ' + s[4] + ' out of ' + s[3] + ' accessories with ' + accslots + ' slots.');\n                                acc_layouts[accslots] = knapsack(accs, accslots, base_layout, add_equip, factor);\n                        }\n                        console.log('Processing ' + s[2] + ' out of ' + s[1] + ' out of ' + s[0] + ' gear layouts.');\n                        for (let idx in layouts) {\n                                console.log(s[4]);\n                                for (let jdx in acc_layouts[accslots]) {\n                                        let candidate = clone(layouts[idx]);\n                                        let acc_candidate = acc_layouts[accslots][jdx];\n                                        for (let kdx = base_layout.items.length; kdx < acc_candidate.items.length; kdx++) {\n                                                add_equip(candidate, acc_candidate.items[kdx]);\n                                        }\n                                        candidate.score = score_product(candidate, factor);\n                                        candidate.item_count = layouts[idx].items.length;\n                                        optimal.push(candidate);\n                                        optimal = top_scorers(optimal);\n                                }\n                        }\n                }\n        }\n        optimal = filter_duplicates(optimal);\n        /* eslint-disable-next-line no-lone-blocks */\n        {\n                // sort new accs per candidate\n                for (let idx in optimal) {\n                        let optimal_size = optimal[idx].items.length;\n                        let scores = [];\n                        for (let jdx = optimal[idx].item_count; jdx < optimal_size; jdx++) {\n                                let item = optimal[idx].items[jdx];\n                                let score = score_product(remove_equip(clone(optimal[idx]), item), factor);\n                                scores.push([score, item])\n                        }\n                        for (let jdx = optimal[idx].item_count; jdx < optimal_size; jdx++) {\n                                optimal[idx].items.pop();\n                        }\n                        scores = scores.sort((a, b) => (a[0] - b[0]));\n                        for (let jdx in scores) {\n                                optimal[idx].items.push(scores[jdx][1]);\n                        }\n                }\n        }\n        return optimal;\n}\n\nexport function add_equip(equip, item) {\n        if (item.empty) {\n                return equip;\n        }\n        for (let i = 0; i < item.statnames.length; i++) {\n                const stat = item.statnames[i];\n                equip[stat] += item[stat];\n        }\n        equip.items.push(item);\n        equip.counts[item.slot[0]] += 1;\n        return equip;\n}\n\nexport function remove_equip(equip, item) {\n        if (item.empty) {\n                return equip;\n        }\n        item = equip.items.filter((x) => (x.name === item.name))[0];\n        if (item === undefined) {\n                return equip;\n        }\n        for (let i = 0; i < item.statnames.length; i++) {\n                const stat = item.statnames[i];\n                equip[stat] -= item[stat];\n        }\n        equip.items.filter((x) => (x.name !== item.name));\n        equip.counts[item.slot[0]] -= 1;\n        return equip;\n}\n\nconst cart_aux = (a, b) => [].concat(...a.map(d => b.map(e => [].concat(d, e))));\nconst cartesian = (a, b, ...c) => (\n        b\n        ? cartesian(cart_aux(a, b), ...c)\n        : a);\n\nexport const outfits = (options, base) => {\n        if (options.length === 0) {\n                base.item_count = base.items.length;\n                return [base];\n        }\n        let tmp = cartesian(...options).map((items) => {\n                let equip = clone(base);\n                for (let i = 0; i < items.length; i++) {\n                        add_equip(equip, items[i]);\n                }\n                equip.item_count = equip.items.length;\n                return equip;\n        })\n        return tmp;\n};\n\nexport function score_product(equip, stats, add_one = false) {\n        let score = 1;\n        for (let idx in stats) {\n                let stat = stats[idx];\n                if (equip[stat] !== undefined) {\n                        score *= (\n                                add_one\n                                ? 1\n                                : 0) + equip[stat] / 100;\n                }\n        }\n        return score;\n}\n\nexport function gear_slot(names, list, type, equip, zone, titan, titanversion) {\n        const equiped = equip.items.filter((item) => (item.slot[0] === type[0])).map((x) => (x.name));\n        return names.filter((name) => {\n                if (list[name].empty) {\n                        return false;\n                }\n                if (list[name].zone[1] > zone) {\n                        // zone too high\n                        return false;\n                }\n                if (list[name].zone[1] === titan[1] && list[name].zone[2] > titanversion) {\n                        // titan version too high\n                        return false;\n                }\n\n                return list[name].slot[0] === type[0];\n        }).map((name) => (list[name])).filter((item) => (!item.disable && !equiped.includes(item.name)));\n}\n\nexport function clone(obj) {\n        let copy;\n        // Handle the 3 simple types, and null or undefined\n        if (null == obj || \"object\" != typeof obj) \n                return obj;\n        \n        // Handle Date\n        if (obj instanceof Date) {\n                copy = new Date();\n                copy.setTime(obj.getTime());\n                return copy;\n        }\n        // Handle Array\n        if (obj instanceof Array) {\n                copy = [];\n                for (let i = 0, len = obj.length; i < len; i++) {\n                        copy[i] = clone(obj[i]);\n                }\n                return copy;\n        }\n        // Handle Object\n        if (obj instanceof Object) {\n                copy = {};\n                for (let attr in obj) {\n                        if (obj.hasOwnProperty(attr)) \n                                copy[attr] = clone(obj[attr]);\n                        }\n                return copy;\n        }\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n\nfunction knapsack_combine_single(last, list, item, add, factor) {\n        for (let idx in list) {\n                let max_with = add(clone(list[idx]), item);\n                max_with.score = score_product(max_with, factor);\n                list[idx] = max_with;\n        }\n        list = list.sort((a, b) => (b.score - a.score));\n        list = pareto(list, factor);\n        //both list and last are pareto optimal internally, remains to compare them to eachother\n        last = pareto_2(list, last, factor);\n        list = pareto_2(last, list, factor)\n        let all = last.concat(list);\n        //all is pareto optimal\n        all = all.sort((a, b) => (b.score - a.score));\n        return all;\n}\n\n//Assumes all weights are 1.\nexport function knapsack(items, capacity, zero_state, add, factor) {\n        let n = items.length;\n        zero_state.score = score_product(zero_state, factor);\n        // init matrix\n        let matrix_weight = new Array(n + 1);\n        for (let i = 0; i < n + 1; i++) {\n                matrix_weight[i] = new Array(capacity + 1);\n        }\n        // fill matrix\n        for (let i = 0; i <= n; i++) {\n                let start_time = Date.now();\n                for (let w = 0; w <= capacity; w++) {\n                        if (i === 0 || w === 0) {\n                                matrix_weight[i][w] = [zero_state];\n                                continue;\n                        }\n                        // compute optimal state with item i-1 added\n                        // clone earlier entries to avoid changing them\n                        let last = clone(matrix_weight[i - 1][w]);\n                        let list = clone(matrix_weight[i - 1][w - 1]);\n                        matrix_weight[i][w] = knapsack_combine_single(last, list, items[i - 1], add, factor)\n                }\n                if (i === 0) {\n                        continue;\n                }\n                // clear memory\n                matrix_weight[i - 1] = undefined;\n                // print\n                console.log(i + '/' + n + ' ' + Math.floor((Date.now() - start_time) / 10) / 100 + ' ' + matrix_weight[i].reduce((a, b) => (a + b.length), 0) + ' ' + items[i - 1].name);\n        }\n        return matrix_weight[n][capacity];\n}\n\n//set <equal> to <false> if equal results result in a dominate call\nexport function dominates(major, minor, stats, equal = true) {\n        let major_stats = new Array(stats.length).fill(0);\n        let minor_stats = new Array(stats.length).fill(0);\n        for (let i = 0; i < stats.length; i++) {\n                let stat = stats[i];\n                let idx = major.statnames.indexOf(stat);\n                if (idx >= 0) {\n                        major_stats[i] = major[stat];\n                }\n                idx = minor.statnames.indexOf(stat);\n                if (idx >= 0) {\n                        minor_stats[i] = minor[stat];\n                }\n                if (minor_stats[i] > major_stats[i]) {\n                        return false;\n                }\n                if (minor_stats[i] < major_stats[i]) {\n                        equal = false;\n                }\n        }\n        return !equal;\n}\n\nexport function pareto(list, stats, cutoff = 1) {\n        let dominated = new Array(list.length).fill(false);\n        let empty = list[0].slot === undefined\n                ? new Equip()\n                : new EmptySlot(list[0].slot);\n        for (let i = list.length - 1; i > -1; i--) {\n                if (dominates(empty, list[i], stats, !empty.empty)) {\n                        dominated[i] = cutoff;\n                }\n                if (dominated[i] === cutoff) {\n                        continue;\n                }\n                for (let j = list.length - 1; j > -1; j--) {\n                        if (dominated[j] === cutoff) {\n                                continue;\n                        }\n                        dominated[j] += dominates(list[i], list[j], stats);\n                }\n        }\n        let result = dominated.map((val, idx) => (\n                val < cutoff\n                ? list[idx]\n                : false)).filter((val) => (val !== false));\n        if (result.length === 0) {\n                result = [empty];\n        }\n        return result;\n}\n\nexport function pareto_2(list, newlist, stats, cutoff = 1) {\n        let dominated = new Array(newlist.length).fill(false);\n        let empty = list[0].slot === undefined\n                ? new Equip()\n                : new EmptySlot(list[0].slot);\n        for (let i = list.length - 1; i > -1; i--) {\n                for (let j = newlist.length - 1; j > -1; j--) {\n                        if (dominated[j] === cutoff) {\n                                continue;\n                        }\n                        dominated[j] += dominates(list[i], newlist[j], stats);\n                }\n        }\n        let result = dominated.map((val, idx) => (\n                val < cutoff\n                ? newlist[idx]\n                : false)).filter((val) => (val !== false));\n        if (result.length === 0) {\n                result = [empty];\n        }\n        return result;\n}\n","import {\n        ItemContainer,\n        Equip,\n        Slot,\n        EmptySlot,\n        Factors,\n        update_level,\n        slotlist\n} from '../assets/ItemAux'\nimport {clone, compute_optimal} from '../util'\n\n// eslint-disable-next-line\nself.addEventListener(\"message\", optimize);\n\nfunction optimize(e) {\n        let start_time = Date.now();\n        let state = e.data.state;\n        let base_layout = [new Equip()];\n        for (let idx = 0; idx < state.factors.length; idx++) {\n                let factorname = state.factors[idx]\n                let factor = Factors[factorname][1];\n                let maxslots = state.maxslots[idx];\n                base_layout = compute_optimal(state.items.names, state.items, factor, state.accslots, maxslots, base_layout, state.zone, state.titanversion);\n        }\n        base_layout = base_layout[Math.floor(Math.random() * base_layout.length)];\n        let equip = new ItemContainer(slotlist(state.accslots));\n        let counts = Object.getOwnPropertyNames(Slot).map((x) => (0));\n        for (let idx = 0; idx < base_layout.items.length; idx++) {\n                const item = base_layout.items[idx];\n                equip[item.slot[0] + counts[item.slot[1]]] = item;\n                counts[item.slot[1]]++;\n        }\n        this.postMessage({equip: equip});\n        this.close();\n        console.log(Math.floor((Date.now() - start_time) / 10) / 100 + ' seconds')\n}\n"],"sourceRoot":""}